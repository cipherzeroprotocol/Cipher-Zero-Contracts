{
	"id": "e508b205dc8094f99d6eca23780ad54d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/govarnance/SubchainGovernanceToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.26;\n\n\n\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n//\n// To reward the Subchain validator stakers, the SubchainGovernanceToken needs to implement two methods\n// to allow the ValidatorStakeManager contract to mint new tokens for the stakers:\n//   - function mintStakerReward(address account, uint256 amount) external minterOnly returns (bool)\n//   - function stakerRewardPerBlock() external view returns (uint256)\n// In addition, the SubchainGovernanceToken needs to set the `minter` to the address of the ValidatorStakeManager\n// contract. Please see the implementation below for more details.\n//\ncontract SubchainGovernanceToken is ERC20 {\n    using Math for uint256;\n\n    event UpdateStakerRewardPerBlock(uint256 newStakerRewardPerBlock);\n    event UpdateAdmin(address newAdmin);\n    event UpdateMinter(address newMinter);\n\n    uint8 private _decimals;\n    uint256 private _stakerRewardPerBlock;\n\n    uint256 public maxSupply;\n    address public minter;\n    address public admin;\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 maxSupply_,\n        address minter_,\n        uint256 stakerRewardPerBlock_,\n        address initDistrWallet_,\n        uint256 initMintAmount_,\n        address admin_\n    ) ERC20(name_, symbol_) {\n        require(maxSupply_ < 2 ** 96, \"maxSupply too large\"); // if maxSupply is too large, it may lead to problems in staking reward calculation\n        require(\n            initMintAmount_ <= maxSupply_,\n            \"initial supply should not exceed the max supply\"\n        );\n        _decimals = decimals_;\n        maxSupply = maxSupply_;\n        minter = minter_;\n        _stakerRewardPerBlock = stakerRewardPerBlock_;\n        admin = admin_;\n        _mint(initDistrWallet_, initMintAmount_);\n        emit UpdateMinter(minter);\n        emit UpdateAdmin(admin);\n        emit UpdateStakerRewardPerBlock(_stakerRewardPerBlock);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    // This method allow the minter (e.g. the ValidatorStakeManager contract) to mint new tokens to reward\n    // the Subchain validator stakers\n    function mintStakerReward(\n        address account,\n        uint256 amount\n    ) external minterOnly returns (bool) {\n        if (msg.sender != minter) {\n            return false;\n        }\n        uint256 currentSupply = this.totalSupply();\n        if (currentSupply >= maxSupply) {\n            return false;\n        }\n        if (currentSupply + amount > maxSupply) {\n            amount = maxSupply - currentSupply;\n        }\n        _mint(account, amount);\n        return true;\n    }\n\n    // This method tells the minter (e.g. the ValidatorStakeManager contract) how many new tokens are minted\n    // per Main Chain block for the Subchain validator stakers\n    function stakerRewardPerBlock() external view returns (uint256) {\n        return _stakerRewardPerBlock;\n    }\n\n    function updateStakerRewardPerBlock(\n        uint256 stakerRewardPerBlock_\n    ) external adminOnly {\n        _stakerRewardPerBlock = stakerRewardPerBlock_;\n        emit UpdateStakerRewardPerBlock(_stakerRewardPerBlock);\n    }\n\n    function updateMinter(address minter_) external adminOnly {\n        minter = minter_;\n        emit UpdateMinter(minter);\n    }\n\n    function updateAdmin(address admin_) external adminOnly {\n        admin = admin_;\n        emit UpdateAdmin(admin);\n    }\n\n    modifier adminOnly() {\n        require(msg.sender == admin, \"Only admin can make this call\");\n        _;\n    }\n\n    modifier minterOnly() {\n        require(msg.sender == minter, \"Only minter can make this call\");\n        _;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/govarnance/SubchainGovernanceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/govarnance/SubchainGovernanceToken.sol": {
				"SubchainGovernanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakerRewardPerBlock_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initDistrWallet_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initMintAmount_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "UpdateAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newMinter",
									"type": "address"
								}
							],
							"name": "UpdateMinter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newStakerRewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "UpdateStakerRewardPerBlock",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintStakerReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakerRewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"name": "updateAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								}
							],
							"name": "updateMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakerRewardPerBlock_",
									"type": "uint256"
								}
							],
							"name": "updateStakerRewardPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":721:3810  contract SubchainGovernanceToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1111:2055  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1403:1408  name_ */\n  dup9\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1410:1417  symbol_ */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1450:1457  2 ** 96 */\n  0x01000000000000000000000000\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1437:1447  maxSupply_ */\n  dup7\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1437:1457  maxSupply_ < 2 ** 96 */\n  lt\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1429:1481  require(maxSupply_ < 2 ** 96, \"maxSupply too large\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1615:1625  maxSupply_ */\n  dup6\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1596:1611  initMintAmount_ */\n  dup3\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1596:1625  initMintAmount_ <= maxSupply_ */\n  gt\n  iszero\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1575:1698  require(... */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1720:1729  decimals_ */\n  dup7\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1708:1717  _decimals */\n  0x05\n  0x00\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1708:1729  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1751:1761  maxSupply_ */\n  dup6\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1739:1748  maxSupply */\n  0x07\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1739:1761  maxSupply = maxSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1780:1787  minter_ */\n  dup5\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1771:1777  minter */\n  0x08\n  0x00\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1771:1787  minter = minter_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1821:1842  stakerRewardPerBlock_ */\n  dup4\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1797:1818  _stakerRewardPerBlock */\n  0x06\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1797:1842  _stakerRewardPerBlock = stakerRewardPerBlock_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1860:1866  admin_ */\n  dup1\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1852:1857  admin */\n  0x09\n  0x00\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1852:1866  admin = admin_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1876:1916  _mint(initDistrWallet_, initMintAmount_) */\n  tag_17\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1882:1898  initDistrWallet_ */\n  dup4\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1900:1915  initMintAmount_ */\n  dup4\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1876:1881  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1876:1916  _mint(initDistrWallet_, initMintAmount_) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1931:1951  UpdateMinter(minter) */\n  0x94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1944:1950  minter */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1931:1951  UpdateMinter(minter) */\n  mload(0x40)\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1966:1984  UpdateAdmin(admin) */\n  0xbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1978:1983  admin */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1966:1984  UpdateAdmin(admin) */\n  mload(0x40)\n  tag_21\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1999:2048  UpdateStakerRewardPerBlock(_stakerRewardPerBlock) */\n  0xd65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e243\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2026:2047  _stakerRewardPerBlock */\n  sload(0x06)\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1999:2048  UpdateStakerRewardPerBlock(_stakerRewardPerBlock) */\n  mload(0x40)\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1111:2055  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":721:3810  contract SubchainGovernanceToken is ERC20 {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_41:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_43:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_44:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_45:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_46:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_47:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_48:\n    /* \"#utility.yul\":957:984   */\n  tag_99\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_46\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_101\n  tag_47\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1030:1118   */\ntag_100:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_49:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_103\n  tag_41\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_104\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_48\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_50:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_107\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1434:1490   */\ntag_106:\n    /* \"#utility.yul\":1508:1537   */\n  tag_108\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_51:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_52:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_111\n    /* \"#utility.yul\":1885:1934   */\n  tag_112\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_50\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1869:1935   */\n  tag_49\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_114\n  tag_45\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2010:2122   */\ntag_113:\n    /* \"#utility.yul\":2131:2183   */\n  tag_115\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_51\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_53:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_118\n  tag_44\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2292:2414   */\ntag_117:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_119\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_52\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2656   */\ntag_54:\n    /* \"#utility.yul\":2605:2612   */\n  0x00\n    /* \"#utility.yul\":2645:2649   */\n  0xff\n    /* \"#utility.yul\":2638:2643   */\n  dup3\n    /* \"#utility.yul\":2634:2650   */\n  and\n    /* \"#utility.yul\":2623:2650   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2656   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2662:2780   */\ntag_55:\n    /* \"#utility.yul\":2733:2755   */\n  tag_122\n    /* \"#utility.yul\":2749:2754   */\n  dup2\n    /* \"#utility.yul\":2733:2755   */\n  tag_54\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2726:2731   */\n  dup2\n    /* \"#utility.yul\":2723:2756   */\n  eq\n    /* \"#utility.yul\":2713:2774   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":2770:2771   */\n  0x00\n    /* \"#utility.yul\":2767:2768   */\n  dup1\n    /* \"#utility.yul\":2760:2772   */\n  revert\n    /* \"#utility.yul\":2713:2774   */\ntag_123:\n    /* \"#utility.yul\":2662:2780   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2786:2925   */\ntag_56:\n    /* \"#utility.yul\":2841:2846   */\n  0x00\n    /* \"#utility.yul\":2872:2878   */\n  dup2\n    /* \"#utility.yul\":2866:2879   */\n  mload\n    /* \"#utility.yul\":2857:2879   */\n  swap1\n  pop\n    /* \"#utility.yul\":2888:2919   */\n  tag_125\n    /* \"#utility.yul\":2913:2918   */\n  dup2\n    /* \"#utility.yul\":2888:2919   */\n  tag_55\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2786:2925   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2931:3008   */\ntag_57:\n    /* \"#utility.yul\":2968:2975   */\n  0x00\n    /* \"#utility.yul\":2997:3002   */\n  dup2\n    /* \"#utility.yul\":2986:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2931:3008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:3136   */\ntag_58:\n    /* \"#utility.yul\":3087:3111   */\n  tag_128\n    /* \"#utility.yul\":3105:3110   */\n  dup2\n    /* \"#utility.yul\":3087:3111   */\n  tag_57\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3080:3085   */\n  dup2\n    /* \"#utility.yul\":3077:3112   */\n  eq\n    /* \"#utility.yul\":3067:3130   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":3126:3127   */\n  0x00\n    /* \"#utility.yul\":3123:3124   */\n  dup1\n    /* \"#utility.yul\":3116:3128   */\n  revert\n    /* \"#utility.yul\":3067:3130   */\ntag_129:\n    /* \"#utility.yul\":3014:3136   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3142:3285   */\ntag_59:\n    /* \"#utility.yul\":3199:3204   */\n  0x00\n    /* \"#utility.yul\":3230:3236   */\n  dup2\n    /* \"#utility.yul\":3224:3237   */\n  mload\n    /* \"#utility.yul\":3215:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3246:3279   */\n  tag_131\n    /* \"#utility.yul\":3273:3278   */\n  dup2\n    /* \"#utility.yul\":3246:3279   */\n  tag_58\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3142:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:3417   */\ntag_60:\n    /* \"#utility.yul\":3328:3335   */\n  0x00\n    /* \"#utility.yul\":3368:3410   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3361:3366   */\n  dup3\n    /* \"#utility.yul\":3357:3411   */\n  and\n    /* \"#utility.yul\":3346:3411   */\n  swap1\n  pop\n    /* \"#utility.yul\":3291:3417   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3423:3519   */\ntag_61:\n    /* \"#utility.yul\":3460:3467   */\n  0x00\n    /* \"#utility.yul\":3489:3513   */\n  tag_134\n    /* \"#utility.yul\":3507:3512   */\n  dup3\n    /* \"#utility.yul\":3489:3513   */\n  tag_60\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3478:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3423:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3647   */\ntag_62:\n    /* \"#utility.yul\":3598:3622   */\n  tag_136\n    /* \"#utility.yul\":3616:3621   */\n  dup2\n    /* \"#utility.yul\":3598:3622   */\n  tag_61\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3591:3596   */\n  dup2\n    /* \"#utility.yul\":3588:3623   */\n  eq\n    /* \"#utility.yul\":3578:3641   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3637:3638   */\n  0x00\n    /* \"#utility.yul\":3634:3635   */\n  dup1\n    /* \"#utility.yul\":3627:3639   */\n  revert\n    /* \"#utility.yul\":3578:3641   */\ntag_137:\n    /* \"#utility.yul\":3525:3647   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3653:3796   */\ntag_63:\n    /* \"#utility.yul\":3710:3715   */\n  0x00\n    /* \"#utility.yul\":3741:3747   */\n  dup2\n    /* \"#utility.yul\":3735:3748   */\n  mload\n    /* \"#utility.yul\":3726:3748   */\n  swap1\n  pop\n    /* \"#utility.yul\":3757:3790   */\n  tag_139\n    /* \"#utility.yul\":3784:3789   */\n  dup2\n    /* \"#utility.yul\":3757:3790   */\n  tag_62\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3653:3796   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3802:5749   */\ntag_3:\n    /* \"#utility.yul\":3962:3968   */\n  0x00\n    /* \"#utility.yul\":3970:3976   */\n  dup1\n    /* \"#utility.yul\":3978:3984   */\n  0x00\n    /* \"#utility.yul\":3986:3992   */\n  dup1\n    /* \"#utility.yul\":3994:4000   */\n  0x00\n    /* \"#utility.yul\":4002:4008   */\n  dup1\n    /* \"#utility.yul\":4010:4016   */\n  0x00\n    /* \"#utility.yul\":4018:4024   */\n  dup1\n    /* \"#utility.yul\":4026:4032   */\n  0x00\n    /* \"#utility.yul\":4075:4078   */\n  0x0120\n    /* \"#utility.yul\":4063:4072   */\n  dup11\n    /* \"#utility.yul\":4054:4061   */\n  dup13\n    /* \"#utility.yul\":4050:4073   */\n  sub\n    /* \"#utility.yul\":4046:4079   */\n  slt\n    /* \"#utility.yul\":4043:4163   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4082:4161   */\n  tag_142\n  tag_42\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4043:4163   */\ntag_141:\n    /* \"#utility.yul\":4223:4224   */\n  0x00\n    /* \"#utility.yul\":4212:4221   */\n  dup11\n    /* \"#utility.yul\":4208:4225   */\n  add\n    /* \"#utility.yul\":4202:4226   */\n  mload\n    /* \"#utility.yul\":4253:4271   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4245:4251   */\n  dup2\n    /* \"#utility.yul\":4242:4272   */\n  gt\n    /* \"#utility.yul\":4239:4356   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":4275:4354   */\n  tag_144\n  tag_43\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4239:4356   */\ntag_143:\n    /* \"#utility.yul\":4380:4454   */\n  tag_145\n    /* \"#utility.yul\":4446:4453   */\n  dup13\n    /* \"#utility.yul\":4437:4443   */\n  dup3\n    /* \"#utility.yul\":4426:4435   */\n  dup14\n    /* \"#utility.yul\":4422:4444   */\n  add\n    /* \"#utility.yul\":4380:4454   */\n  tag_53\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4370:4454   */\n  swap10\n  pop\n    /* \"#utility.yul\":4173:4464   */\n  pop\n    /* \"#utility.yul\":4524:4526   */\n  0x20\n    /* \"#utility.yul\":4513:4522   */\n  dup11\n    /* \"#utility.yul\":4509:4527   */\n  add\n    /* \"#utility.yul\":4503:4528   */\n  mload\n    /* \"#utility.yul\":4555:4573   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4547:4553   */\n  dup2\n    /* \"#utility.yul\":4544:4574   */\n  gt\n    /* \"#utility.yul\":4541:4658   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":4577:4656   */\n  tag_147\n  tag_43\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4541:4658   */\ntag_146:\n    /* \"#utility.yul\":4682:4756   */\n  tag_148\n    /* \"#utility.yul\":4748:4755   */\n  dup13\n    /* \"#utility.yul\":4739:4745   */\n  dup3\n    /* \"#utility.yul\":4728:4737   */\n  dup14\n    /* \"#utility.yul\":4724:4746   */\n  add\n    /* \"#utility.yul\":4682:4756   */\n  tag_53\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4672:4756   */\n  swap9\n  pop\n    /* \"#utility.yul\":4474:4766   */\n  pop\n    /* \"#utility.yul\":4805:4807   */\n  0x40\n    /* \"#utility.yul\":4831:4893   */\n  tag_149\n    /* \"#utility.yul\":4885:4892   */\n  dup13\n    /* \"#utility.yul\":4876:4882   */\n  dup3\n    /* \"#utility.yul\":4865:4874   */\n  dup14\n    /* \"#utility.yul\":4861:4883   */\n  add\n    /* \"#utility.yul\":4831:4893   */\n  tag_56\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4821:4893   */\n  swap8\n  pop\n    /* \"#utility.yul\":4776:4903   */\n  pop\n    /* \"#utility.yul\":4942:4944   */\n  0x60\n    /* \"#utility.yul\":4968:5032   */\n  tag_150\n    /* \"#utility.yul\":5024:5031   */\n  dup13\n    /* \"#utility.yul\":5015:5021   */\n  dup3\n    /* \"#utility.yul\":5004:5013   */\n  dup14\n    /* \"#utility.yul\":5000:5022   */\n  add\n    /* \"#utility.yul\":4968:5032   */\n  tag_59\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4958:5032   */\n  swap7\n  pop\n    /* \"#utility.yul\":4913:5042   */\n  pop\n    /* \"#utility.yul\":5081:5084   */\n  0x80\n    /* \"#utility.yul\":5108:5172   */\n  tag_151\n    /* \"#utility.yul\":5164:5171   */\n  dup13\n    /* \"#utility.yul\":5155:5161   */\n  dup3\n    /* \"#utility.yul\":5144:5153   */\n  dup14\n    /* \"#utility.yul\":5140:5162   */\n  add\n    /* \"#utility.yul\":5108:5172   */\n  tag_63\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5098:5172   */\n  swap6\n  pop\n    /* \"#utility.yul\":5052:5182   */\n  pop\n    /* \"#utility.yul\":5221:5224   */\n  0xa0\n    /* \"#utility.yul\":5248:5312   */\n  tag_152\n    /* \"#utility.yul\":5304:5311   */\n  dup13\n    /* \"#utility.yul\":5295:5301   */\n  dup3\n    /* \"#utility.yul\":5284:5293   */\n  dup14\n    /* \"#utility.yul\":5280:5302   */\n  add\n    /* \"#utility.yul\":5248:5312   */\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5238:5312   */\n  swap5\n  pop\n    /* \"#utility.yul\":5192:5322   */\n  pop\n    /* \"#utility.yul\":5361:5364   */\n  0xc0\n    /* \"#utility.yul\":5388:5452   */\n  tag_153\n    /* \"#utility.yul\":5444:5451   */\n  dup13\n    /* \"#utility.yul\":5435:5441   */\n  dup3\n    /* \"#utility.yul\":5424:5433   */\n  dup14\n    /* \"#utility.yul\":5420:5442   */\n  add\n    /* \"#utility.yul\":5388:5452   */\n  tag_63\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5378:5452   */\n  swap4\n  pop\n    /* \"#utility.yul\":5332:5462   */\n  pop\n    /* \"#utility.yul\":5501:5504   */\n  0xe0\n    /* \"#utility.yul\":5528:5592   */\n  tag_154\n    /* \"#utility.yul\":5584:5591   */\n  dup13\n    /* \"#utility.yul\":5575:5581   */\n  dup3\n    /* \"#utility.yul\":5564:5573   */\n  dup14\n    /* \"#utility.yul\":5560:5582   */\n  add\n    /* \"#utility.yul\":5528:5592   */\n  tag_59\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5518:5592   */\n  swap3\n  pop\n    /* \"#utility.yul\":5472:5602   */\n  pop\n    /* \"#utility.yul\":5641:5644   */\n  0x0100\n    /* \"#utility.yul\":5668:5732   */\n  tag_155\n    /* \"#utility.yul\":5724:5731   */\n  dup13\n    /* \"#utility.yul\":5715:5721   */\n  dup3\n    /* \"#utility.yul\":5704:5713   */\n  dup14\n    /* \"#utility.yul\":5700:5722   */\n  add\n    /* \"#utility.yul\":5668:5732   */\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5658:5732   */\n  swap2\n  pop\n    /* \"#utility.yul\":5612:5742   */\n  pop\n    /* \"#utility.yul\":3802:5749   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  jump\t// out\n    /* \"#utility.yul\":5755:5854   */\ntag_64:\n    /* \"#utility.yul\":5807:5813   */\n  0x00\n    /* \"#utility.yul\":5841:5846   */\n  dup2\n    /* \"#utility.yul\":5835:5847   */\n  mload\n    /* \"#utility.yul\":5825:5847   */\n  swap1\n  pop\n    /* \"#utility.yul\":5755:5854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5860:6040   */\ntag_65:\n    /* \"#utility.yul\":5908:5985   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5905:5906   */\n  0x00\n    /* \"#utility.yul\":5898:5986   */\n  mstore\n    /* \"#utility.yul\":6005:6009   */\n  0x22\n    /* \"#utility.yul\":6002:6003   */\n  0x04\n    /* \"#utility.yul\":5995:6010   */\n  mstore\n    /* \"#utility.yul\":6029:6033   */\n  0x24\n    /* \"#utility.yul\":6026:6027   */\n  0x00\n    /* \"#utility.yul\":6019:6034   */\n  revert\n    /* \"#utility.yul\":6046:6366   */\ntag_66:\n    /* \"#utility.yul\":6090:6096   */\n  0x00\n    /* \"#utility.yul\":6127:6128   */\n  0x02\n    /* \"#utility.yul\":6121:6125   */\n  dup3\n    /* \"#utility.yul\":6117:6129   */\n  div\n    /* \"#utility.yul\":6107:6129   */\n  swap1\n  pop\n    /* \"#utility.yul\":6174:6175   */\n  0x01\n    /* \"#utility.yul\":6168:6172   */\n  dup3\n    /* \"#utility.yul\":6164:6176   */\n  and\n    /* \"#utility.yul\":6195:6213   */\n  dup1\n    /* \"#utility.yul\":6185:6266   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":6251:6255   */\n  0x7f\n    /* \"#utility.yul\":6243:6249   */\n  dup3\n    /* \"#utility.yul\":6239:6256   */\n  and\n    /* \"#utility.yul\":6229:6256   */\n  swap2\n  pop\n    /* \"#utility.yul\":6185:6266   */\ntag_159:\n    /* \"#utility.yul\":6313:6315   */\n  0x20\n    /* \"#utility.yul\":6305:6311   */\n  dup3\n    /* \"#utility.yul\":6302:6316   */\n  lt\n    /* \"#utility.yul\":6282:6300   */\n  dup2\n    /* \"#utility.yul\":6279:6317   */\n  sub\n    /* \"#utility.yul\":6276:6360   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6332:6350   */\n  tag_161\n  tag_65\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6276:6360   */\ntag_160:\n    /* \"#utility.yul\":6097:6366   */\n  pop\n    /* \"#utility.yul\":6046:6366   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6372:6513   */\ntag_67:\n    /* \"#utility.yul\":6421:6425   */\n  0x00\n    /* \"#utility.yul\":6444:6447   */\n  dup2\n    /* \"#utility.yul\":6436:6447   */\n  swap1\n  pop\n    /* \"#utility.yul\":6467:6470   */\n  dup2\n    /* \"#utility.yul\":6464:6465   */\n  0x00\n    /* \"#utility.yul\":6457:6471   */\n  mstore\n    /* \"#utility.yul\":6501:6505   */\n  0x20\n    /* \"#utility.yul\":6498:6499   */\n  0x00\n    /* \"#utility.yul\":6488:6506   */\n  keccak256\n    /* \"#utility.yul\":6480:6506   */\n  swap1\n  pop\n    /* \"#utility.yul\":6372:6513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6519:6612   */\ntag_68:\n    /* \"#utility.yul\":6556:6562   */\n  0x00\n    /* \"#utility.yul\":6603:6605   */\n  0x20\n    /* \"#utility.yul\":6598:6600   */\n  0x1f\n    /* \"#utility.yul\":6591:6596   */\n  dup4\n    /* \"#utility.yul\":6587:6601   */\n  add\n    /* \"#utility.yul\":6583:6606   */\n  div\n    /* \"#utility.yul\":6573:6606   */\n  swap1\n  pop\n    /* \"#utility.yul\":6519:6612   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6618:6725   */\ntag_69:\n    /* \"#utility.yul\":6662:6670   */\n  0x00\n    /* \"#utility.yul\":6712:6717   */\n  dup3\n    /* \"#utility.yul\":6706:6710   */\n  dup3\n    /* \"#utility.yul\":6702:6718   */\n  shl\n    /* \"#utility.yul\":6681:6718   */\n  swap1\n  pop\n    /* \"#utility.yul\":6618:6725   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6731:7124   */\ntag_70:\n    /* \"#utility.yul\":6800:6806   */\n  0x00\n    /* \"#utility.yul\":6850:6851   */\n  0x08\n    /* \"#utility.yul\":6838:6848   */\n  dup4\n    /* \"#utility.yul\":6834:6852   */\n  mul\n    /* \"#utility.yul\":6873:6970   */\n  tag_166\n    /* \"#utility.yul\":6903:6969   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6892:6901   */\n  dup3\n    /* \"#utility.yul\":6873:6970   */\n  tag_69\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6991:7030   */\n  tag_167\n    /* \"#utility.yul\":7021:7029   */\n  dup7\n    /* \"#utility.yul\":7010:7019   */\n  dup4\n    /* \"#utility.yul\":6991:7030   */\n  tag_69\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6979:7030   */\n  swap6\n  pop\n    /* \"#utility.yul\":7063:7067   */\n  dup1\n    /* \"#utility.yul\":7059:7068   */\n  not\n    /* \"#utility.yul\":7052:7057   */\n  dup5\n    /* \"#utility.yul\":7048:7069   */\n  and\n    /* \"#utility.yul\":7039:7069   */\n  swap4\n  pop\n    /* \"#utility.yul\":7112:7116   */\n  dup1\n    /* \"#utility.yul\":7102:7110   */\n  dup7\n    /* \"#utility.yul\":7098:7117   */\n  and\n    /* \"#utility.yul\":7091:7096   */\n  dup5\n    /* \"#utility.yul\":7088:7118   */\n  or\n    /* \"#utility.yul\":7078:7118   */\n  swap3\n  pop\n    /* \"#utility.yul\":6807:7124   */\n  pop\n  pop\n    /* \"#utility.yul\":6731:7124   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7130:7190   */\ntag_71:\n    /* \"#utility.yul\":7158:7161   */\n  0x00\n    /* \"#utility.yul\":7179:7184   */\n  dup2\n    /* \"#utility.yul\":7172:7184   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7190   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7196:7338   */\ntag_72:\n    /* \"#utility.yul\":7246:7255   */\n  0x00\n    /* \"#utility.yul\":7279:7332   */\n  tag_170\n    /* \"#utility.yul\":7297:7331   */\n  tag_171\n    /* \"#utility.yul\":7306:7330   */\n  tag_172\n    /* \"#utility.yul\":7324:7329   */\n  dup5\n    /* \"#utility.yul\":7306:7330   */\n  tag_57\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7297:7331   */\n  tag_71\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7279:7332   */\n  tag_57\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7266:7332   */\n  swap1\n  pop\n    /* \"#utility.yul\":7196:7338   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7344:7419   */\ntag_73:\n    /* \"#utility.yul\":7387:7390   */\n  0x00\n    /* \"#utility.yul\":7408:7413   */\n  dup2\n    /* \"#utility.yul\":7401:7413   */\n  swap1\n  pop\n    /* \"#utility.yul\":7344:7419   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7425:7694   */\ntag_74:\n    /* \"#utility.yul\":7535:7574   */\n  tag_175\n    /* \"#utility.yul\":7566:7573   */\n  dup4\n    /* \"#utility.yul\":7535:7574   */\n  tag_72\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7596:7687   */\n  tag_176\n    /* \"#utility.yul\":7645:7686   */\n  tag_177\n    /* \"#utility.yul\":7669:7685   */\n  dup3\n    /* \"#utility.yul\":7645:7686   */\n  tag_73\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7637:7643   */\n  dup5\n    /* \"#utility.yul\":7630:7634   */\n  dup5\n    /* \"#utility.yul\":7624:7635   */\n  sload\n    /* \"#utility.yul\":7596:7687   */\n  tag_70\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7590:7594   */\n  dup3\n    /* \"#utility.yul\":7583:7688   */\n  sstore\n    /* \"#utility.yul\":7501:7694   */\n  pop\n    /* \"#utility.yul\":7425:7694   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7700:7773   */\ntag_75:\n    /* \"#utility.yul\":7745:7748   */\n  0x00\n    /* \"#utility.yul\":7700:7773   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7779:7968   */\ntag_76:\n    /* \"#utility.yul\":7856:7888   */\n  tag_180\n  tag_75\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7897:7962   */\n  tag_181\n    /* \"#utility.yul\":7955:7961   */\n  dup2\n    /* \"#utility.yul\":7947:7953   */\n  dup5\n    /* \"#utility.yul\":7941:7945   */\n  dup5\n    /* \"#utility.yul\":7897:7962   */\n  tag_74\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7832:7968   */\n  pop\n    /* \"#utility.yul\":7779:7968   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7974:8160   */\ntag_77:\n    /* \"#utility.yul\":8034:8154   */\ntag_183:\n    /* \"#utility.yul\":8051:8054   */\n  dup2\n    /* \"#utility.yul\":8044:8049   */\n  dup2\n    /* \"#utility.yul\":8041:8055   */\n  lt\n    /* \"#utility.yul\":8034:8154   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8105:8144   */\n  tag_186\n    /* \"#utility.yul\":8142:8143   */\n  0x00\n    /* \"#utility.yul\":8135:8140   */\n  dup3\n    /* \"#utility.yul\":8105:8144   */\n  tag_76\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8078:8079   */\n  0x01\n    /* \"#utility.yul\":8071:8076   */\n  dup2\n    /* \"#utility.yul\":8067:8080   */\n  add\n    /* \"#utility.yul\":8058:8080   */\n  swap1\n  pop\n    /* \"#utility.yul\":8034:8154   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":7974:8160   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8166:8709   */\ntag_78:\n    /* \"#utility.yul\":8267:8269   */\n  0x1f\n    /* \"#utility.yul\":8262:8265   */\n  dup3\n    /* \"#utility.yul\":8259:8270   */\n  gt\n    /* \"#utility.yul\":8256:8702   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8301:8339   */\n  tag_189\n    /* \"#utility.yul\":8333:8338   */\n  dup2\n    /* \"#utility.yul\":8301:8339   */\n  tag_67\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8385:8414   */\n  tag_190\n    /* \"#utility.yul\":8403:8413   */\n  dup5\n    /* \"#utility.yul\":8385:8414   */\n  tag_68\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8375:8383   */\n  dup2\n    /* \"#utility.yul\":8371:8415   */\n  add\n    /* \"#utility.yul\":8568:8570   */\n  0x20\n    /* \"#utility.yul\":8556:8566   */\n  dup6\n    /* \"#utility.yul\":8553:8571   */\n  lt\n    /* \"#utility.yul\":8550:8599   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8589:8597   */\n  dup2\n    /* \"#utility.yul\":8574:8597   */\n  swap1\n  pop\n    /* \"#utility.yul\":8550:8599   */\ntag_191:\n    /* \"#utility.yul\":8612:8692   */\n  tag_192\n    /* \"#utility.yul\":8668:8690   */\n  tag_193\n    /* \"#utility.yul\":8686:8689   */\n  dup6\n    /* \"#utility.yul\":8668:8690   */\n  tag_68\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8658:8666   */\n  dup4\n    /* \"#utility.yul\":8654:8691   */\n  add\n    /* \"#utility.yul\":8641:8652   */\n  dup3\n    /* \"#utility.yul\":8612:8692   */\n  tag_77\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8271:8702   */\n  pop\n  pop\n    /* \"#utility.yul\":8256:8702   */\ntag_188:\n    /* \"#utility.yul\":8166:8709   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8715:8832   */\ntag_79:\n    /* \"#utility.yul\":8769:8777   */\n  0x00\n    /* \"#utility.yul\":8819:8824   */\n  dup3\n    /* \"#utility.yul\":8813:8817   */\n  dup3\n    /* \"#utility.yul\":8809:8825   */\n  shr\n    /* \"#utility.yul\":8788:8825   */\n  swap1\n  pop\n    /* \"#utility.yul\":8715:8832   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8838:9007   */\ntag_80:\n    /* \"#utility.yul\":8882:8888   */\n  0x00\n    /* \"#utility.yul\":8915:8966   */\n  tag_196\n    /* \"#utility.yul\":8963:8964   */\n  0x00\n    /* \"#utility.yul\":8959:8965   */\n  not\n    /* \"#utility.yul\":8951:8956   */\n  dup5\n    /* \"#utility.yul\":8948:8949   */\n  0x08\n    /* \"#utility.yul\":8944:8957   */\n  mul\n    /* \"#utility.yul\":8915:8966   */\n  tag_79\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8911:8967   */\n  not\n    /* \"#utility.yul\":8996:9000   */\n  dup1\n    /* \"#utility.yul\":8990:8994   */\n  dup4\n    /* \"#utility.yul\":8986:9001   */\n  and\n    /* \"#utility.yul\":8976:9001   */\n  swap2\n  pop\n    /* \"#utility.yul\":8889:9007   */\n  pop\n    /* \"#utility.yul\":8838:9007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9012:9307   */\ntag_81:\n    /* \"#utility.yul\":9088:9092   */\n  0x00\n    /* \"#utility.yul\":9234:9263   */\n  tag_198\n    /* \"#utility.yul\":9259:9262   */\n  dup4\n    /* \"#utility.yul\":9253:9257   */\n  dup4\n    /* \"#utility.yul\":9234:9263   */\n  tag_80\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9226:9263   */\n  swap2\n  pop\n    /* \"#utility.yul\":9296:9299   */\n  dup3\n    /* \"#utility.yul\":9293:9294   */\n  0x02\n    /* \"#utility.yul\":9289:9300   */\n  mul\n    /* \"#utility.yul\":9283:9287   */\n  dup3\n    /* \"#utility.yul\":9280:9301   */\n  or\n    /* \"#utility.yul\":9272:9301   */\n  swap1\n  pop\n    /* \"#utility.yul\":9012:9307   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9312:10707   */\ntag_8:\n    /* \"#utility.yul\":9429:9466   */\n  tag_200\n    /* \"#utility.yul\":9462:9465   */\n  dup3\n    /* \"#utility.yul\":9429:9466   */\n  tag_64\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9531:9549   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9523:9529   */\n  dup2\n    /* \"#utility.yul\":9520:9550   */\n  gt\n    /* \"#utility.yul\":9517:9573   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":9553:9571   */\n  tag_202\n  tag_47\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9517:9573   */\ntag_201:\n    /* \"#utility.yul\":9597:9635   */\n  tag_203\n    /* \"#utility.yul\":9629:9633   */\n  dup3\n    /* \"#utility.yul\":9623:9634   */\n  sload\n    /* \"#utility.yul\":9597:9635   */\n  tag_66\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9682:9749   */\n  tag_204\n    /* \"#utility.yul\":9742:9748   */\n  dup3\n    /* \"#utility.yul\":9734:9740   */\n  dup3\n    /* \"#utility.yul\":9728:9732   */\n  dup6\n    /* \"#utility.yul\":9682:9749   */\n  tag_78\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9776:9777   */\n  0x00\n    /* \"#utility.yul\":9800:9804   */\n  0x20\n    /* \"#utility.yul\":9787:9804   */\n  swap1\n  pop\n    /* \"#utility.yul\":9832:9834   */\n  0x1f\n    /* \"#utility.yul\":9824:9830   */\n  dup4\n    /* \"#utility.yul\":9821:9835   */\n  gt\n    /* \"#utility.yul\":9849:9850   */\n  0x01\n    /* \"#utility.yul\":9844:10462   */\n  dup2\n  eq\n  tag_206\n  jumpi\n    /* \"#utility.yul\":10506:10507   */\n  0x00\n    /* \"#utility.yul\":10523:10529   */\n  dup5\n    /* \"#utility.yul\":10520:10597   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":10572:10581   */\n  dup3\n    /* \"#utility.yul\":10567:10570   */\n  dup8\n    /* \"#utility.yul\":10563:10582   */\n  add\n    /* \"#utility.yul\":10557:10583   */\n  mload\n    /* \"#utility.yul\":10548:10583   */\n  swap1\n  pop\n    /* \"#utility.yul\":10520:10597   */\ntag_207:\n    /* \"#utility.yul\":10623:10690   */\n  tag_208\n    /* \"#utility.yul\":10683:10689   */\n  dup6\n    /* \"#utility.yul\":10676:10681   */\n  dup3\n    /* \"#utility.yul\":10623:10690   */\n  tag_81\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10617:10621   */\n  dup7\n    /* \"#utility.yul\":10610:10691   */\n  sstore\n    /* \"#utility.yul\":10479:10701   */\n  pop\n    /* \"#utility.yul\":9814:10701   */\n  jump(tag_205)\n    /* \"#utility.yul\":9844:10462   */\ntag_206:\n    /* \"#utility.yul\":9896:9900   */\n  0x1f\n    /* \"#utility.yul\":9892:9901   */\n  not\n    /* \"#utility.yul\":9884:9890   */\n  dup5\n    /* \"#utility.yul\":9880:9902   */\n  and\n    /* \"#utility.yul\":9930:9967   */\n  tag_209\n    /* \"#utility.yul\":9962:9966   */\n  dup7\n    /* \"#utility.yul\":9930:9967   */\n  tag_67\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9989:9990   */\n  0x00\n    /* \"#utility.yul\":10003:10211   */\ntag_210:\n    /* \"#utility.yul\":10017:10024   */\n  dup3\n    /* \"#utility.yul\":10014:10015   */\n  dup2\n    /* \"#utility.yul\":10011:10025   */\n  lt\n    /* \"#utility.yul\":10003:10211   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":10096:10105   */\n  dup5\n    /* \"#utility.yul\":10091:10094   */\n  dup10\n    /* \"#utility.yul\":10087:10106   */\n  add\n    /* \"#utility.yul\":10081:10107   */\n  mload\n    /* \"#utility.yul\":10073:10079   */\n  dup3\n    /* \"#utility.yul\":10066:10108   */\n  sstore\n    /* \"#utility.yul\":10147:10148   */\n  0x01\n    /* \"#utility.yul\":10139:10145   */\n  dup3\n    /* \"#utility.yul\":10135:10149   */\n  add\n    /* \"#utility.yul\":10125:10149   */\n  swap2\n  pop\n    /* \"#utility.yul\":10194:10196   */\n  0x20\n    /* \"#utility.yul\":10183:10192   */\n  dup6\n    /* \"#utility.yul\":10179:10197   */\n  add\n    /* \"#utility.yul\":10166:10197   */\n  swap5\n  pop\n    /* \"#utility.yul\":10040:10044   */\n  0x20\n    /* \"#utility.yul\":10037:10038   */\n  dup2\n    /* \"#utility.yul\":10033:10045   */\n  add\n    /* \"#utility.yul\":10028:10045   */\n  swap1\n  pop\n    /* \"#utility.yul\":10003:10211   */\n  jump(tag_210)\ntag_212:\n    /* \"#utility.yul\":10239:10245   */\n  dup7\n    /* \"#utility.yul\":10230:10237   */\n  dup4\n    /* \"#utility.yul\":10227:10246   */\n  lt\n    /* \"#utility.yul\":10224:10403   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":10297:10306   */\n  dup5\n    /* \"#utility.yul\":10292:10295   */\n  dup10\n    /* \"#utility.yul\":10288:10307   */\n  add\n    /* \"#utility.yul\":10282:10308   */\n  mload\n    /* \"#utility.yul\":10340:10388   */\n  tag_214\n    /* \"#utility.yul\":10382:10386   */\n  0x1f\n    /* \"#utility.yul\":10374:10380   */\n  dup10\n    /* \"#utility.yul\":10370:10387   */\n  and\n    /* \"#utility.yul\":10359:10368   */\n  dup3\n    /* \"#utility.yul\":10340:10388   */\n  tag_80\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10332:10338   */\n  dup4\n    /* \"#utility.yul\":10325:10389   */\n  sstore\n    /* \"#utility.yul\":10247:10403   */\n  pop\n    /* \"#utility.yul\":10224:10403   */\ntag_213:\n    /* \"#utility.yul\":10449:10450   */\n  0x01\n    /* \"#utility.yul\":10445:10446   */\n  0x02\n    /* \"#utility.yul\":10437:10443   */\n  dup9\n    /* \"#utility.yul\":10433:10447   */\n  mul\n    /* \"#utility.yul\":10429:10451   */\n  add\n    /* \"#utility.yul\":10423:10427   */\n  dup9\n    /* \"#utility.yul\":10416:10452   */\n  sstore\n    /* \"#utility.yul\":9851:10462   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9814:10701   */\ntag_205:\n  pop\n    /* \"#utility.yul\":9404:10707   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9312:10707   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10713:10882   */\ntag_82:\n    /* \"#utility.yul\":10797:10808   */\n  0x00\n    /* \"#utility.yul\":10831:10837   */\n  dup3\n    /* \"#utility.yul\":10826:10829   */\n  dup3\n    /* \"#utility.yul\":10819:10838   */\n  mstore\n    /* \"#utility.yul\":10871:10875   */\n  0x20\n    /* \"#utility.yul\":10866:10869   */\n  dup3\n    /* \"#utility.yul\":10862:10876   */\n  add\n    /* \"#utility.yul\":10847:10876   */\n  swap1\n  pop\n    /* \"#utility.yul\":10713:10882   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10888:11057   */\ntag_83:\n    /* \"#utility.yul\":11028:11049   */\n  0x6d6178537570706c7920746f6f206c6172676500000000000000000000000000\n    /* \"#utility.yul\":11024:11025   */\n  0x00\n    /* \"#utility.yul\":11016:11022   */\n  dup3\n    /* \"#utility.yul\":11012:11026   */\n  add\n    /* \"#utility.yul\":11005:11050   */\n  mstore\n    /* \"#utility.yul\":10888:11057   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11063:11429   */\ntag_84:\n    /* \"#utility.yul\":11205:11208   */\n  0x00\n    /* \"#utility.yul\":11226:11293   */\n  tag_218\n    /* \"#utility.yul\":11290:11292   */\n  0x13\n    /* \"#utility.yul\":11285:11288   */\n  dup4\n    /* \"#utility.yul\":11226:11293   */\n  tag_82\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11219:11293   */\n  swap2\n  pop\n    /* \"#utility.yul\":11302:11395   */\n  tag_219\n    /* \"#utility.yul\":11391:11394   */\n  dup3\n    /* \"#utility.yul\":11302:11395   */\n  tag_83\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11420:11422   */\n  0x20\n    /* \"#utility.yul\":11415:11418   */\n  dup3\n    /* \"#utility.yul\":11411:11423   */\n  add\n    /* \"#utility.yul\":11404:11423   */\n  swap1\n  pop\n    /* \"#utility.yul\":11063:11429   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11435:11854   */\ntag_13:\n    /* \"#utility.yul\":11601:11605   */\n  0x00\n    /* \"#utility.yul\":11639:11641   */\n  0x20\n    /* \"#utility.yul\":11628:11637   */\n  dup3\n    /* \"#utility.yul\":11624:11642   */\n  add\n    /* \"#utility.yul\":11616:11642   */\n  swap1\n  pop\n    /* \"#utility.yul\":11688:11697   */\n  dup2\n    /* \"#utility.yul\":11682:11686   */\n  dup2\n    /* \"#utility.yul\":11678:11698   */\n  sub\n    /* \"#utility.yul\":11674:11675   */\n  0x00\n    /* \"#utility.yul\":11663:11672   */\n  dup4\n    /* \"#utility.yul\":11659:11676   */\n  add\n    /* \"#utility.yul\":11652:11699   */\n  mstore\n    /* \"#utility.yul\":11716:11847   */\n  tag_221\n    /* \"#utility.yul\":11842:11846   */\n  dup2\n    /* \"#utility.yul\":11716:11847   */\n  tag_84\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11708:11847   */\n  swap1\n  pop\n    /* \"#utility.yul\":11435:11854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11860:12094   */\ntag_85:\n    /* \"#utility.yul\":12000:12034   */\n  0x696e697469616c20737570706c792073686f756c64206e6f7420657863656564\n    /* \"#utility.yul\":11996:11997   */\n  0x00\n    /* \"#utility.yul\":11988:11994   */\n  dup3\n    /* \"#utility.yul\":11984:11998   */\n  add\n    /* \"#utility.yul\":11977:12035   */\n  mstore\n    /* \"#utility.yul\":12069:12086   */\n  0x20746865206d617820737570706c790000000000000000000000000000000000\n    /* \"#utility.yul\":12064:12066   */\n  0x20\n    /* \"#utility.yul\":12056:12062   */\n  dup3\n    /* \"#utility.yul\":12052:12067   */\n  add\n    /* \"#utility.yul\":12045:12087   */\n  mstore\n    /* \"#utility.yul\":11860:12094   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12100:12466   */\ntag_86:\n    /* \"#utility.yul\":12242:12245   */\n  0x00\n    /* \"#utility.yul\":12263:12330   */\n  tag_224\n    /* \"#utility.yul\":12327:12329   */\n  0x2f\n    /* \"#utility.yul\":12322:12325   */\n  dup4\n    /* \"#utility.yul\":12263:12330   */\n  tag_82\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":12256:12330   */\n  swap2\n  pop\n    /* \"#utility.yul\":12339:12432   */\n  tag_225\n    /* \"#utility.yul\":12428:12431   */\n  dup3\n    /* \"#utility.yul\":12339:12432   */\n  tag_85\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":12457:12459   */\n  0x40\n    /* \"#utility.yul\":12452:12455   */\n  dup3\n    /* \"#utility.yul\":12448:12460   */\n  add\n    /* \"#utility.yul\":12441:12460   */\n  swap1\n  pop\n    /* \"#utility.yul\":12100:12466   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12472:12891   */\ntag_16:\n    /* \"#utility.yul\":12638:12642   */\n  0x00\n    /* \"#utility.yul\":12676:12678   */\n  0x20\n    /* \"#utility.yul\":12665:12674   */\n  dup3\n    /* \"#utility.yul\":12661:12679   */\n  add\n    /* \"#utility.yul\":12653:12679   */\n  swap1\n  pop\n    /* \"#utility.yul\":12725:12734   */\n  dup2\n    /* \"#utility.yul\":12719:12723   */\n  dup2\n    /* \"#utility.yul\":12715:12735   */\n  sub\n    /* \"#utility.yul\":12711:12712   */\n  0x00\n    /* \"#utility.yul\":12700:12709   */\n  dup4\n    /* \"#utility.yul\":12696:12713   */\n  add\n    /* \"#utility.yul\":12689:12736   */\n  mstore\n    /* \"#utility.yul\":12753:12884   */\n  tag_227\n    /* \"#utility.yul\":12879:12883   */\n  dup2\n    /* \"#utility.yul\":12753:12884   */\n  tag_86\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":12745:12884   */\n  swap1\n  pop\n    /* \"#utility.yul\":12472:12891   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12897:13015   */\ntag_87:\n    /* \"#utility.yul\":12984:13008   */\n  tag_229\n    /* \"#utility.yul\":13002:13007   */\n  dup2\n    /* \"#utility.yul\":12984:13008   */\n  tag_61\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":12979:12982   */\n  dup3\n    /* \"#utility.yul\":12972:13009   */\n  mstore\n    /* \"#utility.yul\":12897:13015   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13021:13243   */\ntag_20:\n    /* \"#utility.yul\":13114:13118   */\n  0x00\n    /* \"#utility.yul\":13152:13154   */\n  0x20\n    /* \"#utility.yul\":13141:13150   */\n  dup3\n    /* \"#utility.yul\":13137:13155   */\n  add\n    /* \"#utility.yul\":13129:13155   */\n  swap1\n  pop\n    /* \"#utility.yul\":13165:13236   */\n  tag_231\n    /* \"#utility.yul\":13233:13234   */\n  0x00\n    /* \"#utility.yul\":13222:13231   */\n  dup4\n    /* \"#utility.yul\":13218:13235   */\n  add\n    /* \"#utility.yul\":13209:13215   */\n  dup5\n    /* \"#utility.yul\":13165:13236   */\n  tag_87\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":13021:13243   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13249:13367   */\ntag_88:\n    /* \"#utility.yul\":13336:13360   */\n  tag_233\n    /* \"#utility.yul\":13354:13359   */\n  dup2\n    /* \"#utility.yul\":13336:13360   */\n  tag_57\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":13331:13334   */\n  dup3\n    /* \"#utility.yul\":13324:13361   */\n  mstore\n    /* \"#utility.yul\":13249:13367   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13373:13595   */\ntag_23:\n    /* \"#utility.yul\":13466:13470   */\n  0x00\n    /* \"#utility.yul\":13504:13506   */\n  0x20\n    /* \"#utility.yul\":13493:13502   */\n  dup3\n    /* \"#utility.yul\":13489:13507   */\n  add\n    /* \"#utility.yul\":13481:13507   */\n  swap1\n  pop\n    /* \"#utility.yul\":13517:13588   */\n  tag_235\n    /* \"#utility.yul\":13585:13586   */\n  0x00\n    /* \"#utility.yul\":13574:13583   */\n  dup4\n    /* \"#utility.yul\":13570:13587   */\n  add\n    /* \"#utility.yul\":13561:13567   */\n  dup5\n    /* \"#utility.yul\":13517:13588   */\n  tag_88\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":13373:13595   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13601:13781   */\ntag_89:\n    /* \"#utility.yul\":13649:13726   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":13646:13647   */\n  0x00\n    /* \"#utility.yul\":13639:13727   */\n  mstore\n    /* \"#utility.yul\":13746:13750   */\n  0x11\n    /* \"#utility.yul\":13743:13744   */\n  0x04\n    /* \"#utility.yul\":13736:13751   */\n  mstore\n    /* \"#utility.yul\":13770:13774   */\n  0x24\n    /* \"#utility.yul\":13767:13768   */\n  0x00\n    /* \"#utility.yul\":13760:13775   */\n  revert\n    /* \"#utility.yul\":13787:13978   */\ntag_33:\n    /* \"#utility.yul\":13827:13830   */\n  0x00\n    /* \"#utility.yul\":13846:13866   */\n  tag_238\n    /* \"#utility.yul\":13864:13865   */\n  dup3\n    /* \"#utility.yul\":13846:13866   */\n  tag_57\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":13841:13866   */\n  swap2\n  pop\n    /* \"#utility.yul\":13880:13900   */\n  tag_239\n    /* \"#utility.yul\":13898:13899   */\n  dup4\n    /* \"#utility.yul\":13880:13900   */\n  tag_57\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":13875:13900   */\n  swap3\n  pop\n    /* \"#utility.yul\":13923:13924   */\n  dup3\n    /* \"#utility.yul\":13920:13921   */\n  dup3\n    /* \"#utility.yul\":13916:13925   */\n  add\n    /* \"#utility.yul\":13909:13925   */\n  swap1\n  pop\n    /* \"#utility.yul\":13944:13947   */\n  dup1\n    /* \"#utility.yul\":13941:13942   */\n  dup3\n    /* \"#utility.yul\":13938:13948   */\n  gt\n    /* \"#utility.yul\":13935:13971   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":13951:13969   */\n  tag_241\n  tag_89\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":13935:13971   */\ntag_240:\n    /* \"#utility.yul\":13787:13978   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13984:14426   */\ntag_37:\n    /* \"#utility.yul\":14133:14137   */\n  0x00\n    /* \"#utility.yul\":14171:14173   */\n  0x60\n    /* \"#utility.yul\":14160:14169   */\n  dup3\n    /* \"#utility.yul\":14156:14174   */\n  add\n    /* \"#utility.yul\":14148:14174   */\n  swap1\n  pop\n    /* \"#utility.yul\":14184:14255   */\n  tag_243\n    /* \"#utility.yul\":14252:14253   */\n  0x00\n    /* \"#utility.yul\":14241:14250   */\n  dup4\n    /* \"#utility.yul\":14237:14254   */\n  add\n    /* \"#utility.yul\":14228:14234   */\n  dup7\n    /* \"#utility.yul\":14184:14255   */\n  tag_87\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":14265:14337   */\n  tag_244\n    /* \"#utility.yul\":14333:14335   */\n  0x20\n    /* \"#utility.yul\":14322:14331   */\n  dup4\n    /* \"#utility.yul\":14318:14336   */\n  add\n    /* \"#utility.yul\":14309:14315   */\n  dup6\n    /* \"#utility.yul\":14265:14337   */\n  tag_88\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":14347:14419   */\n  tag_245\n    /* \"#utility.yul\":14415:14417   */\n  0x40\n    /* \"#utility.yul\":14404:14413   */\n  dup4\n    /* \"#utility.yul\":14400:14418   */\n  add\n    /* \"#utility.yul\":14391:14397   */\n  dup5\n    /* \"#utility.yul\":14347:14419   */\n  tag_88\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":13984:14426   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/govarnance/SubchainGovernanceToken.sol\":721:3810  contract SubchainGovernanceToken is ERC20 {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":721:3810  contract SubchainGovernanceToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4eb03f6e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xab8e786f\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xab8e786f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe2f273bd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x4eb03f6e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x24e770d0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x29fb7ef6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1057:1078  address public minter */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2974:3083  function stakerRewardPerBlock() external view returns (uint256) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3089:3315  function updateStakerRewardPerBlock(... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2061:2159  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3321:3447  function updateMinter(address minter_) external adminOnly {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2310:2796  function mintStakerReward(... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1027:1051  uint256 public maxSupply */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3453:3573  function updateAdmin(address admin_) external adminOnly {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1084:1104  address public admin */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1057:1078  address public minter */\n    tag_28:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2974:3083  function stakerRewardPerBlock() external view returns (uint256) {... */\n    tag_47:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3029:3036  uint256 */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3055:3076  _stakerRewardPerBlock */\n      sload(0x06)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3048:3076  return _stakerRewardPerBlock */\n      swap1\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2974:3083  function stakerRewardPerBlock() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3089:3315  function updateStakerRewardPerBlock(... */\n    tag_52:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3632:3637  admin */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3628  msg.sender */\n      caller\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3610:3671  require(msg.sender == admin, \"Only admin can make this call\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3223:3244  stakerRewardPerBlock_ */\n      dup1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3199:3220  _stakerRewardPerBlock */\n      0x06\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3199:3244  _stakerRewardPerBlock = stakerRewardPerBlock_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3259:3308  UpdateStakerRewardPerBlock(_stakerRewardPerBlock) */\n      0xd65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e243\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3286:3307  _stakerRewardPerBlock */\n      sload(0x06)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3259:3308  UpdateStakerRewardPerBlock(_stakerRewardPerBlock) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3089:3315  function updateStakerRewardPerBlock(... */\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2061:2159  function decimals() public view virtual override returns (uint8) {... */\n    tag_54:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2119:2124  uint8 */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2143:2152  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2136:2152  return _decimals */\n      swap1\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2061:2159  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3321:3447  function updateMinter(address minter_) external adminOnly {... */\n    tag_60:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3632:3637  admin */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3628  msg.sender */\n      caller\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3610:3671  require(msg.sender == admin, \"Only admin can make this call\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_113\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3398:3405  minter_ */\n      dup1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3389:3395  minter */\n      0x08\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3389:3405  minter = minter_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3420:3440  UpdateMinter(minter) */\n      0x94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3433:3439  minter */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3420:3440  UpdateMinter(minter) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3321:3447  function updateMinter(address minter_) external adminOnly {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_92\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_92\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2310:2796  function mintStakerReward(... */\n    tag_74:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2420:2424  bool */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3749:3755  minter */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3735:3755  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3735:3745  msg.sender */\n      caller\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3735:3755  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3727:3790  require(msg.sender == minter, \"Only minter can make this call\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2454:2460  minter */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2440:2460  msg.sender != minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2440:2450  msg.sender */\n      caller\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2440:2460  msg.sender != minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2436:2499  if (msg.sender != minter) {... */\n      tag_137\n      jumpi\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2483:2488  false */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2476:2488  return false */\n      swap1\n      pop\n      jump(tag_136)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2436:2499  if (msg.sender != minter) {... */\n    tag_137:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2508:2529  uint256 currentSupply */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2532:2536  this */\n      address\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2532:2548  this.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2532:2550  this.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2508:2550  uint256 currentSupply = this.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2581:2590  maxSupply */\n      sload(0x07)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2564:2577  currentSupply */\n      dup2\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2564:2590  currentSupply >= maxSupply */\n      lt\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2560:2629  if (currentSupply >= maxSupply) {... */\n      tag_142\n      jumpi\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2613:2618  false */\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2606:2618  return false */\n      swap2\n      pop\n      pop\n      jump(tag_136)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2560:2629  if (currentSupply >= maxSupply) {... */\n    tag_142:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2667:2676  maxSupply */\n      sload(0x07)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2658:2664  amount */\n      dup4\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2642:2655  currentSupply */\n      dup3\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2642:2664  currentSupply + amount */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2642:2676  currentSupply + amount > maxSupply */\n      gt\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2638:2737  if (currentSupply + amount > maxSupply) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2713:2726  currentSupply */\n      dup1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2701:2710  maxSupply */\n      sload(0x07)\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2701:2726  maxSupply - currentSupply */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2692:2726  amount = maxSupply - currentSupply */\n      swap3\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2638:2737  if (currentSupply + amount > maxSupply) {... */\n    tag_145:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2746:2768  _mint(account, amount) */\n      tag_148\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2752:2759  account */\n      dup5\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2761:2767  amount */\n      dup5\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2746:2751  _mint */\n      tag_149\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2746:2768  _mint(account, amount) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2785:2789  true */\n      0x01\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2778:2789  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3800:3801  _ */\n    tag_136:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":2310:2796  function mintStakerReward(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1027:1051  uint256 public maxSupply */\n    tag_77:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3453:3573  function updateAdmin(address admin_) external adminOnly {... */\n    tag_86:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3632:3637  admin */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3628  msg.sender */\n      caller\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3618:3637  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3610:3671  require(msg.sender == admin, \"Only admin can make this call\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_113\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3527:3533  admin_ */\n      dup1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3519:3524  admin */\n      0x09\n      0x00\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3519:3533  admin = admin_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3548:3566  UpdateAdmin(admin) */\n      0xbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3560:3565  admin */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3548:3566  UpdateAdmin(admin) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":3453:3573  function updateAdmin(address admin_) external adminOnly {... */\n      pop\n      jump\t// out\n        /* \"contracts/govarnance/SubchainGovernanceToken.sol\":1084:1104  address public admin */\n    tag_88:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_187\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_187:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_188)\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_192)\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_194:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_195:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_196:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_197:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_198:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_228\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_194\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":711:782   */\n      tag_229\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_195\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_230\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_196\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":881:910   */\n      tag_231\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_197\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_233\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_198\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1368   */\n    tag_199:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1319:1361   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1312:1317   */\n      dup3\n        /* \"#utility.yul\":1308:1362   */\n      and\n        /* \"#utility.yul\":1297:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1470   */\n    tag_200:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1440:1464   */\n      tag_236\n        /* \"#utility.yul\":1458:1463   */\n      dup3\n        /* \"#utility.yul\":1440:1464   */\n      tag_199\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1429:1464   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1594   */\n    tag_201:\n        /* \"#utility.yul\":1563:1587   */\n      tag_238\n        /* \"#utility.yul\":1581:1586   */\n      dup2\n        /* \"#utility.yul\":1563:1587   */\n      tag_200\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1558:1561   */\n      dup3\n        /* \"#utility.yul\":1551:1588   */\n      mstore\n        /* \"#utility.yul\":1476:1594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1822   */\n    tag_30:\n        /* \"#utility.yul\":1693:1697   */\n      0x00\n        /* \"#utility.yul\":1731:1733   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1716:1734   */\n      add\n        /* \"#utility.yul\":1708:1734   */\n      swap1\n      pop\n        /* \"#utility.yul\":1744:1815   */\n      tag_240\n        /* \"#utility.yul\":1812:1813   */\n      0x00\n        /* \"#utility.yul\":1801:1810   */\n      dup4\n        /* \"#utility.yul\":1797:1814   */\n      add\n        /* \"#utility.yul\":1788:1794   */\n      dup5\n        /* \"#utility.yul\":1744:1815   */\n      tag_201\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1600:1822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2026   */\n    tag_203:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2015:2016   */\n      dup1\n        /* \"#utility.yul\":2008:2020   */\n      revert\n        /* \"#utility.yul\":2155:2277   */\n    tag_205:\n        /* \"#utility.yul\":2228:2252   */\n      tag_245\n        /* \"#utility.yul\":2246:2251   */\n      dup2\n        /* \"#utility.yul\":2228:2252   */\n      tag_200\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2218:2253   */\n      eq\n        /* \"#utility.yul\":2208:2271   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      dup1\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2208:2271   */\n    tag_246:\n        /* \"#utility.yul\":2155:2277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2422   */\n    tag_206:\n        /* \"#utility.yul\":2329:2334   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      dup2\n        /* \"#utility.yul\":2354:2374   */\n      calldataload\n        /* \"#utility.yul\":2345:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2383:2416   */\n      tag_248\n        /* \"#utility.yul\":2410:2415   */\n      dup2\n        /* \"#utility.yul\":2383:2416   */\n      tag_205\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2283:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2505   */\n    tag_207:\n        /* \"#utility.yul\":2465:2472   */\n      0x00\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2483:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_208:\n        /* \"#utility.yul\":2584:2608   */\n      tag_251\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_207\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_252:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_209:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_254\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_208\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_33:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_257\n      tag_203\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2877:2996   */\n    tag_256:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_258\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_206\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_259\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_209\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_210:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_211:\n        /* \"#utility.yul\":3441:3462   */\n      tag_262\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_210\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_36:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_264\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_211\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_212:\n        /* \"#utility.yul\":3778:3802   */\n      tag_266\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_207\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_40:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_268\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_212\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4662   */\n    tag_43:\n        /* \"#utility.yul\":4120:4126   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup1\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x60\n        /* \"#utility.yul\":4173:4182   */\n      dup5\n        /* \"#utility.yul\":4164:4171   */\n      dup7\n        /* \"#utility.yul\":4160:4183   */\n      sub\n        /* \"#utility.yul\":4156:4188   */\n      slt\n        /* \"#utility.yul\":4153:4272   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_271\n      tag_203\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4153:4272   */\n    tag_270:\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4336:4389   */\n      tag_272\n        /* \"#utility.yul\":4381:4388   */\n      dup7\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4361:4370   */\n      dup8\n        /* \"#utility.yul\":4357:4379   */\n      add\n        /* \"#utility.yul\":4336:4389   */\n      tag_206\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4326:4389   */\n      swap4\n      pop\n        /* \"#utility.yul\":4282:4399   */\n      pop\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4464:4517   */\n      tag_273\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_206\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4454:4517   */\n      swap3\n      pop\n        /* \"#utility.yul\":4409:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x40\n        /* \"#utility.yul\":4592:4645   */\n      tag_274\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_209\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4582:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4043:4662   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4668:4997   */\n    tag_51:\n        /* \"#utility.yul\":4727:4733   */\n      0x00\n        /* \"#utility.yul\":4776:4778   */\n      0x20\n        /* \"#utility.yul\":4764:4773   */\n      dup3\n        /* \"#utility.yul\":4755:4762   */\n      dup5\n        /* \"#utility.yul\":4751:4774   */\n      sub\n        /* \"#utility.yul\":4747:4779   */\n      slt\n        /* \"#utility.yul\":4744:4863   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4782:4861   */\n      tag_277\n      tag_203\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4744:4863   */\n    tag_276:\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4927:4980   */\n      tag_278\n        /* \"#utility.yul\":4972:4979   */\n      dup5\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup6\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_209\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4873:4990   */\n      pop\n        /* \"#utility.yul\":4668:4997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_213:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_214:\n        /* \"#utility.yul\":5178:5200   */\n      tag_281\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_213\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_56:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_283\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_214\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_59:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_286\n      tag_203\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5509:5628   */\n    tag_285:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_287\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_206\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_81:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_290\n      tag_203\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5861:5980   */\n    tag_289:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_291\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_206\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_292\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_206\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_215:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_92:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_295:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_297\n      tag_215\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6664:6748   */\n    tag_296:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6939   */\n    tag_216:\n        /* \"#utility.yul\":6900:6931   */\n      0x4f6e6c792061646d696e2063616e206d616b6520746869732063616c6c000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6932   */\n      mstore\n        /* \"#utility.yul\":6760:6939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6945:7311   */\n    tag_217:\n        /* \"#utility.yul\":7087:7090   */\n      0x00\n        /* \"#utility.yul\":7108:7175   */\n      tag_300\n        /* \"#utility.yul\":7172:7174   */\n      0x1d\n        /* \"#utility.yul\":7167:7170   */\n      dup4\n        /* \"#utility.yul\":7108:7175   */\n      tag_195\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7101:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":7184:7277   */\n      tag_301\n        /* \"#utility.yul\":7273:7276   */\n      dup3\n        /* \"#utility.yul\":7184:7277   */\n      tag_216\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7302:7304   */\n      0x20\n        /* \"#utility.yul\":7297:7300   */\n      dup3\n        /* \"#utility.yul\":7293:7305   */\n      add\n        /* \"#utility.yul\":7286:7305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6945:7311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7317:7736   */\n    tag_113:\n        /* \"#utility.yul\":7483:7487   */\n      0x00\n        /* \"#utility.yul\":7521:7523   */\n      0x20\n        /* \"#utility.yul\":7510:7519   */\n      dup3\n        /* \"#utility.yul\":7506:7524   */\n      add\n        /* \"#utility.yul\":7498:7524   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7579   */\n      dup2\n        /* \"#utility.yul\":7564:7568   */\n      dup2\n        /* \"#utility.yul\":7560:7580   */\n      sub\n        /* \"#utility.yul\":7556:7557   */\n      0x00\n        /* \"#utility.yul\":7545:7554   */\n      dup4\n        /* \"#utility.yul\":7541:7558   */\n      add\n        /* \"#utility.yul\":7534:7581   */\n      mstore\n        /* \"#utility.yul\":7598:7729   */\n      tag_303\n        /* \"#utility.yul\":7724:7728   */\n      dup2\n        /* \"#utility.yul\":7598:7729   */\n      tag_217\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7590:7729   */\n      swap1\n      pop\n        /* \"#utility.yul\":7317:7736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7922   */\n    tag_218:\n        /* \"#utility.yul\":7882:7914   */\n      0x4f6e6c79206d696e7465722063616e206d616b6520746869732063616c6c0000\n        /* \"#utility.yul\":7878:7879   */\n      0x00\n        /* \"#utility.yul\":7870:7876   */\n      dup3\n        /* \"#utility.yul\":7866:7880   */\n      add\n        /* \"#utility.yul\":7859:7915   */\n      mstore\n        /* \"#utility.yul\":7742:7922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7928:8294   */\n    tag_219:\n        /* \"#utility.yul\":8070:8073   */\n      0x00\n        /* \"#utility.yul\":8091:8158   */\n      tag_306\n        /* \"#utility.yul\":8155:8157   */\n      0x1e\n        /* \"#utility.yul\":8150:8153   */\n      dup4\n        /* \"#utility.yul\":8091:8158   */\n      tag_195\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8084:8158   */\n      swap2\n      pop\n        /* \"#utility.yul\":8167:8260   */\n      tag_307\n        /* \"#utility.yul\":8256:8259   */\n      dup3\n        /* \"#utility.yul\":8167:8260   */\n      tag_218\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8285:8287   */\n      0x20\n        /* \"#utility.yul\":8280:8283   */\n      dup3\n        /* \"#utility.yul\":8276:8288   */\n      add\n        /* \"#utility.yul\":8269:8288   */\n      swap1\n      pop\n        /* \"#utility.yul\":7928:8294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8300:8719   */\n    tag_135:\n        /* \"#utility.yul\":8466:8470   */\n      0x00\n        /* \"#utility.yul\":8504:8506   */\n      0x20\n        /* \"#utility.yul\":8493:8502   */\n      dup3\n        /* \"#utility.yul\":8489:8507   */\n      add\n        /* \"#utility.yul\":8481:8507   */\n      swap1\n      pop\n        /* \"#utility.yul\":8553:8562   */\n      dup2\n        /* \"#utility.yul\":8547:8551   */\n      dup2\n        /* \"#utility.yul\":8543:8563   */\n      sub\n        /* \"#utility.yul\":8539:8540   */\n      0x00\n        /* \"#utility.yul\":8528:8537   */\n      dup4\n        /* \"#utility.yul\":8524:8541   */\n      add\n        /* \"#utility.yul\":8517:8564   */\n      mstore\n        /* \"#utility.yul\":8581:8712   */\n      tag_309\n        /* \"#utility.yul\":8707:8711   */\n      dup2\n        /* \"#utility.yul\":8581:8712   */\n      tag_219\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8573:8712   */\n      swap1\n      pop\n        /* \"#utility.yul\":8300:8719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8725:8868   */\n    tag_220:\n        /* \"#utility.yul\":8782:8787   */\n      0x00\n        /* \"#utility.yul\":8813:8819   */\n      dup2\n        /* \"#utility.yul\":8807:8820   */\n      mload\n        /* \"#utility.yul\":8798:8820   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:8862   */\n      tag_311\n        /* \"#utility.yul\":8856:8861   */\n      dup2\n        /* \"#utility.yul\":8829:8862   */\n      tag_208\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8725:8868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8874:9225   */\n    tag_141:\n        /* \"#utility.yul\":8944:8950   */\n      0x00\n        /* \"#utility.yul\":8993:8995   */\n      0x20\n        /* \"#utility.yul\":8981:8990   */\n      dup3\n        /* \"#utility.yul\":8972:8979   */\n      dup5\n        /* \"#utility.yul\":8968:8991   */\n      sub\n        /* \"#utility.yul\":8964:8996   */\n      slt\n        /* \"#utility.yul\":8961:9080   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8999:9078   */\n      tag_314\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8961:9080   */\n    tag_313:\n        /* \"#utility.yul\":9119:9120   */\n      0x00\n        /* \"#utility.yul\":9144:9208   */\n      tag_315\n        /* \"#utility.yul\":9200:9207   */\n      dup5\n        /* \"#utility.yul\":9191:9197   */\n      dup3\n        /* \"#utility.yul\":9180:9189   */\n      dup6\n        /* \"#utility.yul\":9176:9198   */\n      add\n        /* \"#utility.yul\":9144:9208   */\n      tag_220\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9134:9208   */\n      swap2\n      pop\n        /* \"#utility.yul\":9090:9218   */\n      pop\n        /* \"#utility.yul\":8874:9225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9231:9411   */\n    tag_221:\n        /* \"#utility.yul\":9279:9356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9276:9277   */\n      0x00\n        /* \"#utility.yul\":9269:9357   */\n      mstore\n        /* \"#utility.yul\":9376:9380   */\n      0x11\n        /* \"#utility.yul\":9373:9374   */\n      0x04\n        /* \"#utility.yul\":9366:9381   */\n      mstore\n        /* \"#utility.yul\":9400:9404   */\n      0x24\n        /* \"#utility.yul\":9397:9398   */\n      0x00\n        /* \"#utility.yul\":9390:9405   */\n      revert\n        /* \"#utility.yul\":9417:9608   */\n    tag_144:\n        /* \"#utility.yul\":9457:9460   */\n      0x00\n        /* \"#utility.yul\":9476:9496   */\n      tag_318\n        /* \"#utility.yul\":9494:9495   */\n      dup3\n        /* \"#utility.yul\":9476:9496   */\n      tag_207\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9471:9496   */\n      swap2\n      pop\n        /* \"#utility.yul\":9510:9530   */\n      tag_319\n        /* \"#utility.yul\":9528:9529   */\n      dup4\n        /* \"#utility.yul\":9510:9530   */\n      tag_207\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9505:9530   */\n      swap3\n      pop\n        /* \"#utility.yul\":9553:9554   */\n      dup3\n        /* \"#utility.yul\":9550:9551   */\n      dup3\n        /* \"#utility.yul\":9546:9555   */\n      add\n        /* \"#utility.yul\":9539:9555   */\n      swap1\n      pop\n        /* \"#utility.yul\":9574:9577   */\n      dup1\n        /* \"#utility.yul\":9571:9572   */\n      dup3\n        /* \"#utility.yul\":9568:9578   */\n      gt\n        /* \"#utility.yul\":9565:9601   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":9581:9599   */\n      tag_321\n      tag_221\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9565:9601   */\n    tag_320:\n        /* \"#utility.yul\":9417:9608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9614:9808   */\n    tag_147:\n        /* \"#utility.yul\":9654:9658   */\n      0x00\n        /* \"#utility.yul\":9674:9694   */\n      tag_323\n        /* \"#utility.yul\":9692:9693   */\n      dup3\n        /* \"#utility.yul\":9674:9694   */\n      tag_207\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9669:9694   */\n      swap2\n      pop\n        /* \"#utility.yul\":9708:9728   */\n      tag_324\n        /* \"#utility.yul\":9726:9727   */\n      dup4\n        /* \"#utility.yul\":9708:9728   */\n      tag_207\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9703:9728   */\n      swap3\n      pop\n        /* \"#utility.yul\":9752:9753   */\n      dup3\n        /* \"#utility.yul\":9749:9750   */\n      dup3\n        /* \"#utility.yul\":9745:9754   */\n      sub\n        /* \"#utility.yul\":9737:9754   */\n      swap1\n      pop\n        /* \"#utility.yul\":9776:9777   */\n      dup2\n        /* \"#utility.yul\":9770:9774   */\n      dup2\n        /* \"#utility.yul\":9767:9778   */\n      gt\n        /* \"#utility.yul\":9764:9801   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":9781:9799   */\n      tag_326\n      tag_221\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9764:9801   */\n    tag_325:\n        /* \"#utility.yul\":9614:9808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9814:10256   */\n    tag_165:\n        /* \"#utility.yul\":9963:9967   */\n      0x00\n        /* \"#utility.yul\":10001:10003   */\n      0x60\n        /* \"#utility.yul\":9990:9999   */\n      dup3\n        /* \"#utility.yul\":9986:10004   */\n      add\n        /* \"#utility.yul\":9978:10004   */\n      swap1\n      pop\n        /* \"#utility.yul\":10014:10085   */\n      tag_328\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10071:10080   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10058:10064   */\n      dup7\n        /* \"#utility.yul\":10014:10085   */\n      tag_201\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10095:10167   */\n      tag_329\n        /* \"#utility.yul\":10163:10165   */\n      0x20\n        /* \"#utility.yul\":10152:10161   */\n      dup4\n        /* \"#utility.yul\":10148:10166   */\n      add\n        /* \"#utility.yul\":10139:10145   */\n      dup6\n        /* \"#utility.yul\":10095:10167   */\n      tag_212\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10177:10249   */\n      tag_330\n        /* \"#utility.yul\":10245:10247   */\n      0x40\n        /* \"#utility.yul\":10234:10243   */\n      dup4\n        /* \"#utility.yul\":10230:10248   */\n      add\n        /* \"#utility.yul\":10221:10227   */\n      dup5\n        /* \"#utility.yul\":10177:10249   */\n      tag_212\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9814:10256   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204633b8cdcafb9dd79d58abb12baa8c6946b31aafb390d14e92e17f009de5327564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1949": {
									"entryPoint": null,
									"id": 1949,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 662,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 795,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_uint256t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14429:7",
										"nodeType": "YulBlock",
										"src": "0:14429:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:77:7",
													"nodeType": "YulBlock",
													"src": "1672:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:7"
																},
																"nativeSrc": "1683:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:7"
															},
															"nativeSrc": "1683:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nativeSrc": "1722:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nativeSrc": "1715:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:7"
															},
															"nativeSrc": "1715:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:139:7"
											},
											{
												"body": {
													"nativeSrc": "1850:339:7",
													"nodeType": "YulBlock",
													"src": "1850:339:7",
													"statements": [
														{
															"nativeSrc": "1860:75:7",
															"nodeType": "YulAssignment",
															"src": "1860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:7"
																		},
																		"nativeSrc": "1885:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:7"
																},
																"nativeSrc": "1869:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:7"
																},
																"nativeSrc": "1944:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:7"
															},
															"nativeSrc": "1944:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:7"
														},
														{
															"nativeSrc": "1974:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nativeSrc": "1985:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:7",
																"nodeType": "YulBlock",
																"src": "2039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:7"
																			},
																			"nativeSrc": "2041:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:7"
																		},
																		"nativeSrc": "2041:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:7"
																		},
																		"nativeSrc": "2016:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:7"
																},
																"nativeSrc": "2013:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:7"
															},
															"nativeSrc": "2010:112:7",
															"nodeType": "YulIf",
															"src": "2010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:7"
																},
																"nativeSrc": "2131:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:7"
															},
															"nativeSrc": "2131:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:7",
														"nodeType": "YulTypedName",
														"src": "1823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:7",
														"nodeType": "YulTypedName",
														"src": "1828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:7",
														"nodeType": "YulTypedName",
														"src": "1836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:7",
														"nodeType": "YulTypedName",
														"src": "1844:5:7",
														"type": ""
													}
												],
												"src": "1755:434:7"
											},
											{
												"body": {
													"nativeSrc": "2282:282:7",
													"nodeType": "YulBlock",
													"src": "2282:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:7",
																"nodeType": "YulBlock",
																"src": "2331:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:7"
																			},
																			"nativeSrc": "2333:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:7"
																		},
																		"nativeSrc": "2333:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:7"
																				},
																				"nativeSrc": "2306:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:7"
																		},
																		"nativeSrc": "2302:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:7"
																},
																"nativeSrc": "2295:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:7"
															},
															"nativeSrc": "2292:122:7",
															"nodeType": "YulIf",
															"src": "2292:122:7"
														},
														{
															"nativeSrc": "2423:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:7"
																},
																"nativeSrc": "2437:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:7",
															"nodeType": "YulAssignment",
															"src": "2459:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:7"
																},
																"nativeSrc": "2468:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:7",
														"nodeType": "YulTypedName",
														"src": "2260:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:7",
														"nodeType": "YulTypedName",
														"src": "2268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:7",
														"nodeType": "YulTypedName",
														"src": "2276:5:7",
														"type": ""
													}
												],
												"src": "2209:355:7"
											},
											{
												"body": {
													"nativeSrc": "2613:43:7",
													"nodeType": "YulBlock",
													"src": "2613:43:7",
													"statements": [
														{
															"nativeSrc": "2623:27:7",
															"nodeType": "YulAssignment",
															"src": "2623:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2638:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2638:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2645:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2634:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:7"
																},
																"nativeSrc": "2634:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2634:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2570:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2595:5:7",
														"nodeType": "YulTypedName",
														"src": "2595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2605:7:7",
														"nodeType": "YulTypedName",
														"src": "2605:7:7",
														"type": ""
													}
												],
												"src": "2570:86:7"
											},
											{
												"body": {
													"nativeSrc": "2703:77:7",
													"nodeType": "YulBlock",
													"src": "2703:77:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:7",
																"nodeType": "YulBlock",
																"src": "2758:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:7"
																			},
																			"nativeSrc": "2760:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:7"
																		},
																		"nativeSrc": "2760:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2726:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2749:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2749:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2733:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "2733:15:7"
																				},
																				"nativeSrc": "2733:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2723:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:7"
																		},
																		"nativeSrc": "2723:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:7"
																},
																"nativeSrc": "2716:41:7",
																"nodeType": "YulFunctionCall",
																"src": "2716:41:7"
															},
															"nativeSrc": "2713:61:7",
															"nodeType": "YulIf",
															"src": "2713:61:7"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2662:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2696:5:7",
														"nodeType": "YulTypedName",
														"src": "2696:5:7",
														"type": ""
													}
												],
												"src": "2662:118:7"
											},
											{
												"body": {
													"nativeSrc": "2847:78:7",
													"nodeType": "YulBlock",
													"src": "2847:78:7",
													"statements": [
														{
															"nativeSrc": "2857:22:7",
															"nodeType": "YulAssignment",
															"src": "2857:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2866:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:7"
																},
																"nativeSrc": "2866:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2866:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2857:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2857:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2913:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2888:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2888:24:7"
																},
																"nativeSrc": "2888:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2888:31:7"
															},
															"nativeSrc": "2888:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2888:31:7"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2786:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2825:6:7",
														"nodeType": "YulTypedName",
														"src": "2825:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2833:3:7",
														"nodeType": "YulTypedName",
														"src": "2833:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2841:5:7",
														"nodeType": "YulTypedName",
														"src": "2841:5:7",
														"type": ""
													}
												],
												"src": "2786:139:7"
											},
											{
												"body": {
													"nativeSrc": "2976:32:7",
													"nodeType": "YulBlock",
													"src": "2976:32:7",
													"statements": [
														{
															"nativeSrc": "2986:16:7",
															"nodeType": "YulAssignment",
															"src": "2986:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2997:5:7",
																"nodeType": "YulIdentifier",
																"src": "2997:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2986:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2986:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2931:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2958:5:7",
														"nodeType": "YulTypedName",
														"src": "2958:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2968:7:7",
														"nodeType": "YulTypedName",
														"src": "2968:7:7",
														"type": ""
													}
												],
												"src": "2931:77:7"
											},
											{
												"body": {
													"nativeSrc": "3057:79:7",
													"nodeType": "YulBlock",
													"src": "3057:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3114:16:7",
																"nodeType": "YulBlock",
																"src": "3114:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3123:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3126:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3116:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3116:6:7"
																			},
																			"nativeSrc": "3116:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3116:12:7"
																		},
																		"nativeSrc": "3116:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3116:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3080:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3080:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3105:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3105:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3087:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3087:17:7"
																				},
																				"nativeSrc": "3087:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3087:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3077:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3077:2:7"
																		},
																		"nativeSrc": "3077:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3077:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3070:6:7"
																},
																"nativeSrc": "3070:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3070:43:7"
															},
															"nativeSrc": "3067:63:7",
															"nodeType": "YulIf",
															"src": "3067:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3014:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3050:5:7",
														"nodeType": "YulTypedName",
														"src": "3050:5:7",
														"type": ""
													}
												],
												"src": "3014:122:7"
											},
											{
												"body": {
													"nativeSrc": "3205:80:7",
													"nodeType": "YulBlock",
													"src": "3205:80:7",
													"statements": [
														{
															"nativeSrc": "3215:22:7",
															"nodeType": "YulAssignment",
															"src": "3215:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3224:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3224:5:7"
																},
																"nativeSrc": "3224:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3224:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3215:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3215:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3273:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3273:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3246:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3246:26:7"
																},
																"nativeSrc": "3246:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3246:33:7"
															},
															"nativeSrc": "3246:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3246:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3142:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3183:6:7",
														"nodeType": "YulTypedName",
														"src": "3183:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3191:3:7",
														"nodeType": "YulTypedName",
														"src": "3191:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3199:5:7",
														"nodeType": "YulTypedName",
														"src": "3199:5:7",
														"type": ""
													}
												],
												"src": "3142:143:7"
											},
											{
												"body": {
													"nativeSrc": "3336:81:7",
													"nodeType": "YulBlock",
													"src": "3336:81:7",
													"statements": [
														{
															"nativeSrc": "3346:65:7",
															"nodeType": "YulAssignment",
															"src": "3346:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3361:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3361:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3368:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:7"
																},
																"nativeSrc": "3357:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3357:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3346:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3346:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3291:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3318:5:7",
														"nodeType": "YulTypedName",
														"src": "3318:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3328:7:7",
														"nodeType": "YulTypedName",
														"src": "3328:7:7",
														"type": ""
													}
												],
												"src": "3291:126:7"
											},
											{
												"body": {
													"nativeSrc": "3468:51:7",
													"nodeType": "YulBlock",
													"src": "3468:51:7",
													"statements": [
														{
															"nativeSrc": "3478:35:7",
															"nodeType": "YulAssignment",
															"src": "3478:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3507:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3507:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3489:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3489:17:7"
																},
																"nativeSrc": "3489:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3489:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3423:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3450:5:7",
														"nodeType": "YulTypedName",
														"src": "3450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3460:7:7",
														"nodeType": "YulTypedName",
														"src": "3460:7:7",
														"type": ""
													}
												],
												"src": "3423:96:7"
											},
											{
												"body": {
													"nativeSrc": "3568:79:7",
													"nodeType": "YulBlock",
													"src": "3568:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3625:16:7",
																"nodeType": "YulBlock",
																"src": "3625:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3634:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3634:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3637:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3637:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3627:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3627:6:7"
																			},
																			"nativeSrc": "3627:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3627:12:7"
																		},
																		"nativeSrc": "3627:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3627:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3616:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3616:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3598:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3598:17:7"
																				},
																				"nativeSrc": "3598:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3598:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3588:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3588:2:7"
																		},
																		"nativeSrc": "3588:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3581:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:7"
																},
																"nativeSrc": "3581:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3581:43:7"
															},
															"nativeSrc": "3578:63:7",
															"nodeType": "YulIf",
															"src": "3578:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3525:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3561:5:7",
														"nodeType": "YulTypedName",
														"src": "3561:5:7",
														"type": ""
													}
												],
												"src": "3525:122:7"
											},
											{
												"body": {
													"nativeSrc": "3716:80:7",
													"nodeType": "YulBlock",
													"src": "3716:80:7",
													"statements": [
														{
															"nativeSrc": "3726:22:7",
															"nodeType": "YulAssignment",
															"src": "3726:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3735:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3735:5:7"
																},
																"nativeSrc": "3735:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3735:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3726:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3726:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3784:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3757:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3757:26:7"
																},
																"nativeSrc": "3757:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:7"
															},
															"nativeSrc": "3757:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3757:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3653:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3694:6:7",
														"nodeType": "YulTypedName",
														"src": "3694:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3702:3:7",
														"nodeType": "YulTypedName",
														"src": "3702:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3710:5:7",
														"nodeType": "YulTypedName",
														"src": "3710:5:7",
														"type": ""
													}
												],
												"src": "3653:143:7"
											},
											{
												"body": {
													"nativeSrc": "4033:1716:7",
													"nodeType": "YulBlock",
													"src": "4033:1716:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4080:83:7",
																"nodeType": "YulBlock",
																"src": "4080:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4082:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4082:77:7"
																			},
																			"nativeSrc": "4082:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4082:79:7"
																		},
																		"nativeSrc": "4082:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4082:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4054:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:7"
																		},
																		"nativeSrc": "4050:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4075:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4075:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:7"
																},
																"nativeSrc": "4046:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4046:33:7"
															},
															"nativeSrc": "4043:120:7",
															"nodeType": "YulIf",
															"src": "4043:120:7"
														},
														{
															"nativeSrc": "4173:291:7",
															"nodeType": "YulBlock",
															"src": "4173:291:7",
															"statements": [
																{
																	"nativeSrc": "4188:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4188:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4212:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4212:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4223:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4223:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4208:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4208:3:7"
																				},
																				"nativeSrc": "4208:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4208:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4202:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4202:5:7"
																		},
																		"nativeSrc": "4202:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4192:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4192:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4273:83:7",
																		"nodeType": "YulBlock",
																		"src": "4273:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4275:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4275:77:7"
																					},
																					"nativeSrc": "4275:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4275:79:7"
																				},
																				"nativeSrc": "4275:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4275:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4245:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4245:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4253:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4253:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4242:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4242:2:7"
																		},
																		"nativeSrc": "4242:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:30:7"
																	},
																	"nativeSrc": "4239:117:7",
																	"nodeType": "YulIf",
																	"src": "4239:117:7"
																},
																{
																	"nativeSrc": "4370:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4370:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4426:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4426:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4437:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4437:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4422:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4422:3:7"
																				},
																				"nativeSrc": "4422:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4422:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4446:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4446:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4380:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4380:41:7"
																		},
																		"nativeSrc": "4380:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4380:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4370:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4370:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4474:292:7",
															"nodeType": "YulBlock",
															"src": "4474:292:7",
															"statements": [
																{
																	"nativeSrc": "4489:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4489:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4513:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4513:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4524:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4524:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4509:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4509:3:7"
																				},
																				"nativeSrc": "4509:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4509:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4503:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4503:5:7"
																		},
																		"nativeSrc": "4503:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4493:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4493:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4575:83:7",
																		"nodeType": "YulBlock",
																		"src": "4575:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4577:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4577:77:7"
																					},
																					"nativeSrc": "4577:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4577:79:7"
																				},
																				"nativeSrc": "4577:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4577:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4547:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4555:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4555:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4544:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4544:2:7"
																		},
																		"nativeSrc": "4544:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4544:30:7"
																	},
																	"nativeSrc": "4541:117:7",
																	"nodeType": "YulIf",
																	"src": "4541:117:7"
																},
																{
																	"nativeSrc": "4672:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4672:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4728:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4728:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4739:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4739:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4724:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4724:3:7"
																				},
																				"nativeSrc": "4724:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4724:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4748:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4748:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4682:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4682:41:7"
																		},
																		"nativeSrc": "4682:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4672:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4776:127:7",
															"nodeType": "YulBlock",
															"src": "4776:127:7",
															"statements": [
																{
																	"nativeSrc": "4791:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4791:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4805:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4805:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4795:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4795:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4821:72:7",
																	"nodeType": "YulAssignment",
																	"src": "4821:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4865:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4865:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4876:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4876:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4861:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4861:3:7"
																				},
																				"nativeSrc": "4861:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4861:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4885:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4885:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4831:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "4831:29:7"
																		},
																		"nativeSrc": "4831:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4831:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4821:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4821:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4913:129:7",
															"nodeType": "YulBlock",
															"src": "4913:129:7",
															"statements": [
																{
																	"nativeSrc": "4928:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4928:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4932:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4932:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4958:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4958:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5004:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5004:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5015:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5015:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5000:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5000:3:7"
																				},
																				"nativeSrc": "5000:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5000:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5024:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5024:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4968:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4968:31:7"
																		},
																		"nativeSrc": "4968:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4968:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4958:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4958:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5052:130:7",
															"nodeType": "YulBlock",
															"src": "5052:130:7",
															"statements": [
																{
																	"nativeSrc": "5067:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5067:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5081:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5081:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5071:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5071:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5098:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5098:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5144:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5144:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5155:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5155:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5140:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5140:3:7"
																				},
																				"nativeSrc": "5140:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5140:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5164:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5108:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5108:31:7"
																		},
																		"nativeSrc": "5108:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5108:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5098:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5098:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5192:130:7",
															"nodeType": "YulBlock",
															"src": "5192:130:7",
															"statements": [
																{
																	"nativeSrc": "5207:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5207:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5221:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5221:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5211:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5211:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5238:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5238:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5284:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5284:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5295:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5295:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5280:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5280:3:7"
																				},
																				"nativeSrc": "5280:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5280:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5304:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5304:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5248:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5248:31:7"
																		},
																		"nativeSrc": "5248:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5238:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5238:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5332:130:7",
															"nodeType": "YulBlock",
															"src": "5332:130:7",
															"statements": [
																{
																	"nativeSrc": "5347:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5347:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5361:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5361:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5351:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5351:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5378:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5378:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5424:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5424:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5435:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5435:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5420:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5420:3:7"
																				},
																				"nativeSrc": "5420:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5420:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5444:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5444:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5388:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5388:31:7"
																		},
																		"nativeSrc": "5388:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "5378:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5378:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5472:130:7",
															"nodeType": "YulBlock",
															"src": "5472:130:7",
															"statements": [
																{
																	"nativeSrc": "5487:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5487:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5501:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5501:3:7",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5491:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5491:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5518:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5518:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5564:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5564:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5575:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5575:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5560:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5560:3:7"
																				},
																				"nativeSrc": "5560:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5560:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5584:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5584:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5528:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5528:31:7"
																		},
																		"nativeSrc": "5528:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "5518:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5518:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5612:130:7",
															"nodeType": "YulBlock",
															"src": "5612:130:7",
															"statements": [
																{
																	"nativeSrc": "5627:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5627:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5641:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5641:3:7",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5631:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5631:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5658:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5704:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5704:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5715:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5715:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5700:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5700:3:7"
																				},
																				"nativeSrc": "5700:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5700:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5724:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5724:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5668:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5668:31:7"
																		},
																		"nativeSrc": "5668:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5668:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value8",
																			"nativeSrc": "5658:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5658:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_uint256t_addresst_uint256t_address_fromMemory",
												"nativeSrc": "3802:1947:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3939:9:7",
														"nodeType": "YulTypedName",
														"src": "3939:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3950:7:7",
														"nodeType": "YulTypedName",
														"src": "3950:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3962:6:7",
														"nodeType": "YulTypedName",
														"src": "3962:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3970:6:7",
														"nodeType": "YulTypedName",
														"src": "3970:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3978:6:7",
														"nodeType": "YulTypedName",
														"src": "3978:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3986:6:7",
														"nodeType": "YulTypedName",
														"src": "3986:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3994:6:7",
														"nodeType": "YulTypedName",
														"src": "3994:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4002:6:7",
														"nodeType": "YulTypedName",
														"src": "4002:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4010:6:7",
														"nodeType": "YulTypedName",
														"src": "4010:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4018:6:7",
														"nodeType": "YulTypedName",
														"src": "4018:6:7",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "4026:6:7",
														"nodeType": "YulTypedName",
														"src": "4026:6:7",
														"type": ""
													}
												],
												"src": "3802:1947:7"
											},
											{
												"body": {
													"nativeSrc": "5814:40:7",
													"nodeType": "YulBlock",
													"src": "5814:40:7",
													"statements": [
														{
															"nativeSrc": "5825:22:7",
															"nodeType": "YulAssignment",
															"src": "5825:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5841:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5841:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5835:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5835:5:7"
																},
																"nativeSrc": "5835:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5835:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5755:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5797:5:7",
														"nodeType": "YulTypedName",
														"src": "5797:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5807:6:7",
														"nodeType": "YulTypedName",
														"src": "5807:6:7",
														"type": ""
													}
												],
												"src": "5755:99:7"
											},
											{
												"body": {
													"nativeSrc": "5888:152:7",
													"nodeType": "YulBlock",
													"src": "5888:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5905:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5908:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5908:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:7"
																},
																"nativeSrc": "5898:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5898:88:7"
															},
															"nativeSrc": "5898:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5898:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6002:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6002:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6005:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6005:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5995:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:7"
																},
																"nativeSrc": "5995:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5995:15:7"
															},
															"nativeSrc": "5995:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5995:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6026:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6026:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6029:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6029:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6019:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6019:6:7"
																},
																"nativeSrc": "6019:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6019:15:7"
															},
															"nativeSrc": "6019:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6019:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5860:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5860:180:7"
											},
											{
												"body": {
													"nativeSrc": "6097:269:7",
													"nodeType": "YulBlock",
													"src": "6097:269:7",
													"statements": [
														{
															"nativeSrc": "6107:22:7",
															"nodeType": "YulAssignment",
															"src": "6107:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6121:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6121:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6127:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6117:3:7"
																},
																"nativeSrc": "6117:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6117:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6107:6:7"
																}
															]
														},
														{
															"nativeSrc": "6138:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6138:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6168:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6168:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6174:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:7"
																},
																"nativeSrc": "6164:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6164:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6142:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6142:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6215:51:7",
																"nodeType": "YulBlock",
																"src": "6215:51:7",
																"statements": [
																	{
																		"nativeSrc": "6229:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6229:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6243:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6243:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6251:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6251:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6239:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6239:3:7"
																			},
																			"nativeSrc": "6239:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6239:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6229:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6195:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6195:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6188:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6188:6:7"
																},
																"nativeSrc": "6188:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6188:26:7"
															},
															"nativeSrc": "6185:81:7",
															"nodeType": "YulIf",
															"src": "6185:81:7"
														},
														{
															"body": {
																"nativeSrc": "6318:42:7",
																"nodeType": "YulBlock",
																"src": "6318:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6332:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6332:16:7"
																			},
																			"nativeSrc": "6332:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6332:18:7"
																		},
																		"nativeSrc": "6332:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6332:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6282:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6282:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6305:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6313:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6313:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6302:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6302:2:7"
																		},
																		"nativeSrc": "6302:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6279:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6279:2:7"
																},
																"nativeSrc": "6279:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6279:38:7"
															},
															"nativeSrc": "6276:84:7",
															"nodeType": "YulIf",
															"src": "6276:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6046:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6081:4:7",
														"nodeType": "YulTypedName",
														"src": "6081:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:7",
														"nodeType": "YulTypedName",
														"src": "6090:6:7",
														"type": ""
													}
												],
												"src": "6046:320:7"
											},
											{
												"body": {
													"nativeSrc": "6426:87:7",
													"nodeType": "YulBlock",
													"src": "6426:87:7",
													"statements": [
														{
															"nativeSrc": "6436:11:7",
															"nodeType": "YulAssignment",
															"src": "6436:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "6444:3:7",
																"nodeType": "YulIdentifier",
																"src": "6444:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6467:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6467:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:7"
																},
																"nativeSrc": "6457:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6457:14:7"
															},
															"nativeSrc": "6457:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "6457:14:7"
														},
														{
															"nativeSrc": "6480:26:7",
															"nodeType": "YulAssignment",
															"src": "6480:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6498:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6498:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6501:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6501:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6488:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6488:9:7"
																},
																"nativeSrc": "6488:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6488:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6480:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "6372:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6413:3:7",
														"nodeType": "YulTypedName",
														"src": "6413:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6421:4:7",
														"nodeType": "YulTypedName",
														"src": "6421:4:7",
														"type": ""
													}
												],
												"src": "6372:141:7"
											},
											{
												"body": {
													"nativeSrc": "6563:49:7",
													"nodeType": "YulBlock",
													"src": "6563:49:7",
													"statements": [
														{
															"nativeSrc": "6573:33:7",
															"nodeType": "YulAssignment",
															"src": "6573:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6591:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6591:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6598:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6598:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6587:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:7"
																		},
																		"nativeSrc": "6587:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6587:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6603:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6583:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6583:3:7"
																},
																"nativeSrc": "6583:23:7",
																"nodeType": "YulFunctionCall",
																"src": "6583:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6573:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "6519:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6546:5:7",
														"nodeType": "YulTypedName",
														"src": "6546:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6556:6:7",
														"nodeType": "YulTypedName",
														"src": "6556:6:7",
														"type": ""
													}
												],
												"src": "6519:93:7"
											},
											{
												"body": {
													"nativeSrc": "6671:54:7",
													"nodeType": "YulBlock",
													"src": "6671:54:7",
													"statements": [
														{
															"nativeSrc": "6681:37:7",
															"nodeType": "YulAssignment",
															"src": "6681:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6706:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6706:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6712:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6712:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6702:3:7"
																},
																"nativeSrc": "6702:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6702:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6681:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6681:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "6618:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6646:4:7",
														"nodeType": "YulTypedName",
														"src": "6646:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6652:5:7",
														"nodeType": "YulTypedName",
														"src": "6652:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6662:8:7",
														"nodeType": "YulTypedName",
														"src": "6662:8:7",
														"type": ""
													}
												],
												"src": "6618:107:7"
											},
											{
												"body": {
													"nativeSrc": "6807:317:7",
													"nodeType": "YulBlock",
													"src": "6807:317:7",
													"statements": [
														{
															"nativeSrc": "6817:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6817:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6838:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6838:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6850:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6850:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6834:3:7"
																},
																"nativeSrc": "6834:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6834:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6821:9:7",
																	"nodeType": "YulTypedName",
																	"src": "6821:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6861:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6861:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6892:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6892:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6903:66:7",
																		"nodeType": "YulLiteral",
																		"src": "6903:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6873:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6873:18:7"
																},
																"nativeSrc": "6873:97:7",
																"nodeType": "YulFunctionCall",
																"src": "6873:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6865:4:7",
																	"nodeType": "YulTypedName",
																	"src": "6865:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6979:51:7",
															"nodeType": "YulAssignment",
															"src": "6979:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "7010:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7010:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "7021:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7021:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6991:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:7"
																},
																"nativeSrc": "6991:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6991:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6979:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6979:8:7"
																}
															]
														},
														{
															"nativeSrc": "7039:30:7",
															"nodeType": "YulAssignment",
															"src": "7039:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7052:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7052:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "7063:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7063:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7059:3:7"
																		},
																		"nativeSrc": "7059:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7048:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7048:3:7"
																},
																"nativeSrc": "7048:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7048:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7039:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7039:5:7"
																}
															]
														},
														{
															"nativeSrc": "7078:40:7",
															"nodeType": "YulAssignment",
															"src": "7078:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7091:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7091:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "7102:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "7102:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "7112:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7112:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7098:3:7"
																		},
																		"nativeSrc": "7098:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7098:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7088:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7088:2:7"
																},
																"nativeSrc": "7088:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7088:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6731:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6768:5:7",
														"nodeType": "YulTypedName",
														"src": "6768:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6775:10:7",
														"nodeType": "YulTypedName",
														"src": "6775:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6787:8:7",
														"nodeType": "YulTypedName",
														"src": "6787:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6800:6:7",
														"nodeType": "YulTypedName",
														"src": "6800:6:7",
														"type": ""
													}
												],
												"src": "6731:393:7"
											},
											{
												"body": {
													"nativeSrc": "7162:28:7",
													"nodeType": "YulBlock",
													"src": "7162:28:7",
													"statements": [
														{
															"nativeSrc": "7172:12:7",
															"nodeType": "YulAssignment",
															"src": "7172:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "7179:5:7",
																"nodeType": "YulIdentifier",
																"src": "7179:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7172:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7172:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7130:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7148:5:7",
														"nodeType": "YulTypedName",
														"src": "7148:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7158:3:7",
														"nodeType": "YulTypedName",
														"src": "7158:3:7",
														"type": ""
													}
												],
												"src": "7130:60:7"
											},
											{
												"body": {
													"nativeSrc": "7256:82:7",
													"nodeType": "YulBlock",
													"src": "7256:82:7",
													"statements": [
														{
															"nativeSrc": "7266:66:7",
															"nodeType": "YulAssignment",
															"src": "7266:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7324:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7324:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7306:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "7306:17:7"
																				},
																				"nativeSrc": "7306:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7297:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "7297:8:7"
																		},
																		"nativeSrc": "7297:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7297:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7279:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7279:17:7"
																},
																"nativeSrc": "7279:53:7",
																"nodeType": "YulFunctionCall",
																"src": "7279:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7266:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7266:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "7196:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7236:5:7",
														"nodeType": "YulTypedName",
														"src": "7236:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7246:9:7",
														"nodeType": "YulTypedName",
														"src": "7246:9:7",
														"type": ""
													}
												],
												"src": "7196:142:7"
											},
											{
												"body": {
													"nativeSrc": "7391:28:7",
													"nodeType": "YulBlock",
													"src": "7391:28:7",
													"statements": [
														{
															"nativeSrc": "7401:12:7",
															"nodeType": "YulAssignment",
															"src": "7401:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "7408:5:7",
																"nodeType": "YulIdentifier",
																"src": "7408:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "7344:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7377:5:7",
														"nodeType": "YulTypedName",
														"src": "7377:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7387:3:7",
														"nodeType": "YulTypedName",
														"src": "7387:3:7",
														"type": ""
													}
												],
												"src": "7344:75:7"
											},
											{
												"body": {
													"nativeSrc": "7501:193:7",
													"nodeType": "YulBlock",
													"src": "7501:193:7",
													"statements": [
														{
															"nativeSrc": "7511:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7511:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "7566:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7566:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "7535:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "7535:30:7"
																},
																"nativeSrc": "7535:39:7",
																"nodeType": "YulFunctionCall",
																"src": "7535:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "7515:16:7",
																	"nodeType": "YulTypedName",
																	"src": "7515:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7590:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7590:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7630:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7630:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7624:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7624:5:7"
																				},
																				"nativeSrc": "7624:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7624:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7637:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7637:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7669:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "7669:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7645:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "7645:23:7"
																				},
																				"nativeSrc": "7645:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7645:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "7596:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "7596:27:7"
																		},
																		"nativeSrc": "7596:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "7583:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7583:6:7"
																},
																"nativeSrc": "7583:105:7",
																"nodeType": "YulFunctionCall",
																"src": "7583:105:7"
															},
															"nativeSrc": "7583:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "7583:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "7425:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7478:4:7",
														"nodeType": "YulTypedName",
														"src": "7478:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7484:6:7",
														"nodeType": "YulTypedName",
														"src": "7484:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "7492:7:7",
														"nodeType": "YulTypedName",
														"src": "7492:7:7",
														"type": ""
													}
												],
												"src": "7425:269:7"
											},
											{
												"body": {
													"nativeSrc": "7749:24:7",
													"nodeType": "YulBlock",
													"src": "7749:24:7",
													"statements": [
														{
															"nativeSrc": "7759:8:7",
															"nodeType": "YulAssignment",
															"src": "7759:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7766:1:7",
																"nodeType": "YulLiteral",
																"src": "7766:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7759:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7700:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7745:3:7",
														"nodeType": "YulTypedName",
														"src": "7745:3:7",
														"type": ""
													}
												],
												"src": "7700:73:7"
											},
											{
												"body": {
													"nativeSrc": "7832:136:7",
													"nodeType": "YulBlock",
													"src": "7832:136:7",
													"statements": [
														{
															"nativeSrc": "7842:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7842:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7856:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "7856:30:7"
																},
																"nativeSrc": "7856:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7856:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7846:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7846:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7941:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7941:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7947:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7955:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7955:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7897:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:43:7"
																},
																"nativeSrc": "7897:65:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:65:7"
															},
															"nativeSrc": "7897:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "7897:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7779:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7818:4:7",
														"nodeType": "YulTypedName",
														"src": "7818:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7824:6:7",
														"nodeType": "YulTypedName",
														"src": "7824:6:7",
														"type": ""
													}
												],
												"src": "7779:189:7"
											},
											{
												"body": {
													"nativeSrc": "8024:136:7",
													"nodeType": "YulBlock",
													"src": "8024:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8091:63:7",
																"nodeType": "YulBlock",
																"src": "8091:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8135:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8135:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8142:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "8105:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "8105:29:7"
																			},
																			"nativeSrc": "8105:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8105:39:7"
																		},
																		"nativeSrc": "8105:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8105:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "8044:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8044:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8051:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8051:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8041:2:7"
																},
																"nativeSrc": "8041:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8041:14:7"
															},
															"nativeSrc": "8034:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8056:26:7",
																"nodeType": "YulBlock",
																"src": "8056:26:7",
																"statements": [
																	{
																		"nativeSrc": "8058:22:7",
																		"nodeType": "YulAssignment",
																		"src": "8058:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8071:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8071:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8078:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8078:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8067:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8067:3:7"
																			},
																			"nativeSrc": "8067:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8067:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "8058:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8058:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8038:2:7",
																"nodeType": "YulBlock",
																"src": "8038:2:7",
																"statements": []
															},
															"src": "8034:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7974:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "8012:5:7",
														"nodeType": "YulTypedName",
														"src": "8012:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8019:3:7",
														"nodeType": "YulTypedName",
														"src": "8019:3:7",
														"type": ""
													}
												],
												"src": "7974:186:7"
											},
											{
												"body": {
													"nativeSrc": "8245:464:7",
													"nodeType": "YulBlock",
													"src": "8245:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8271:431:7",
																"nodeType": "YulBlock",
																"src": "8271:431:7",
																"statements": [
																	{
																		"nativeSrc": "8285:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8285:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "8333:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8333:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "8301:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "8301:31:7"
																			},
																			"nativeSrc": "8301:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8301:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "8289:8:7",
																				"nodeType": "YulTypedName",
																				"src": "8289:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8352:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8352:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "8375:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8375:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "8403:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "8403:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "8385:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "8385:17:7"
																					},
																					"nativeSrc": "8385:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8385:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8371:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8371:3:7"
																			},
																			"nativeSrc": "8371:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8371:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "8356:11:7",
																				"nodeType": "YulTypedName",
																				"src": "8356:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8572:27:7",
																			"nodeType": "YulBlock",
																			"src": "8572:27:7",
																			"statements": [
																				{
																					"nativeSrc": "8574:23:7",
																					"nodeType": "YulAssignment",
																					"src": "8574:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "8589:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8589:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8574:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "8574:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8556:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "8556:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8568:2:7",
																					"nodeType": "YulLiteral",
																					"src": "8568:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8553:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8553:2:7"
																			},
																			"nativeSrc": "8553:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8553:18:7"
																		},
																		"nativeSrc": "8550:49:7",
																		"nodeType": "YulIf",
																		"src": "8550:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8641:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "8641:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8658:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8658:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8686:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8686:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8668:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "8668:17:7"
																							},
																							"nativeSrc": "8668:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8668:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8654:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8654:3:7"
																					},
																					"nativeSrc": "8654:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8654:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "8612:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "8612:28:7"
																			},
																			"nativeSrc": "8612:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8612:80:7"
																		},
																		"nativeSrc": "8612:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8612:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "8262:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8262:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8267:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8267:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8259:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8259:2:7"
																},
																"nativeSrc": "8259:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8259:11:7"
															},
															"nativeSrc": "8256:446:7",
															"nodeType": "YulIf",
															"src": "8256:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "8166:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "8221:5:7",
														"nodeType": "YulTypedName",
														"src": "8221:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8228:3:7",
														"nodeType": "YulTypedName",
														"src": "8228:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "8233:10:7",
														"nodeType": "YulTypedName",
														"src": "8233:10:7",
														"type": ""
													}
												],
												"src": "8166:543:7"
											},
											{
												"body": {
													"nativeSrc": "8778:54:7",
													"nodeType": "YulBlock",
													"src": "8778:54:7",
													"statements": [
														{
															"nativeSrc": "8788:37:7",
															"nodeType": "YulAssignment",
															"src": "8788:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8813:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8813:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8819:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8819:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8809:3:7"
																},
																"nativeSrc": "8809:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8809:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8788:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8788:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8715:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8753:4:7",
														"nodeType": "YulTypedName",
														"src": "8753:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8759:5:7",
														"nodeType": "YulTypedName",
														"src": "8759:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8769:8:7",
														"nodeType": "YulTypedName",
														"src": "8769:8:7",
														"type": ""
													}
												],
												"src": "8715:117:7"
											},
											{
												"body": {
													"nativeSrc": "8889:118:7",
													"nodeType": "YulBlock",
													"src": "8889:118:7",
													"statements": [
														{
															"nativeSrc": "8899:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8899:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8948:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8948:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8951:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8951:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8944:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8944:3:7"
																				},
																				"nativeSrc": "8944:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8944:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8963:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8963:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8959:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8959:3:7"
																				},
																				"nativeSrc": "8959:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8959:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8915:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "8915:28:7"
																		},
																		"nativeSrc": "8915:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8915:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8911:3:7"
																},
																"nativeSrc": "8911:56:7",
																"nodeType": "YulFunctionCall",
																"src": "8911:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8903:4:7",
																	"nodeType": "YulTypedName",
																	"src": "8903:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8976:25:7",
															"nodeType": "YulAssignment",
															"src": "8976:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8990:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8990:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8996:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8996:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8986:3:7"
																},
																"nativeSrc": "8986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8986:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8976:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8976:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8838:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8866:4:7",
														"nodeType": "YulTypedName",
														"src": "8866:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8872:5:7",
														"nodeType": "YulTypedName",
														"src": "8872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8882:6:7",
														"nodeType": "YulTypedName",
														"src": "8882:6:7",
														"type": ""
													}
												],
												"src": "8838:169:7"
											},
											{
												"body": {
													"nativeSrc": "9093:214:7",
													"nodeType": "YulBlock",
													"src": "9093:214:7",
													"statements": [
														{
															"nativeSrc": "9226:37:7",
															"nodeType": "YulAssignment",
															"src": "9226:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9253:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9253:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "9259:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9259:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "9234:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9234:18:7"
																},
																"nativeSrc": "9234:29:7",
																"nodeType": "YulFunctionCall",
																"src": "9234:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9226:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9226:4:7"
																}
															]
														},
														{
															"nativeSrc": "9272:29:7",
															"nodeType": "YulAssignment",
															"src": "9272:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9283:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9283:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9293:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9293:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9296:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9296:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9289:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9289:3:7"
																		},
																		"nativeSrc": "9289:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9289:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9280:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9280:2:7"
																},
																"nativeSrc": "9280:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9280:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9272:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9272:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9012:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9074:4:7",
														"nodeType": "YulTypedName",
														"src": "9074:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9080:3:7",
														"nodeType": "YulTypedName",
														"src": "9080:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9088:4:7",
														"nodeType": "YulTypedName",
														"src": "9088:4:7",
														"type": ""
													}
												],
												"src": "9012:295:7"
											},
											{
												"body": {
													"nativeSrc": "9404:1303:7",
													"nodeType": "YulBlock",
													"src": "9404:1303:7",
													"statements": [
														{
															"nativeSrc": "9415:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9415:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9462:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9429:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "9429:32:7"
																},
																"nativeSrc": "9429:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9429:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9419:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9419:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9551:22:7",
																"nodeType": "YulBlock",
																"src": "9551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9553:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9553:16:7"
																			},
																			"nativeSrc": "9553:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9553:18:7"
																		},
																		"nativeSrc": "9553:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9523:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9523:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9531:18:7",
																		"nodeType": "YulLiteral",
																		"src": "9531:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9520:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9520:2:7"
																},
																"nativeSrc": "9520:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9520:30:7"
															},
															"nativeSrc": "9517:56:7",
															"nodeType": "YulIf",
															"src": "9517:56:7"
														},
														{
															"nativeSrc": "9583:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9583:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9629:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9629:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "9623:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9623:5:7"
																		},
																		"nativeSrc": "9623:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9623:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9597:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "9597:25:7"
																},
																"nativeSrc": "9597:38:7",
																"nodeType": "YulFunctionCall",
																"src": "9597:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "9587:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9587:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9728:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9728:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9734:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9734:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9742:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9742:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9682:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "9682:45:7"
																},
																"nativeSrc": "9682:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9682:67:7"
															},
															"nativeSrc": "9682:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "9682:67:7"
														},
														{
															"nativeSrc": "9759:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9759:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "9776:1:7",
																"nodeType": "YulLiteral",
																"src": "9776:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9763:9:7",
																	"nodeType": "YulTypedName",
																	"src": "9763:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9787:17:7",
															"nodeType": "YulAssignment",
															"src": "9787:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "9800:4:7",
																"nodeType": "YulLiteral",
																"src": "9800:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "9787:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9851:611:7",
																		"nodeType": "YulBlock",
																		"src": "9851:611:7",
																		"statements": [
																			{
																				"nativeSrc": "9865:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9865:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9884:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9884:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9896:4:7",
																									"nodeType": "YulLiteral",
																									"src": "9896:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9892:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9892:3:7"
																							},
																							"nativeSrc": "9892:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9892:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9880:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9880:3:7"
																					},
																					"nativeSrc": "9880:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9880:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9869:7:7",
																						"nodeType": "YulTypedName",
																						"src": "9869:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9916:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9916:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9962:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9962:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9930:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "9930:31:7"
																					},
																					"nativeSrc": "9930:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9930:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9920:6:7",
																						"nodeType": "YulTypedName",
																						"src": "9920:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9980:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9980:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9989:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9989:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9984:1:7",
																						"nodeType": "YulTypedName",
																						"src": "9984:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10048:163:7",
																					"nodeType": "YulBlock",
																					"src": "10048:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10073:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "10073:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10091:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "10091:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10096:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "10096:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10087:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "10087:3:7"
																												},
																												"nativeSrc": "10087:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "10087:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10081:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "10081:5:7"
																										},
																										"nativeSrc": "10081:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "10081:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10066:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "10066:6:7"
																								},
																								"nativeSrc": "10066:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10066:42:7"
																							},
																							"nativeSrc": "10066:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10066:42:7"
																						},
																						{
																							"nativeSrc": "10125:24:7",
																							"nodeType": "YulAssignment",
																							"src": "10125:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10139:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "10139:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10147:1:7",
																										"nodeType": "YulLiteral",
																										"src": "10147:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10135:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "10135:3:7"
																								},
																								"nativeSrc": "10135:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10135:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10125:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "10125:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10166:31:7",
																							"nodeType": "YulAssignment",
																							"src": "10166:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10183:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "10183:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10194:2:7",
																										"nodeType": "YulLiteral",
																										"src": "10194:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10179:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "10179:3:7"
																								},
																								"nativeSrc": "10179:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10179:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10166:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "10166:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10014:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "10014:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10017:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "10017:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10011:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10011:2:7"
																					},
																					"nativeSrc": "10011:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10011:14:7"
																				},
																				"nativeSrc": "10003:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10026:21:7",
																					"nodeType": "YulBlock",
																					"src": "10026:21:7",
																					"statements": [
																						{
																							"nativeSrc": "10028:17:7",
																							"nodeType": "YulAssignment",
																							"src": "10028:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10037:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "10037:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10040:4:7",
																										"nodeType": "YulLiteral",
																										"src": "10040:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10033:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "10033:3:7"
																								},
																								"nativeSrc": "10033:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10033:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10028:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "10028:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10007:3:7",
																					"nodeType": "YulBlock",
																					"src": "10007:3:7",
																					"statements": []
																				},
																				"src": "10003:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "10247:156:7",
																					"nodeType": "YulBlock",
																					"src": "10247:156:7",
																					"statements": [
																						{
																							"nativeSrc": "10265:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10265:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10292:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "10292:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10297:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "10297:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10288:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "10288:3:7"
																										},
																										"nativeSrc": "10288:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "10288:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10282:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "10282:5:7"
																								},
																								"nativeSrc": "10282:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10282:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10269:9:7",
																									"nodeType": "YulTypedName",
																									"src": "10269:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10332:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "10332:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10359:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "10359:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "10374:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "10374:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "10382:4:7",
																														"nodeType": "YulLiteral",
																														"src": "10382:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "10370:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "10370:3:7"
																												},
																												"nativeSrc": "10370:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "10370:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "10340:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "10340:18:7"
																										},
																										"nativeSrc": "10340:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "10340:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10325:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "10325:6:7"
																								},
																								"nativeSrc": "10325:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10325:64:7"
																							},
																							"nativeSrc": "10325:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10325:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10230:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "10230:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10239:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "10239:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10227:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10227:2:7"
																					},
																					"nativeSrc": "10227:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10227:19:7"
																				},
																				"nativeSrc": "10224:179:7",
																				"nodeType": "YulIf",
																				"src": "10224:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10423:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "10423:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "10437:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "10437:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "10445:1:7",
																											"nodeType": "YulLiteral",
																											"src": "10445:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "10433:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "10433:3:7"
																									},
																									"nativeSrc": "10433:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "10433:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10449:1:7",
																									"nodeType": "YulLiteral",
																									"src": "10449:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10429:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "10429:3:7"
																							},
																							"nativeSrc": "10429:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "10429:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10416:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10416:6:7"
																					},
																					"nativeSrc": "10416:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10416:36:7"
																				},
																				"nativeSrc": "10416:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10416:36:7"
																			}
																		]
																	},
																	"nativeSrc": "9844:618:7",
																	"nodeType": "YulCase",
																	"src": "9844:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9849:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9849:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10479:222:7",
																		"nodeType": "YulBlock",
																		"src": "10479:222:7",
																		"statements": [
																			{
																				"nativeSrc": "10493:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10493:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10506:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10506:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10497:5:7",
																						"nodeType": "YulTypedName",
																						"src": "10497:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10530:67:7",
																					"nodeType": "YulBlock",
																					"src": "10530:67:7",
																					"statements": [
																						{
																							"nativeSrc": "10548:35:7",
																							"nodeType": "YulAssignment",
																							"src": "10548:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10567:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "10567:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10572:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "10572:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10563:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "10563:3:7"
																										},
																										"nativeSrc": "10563:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "10563:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10557:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "10557:5:7"
																								},
																								"nativeSrc": "10557:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10557:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10548:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "10548:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10523:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10523:6:7"
																				},
																				"nativeSrc": "10520:77:7",
																				"nodeType": "YulIf",
																				"src": "10520:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10617:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "10617:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10676:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "10676:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10683:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "10683:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10623:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "10623:52:7"
																							},
																							"nativeSrc": "10623:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "10623:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10610:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10610:6:7"
																					},
																					"nativeSrc": "10610:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10610:81:7"
																				},
																				"nativeSrc": "10610:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10610:81:7"
																			}
																		]
																	},
																	"nativeSrc": "10471:230:7",
																	"nodeType": "YulCase",
																	"src": "10471:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9824:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9824:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9832:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9821:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9821:2:7"
																},
																"nativeSrc": "9821:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9821:14:7"
															},
															"nativeSrc": "9814:887:7",
															"nodeType": "YulSwitch",
															"src": "9814:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9312:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9393:4:7",
														"nodeType": "YulTypedName",
														"src": "9393:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9399:3:7",
														"nodeType": "YulTypedName",
														"src": "9399:3:7",
														"type": ""
													}
												],
												"src": "9312:1395:7"
											},
											{
												"body": {
													"nativeSrc": "10809:73:7",
													"nodeType": "YulBlock",
													"src": "10809:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10826:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10826:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10831:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10831:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10819:6:7"
																},
																"nativeSrc": "10819:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10819:19:7"
															},
															"nativeSrc": "10819:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "10819:19:7"
														},
														{
															"nativeSrc": "10847:29:7",
															"nodeType": "YulAssignment",
															"src": "10847:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10866:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10866:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10871:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10871:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10862:3:7"
																},
																"nativeSrc": "10862:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10862:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10847:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "10847:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10713:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10781:3:7",
														"nodeType": "YulTypedName",
														"src": "10781:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10786:6:7",
														"nodeType": "YulTypedName",
														"src": "10786:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10797:11:7",
														"nodeType": "YulTypedName",
														"src": "10797:11:7",
														"type": ""
													}
												],
												"src": "10713:169:7"
											},
											{
												"body": {
													"nativeSrc": "10994:63:7",
													"nodeType": "YulBlock",
													"src": "10994:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11016:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11016:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11024:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11024:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:7"
																		},
																		"nativeSrc": "11012:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11012:14:7"
																	},
																	{
																		"hexValue": "6d6178537570706c7920746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "11028:21:7",
																		"nodeType": "YulLiteral",
																		"src": "11028:21:7",
																		"type": "",
																		"value": "maxSupply too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11005:6:7"
																},
																"nativeSrc": "11005:45:7",
																"nodeType": "YulFunctionCall",
																"src": "11005:45:7"
															},
															"nativeSrc": "11005:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "11005:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a",
												"nativeSrc": "10888:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10986:6:7",
														"nodeType": "YulTypedName",
														"src": "10986:6:7",
														"type": ""
													}
												],
												"src": "10888:169:7"
											},
											{
												"body": {
													"nativeSrc": "11209:220:7",
													"nodeType": "YulBlock",
													"src": "11209:220:7",
													"statements": [
														{
															"nativeSrc": "11219:74:7",
															"nodeType": "YulAssignment",
															"src": "11219:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11285:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11285:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11290:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11226:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11226:58:7"
																},
																"nativeSrc": "11226:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11226:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11219:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11219:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11391:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11391:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a",
																	"nativeSrc": "11302:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11302:88:7"
																},
																"nativeSrc": "11302:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11302:93:7"
															},
															"nativeSrc": "11302:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11302:93:7"
														},
														{
															"nativeSrc": "11404:19:7",
															"nodeType": "YulAssignment",
															"src": "11404:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11415:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11415:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11420:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11420:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11411:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11411:3:7"
																},
																"nativeSrc": "11411:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11411:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11404:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11404:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11063:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11197:3:7",
														"nodeType": "YulTypedName",
														"src": "11197:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11205:3:7",
														"nodeType": "YulTypedName",
														"src": "11205:3:7",
														"type": ""
													}
												],
												"src": "11063:366:7"
											},
											{
												"body": {
													"nativeSrc": "11606:248:7",
													"nodeType": "YulBlock",
													"src": "11606:248:7",
													"statements": [
														{
															"nativeSrc": "11616:26:7",
															"nodeType": "YulAssignment",
															"src": "11616:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11628:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11628:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11639:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11624:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11624:3:7"
																},
																"nativeSrc": "11624:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11624:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11616:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11616:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11663:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11663:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11674:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11674:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11659:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11659:3:7"
																		},
																		"nativeSrc": "11659:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11659:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11682:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11682:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11688:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11678:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11678:3:7"
																		},
																		"nativeSrc": "11678:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11678:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11652:6:7"
																},
																"nativeSrc": "11652:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11652:47:7"
															},
															"nativeSrc": "11652:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11652:47:7"
														},
														{
															"nativeSrc": "11708:139:7",
															"nodeType": "YulAssignment",
															"src": "11708:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11842:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11842:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11716:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11716:124:7"
																},
																"nativeSrc": "11716:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11716:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11708:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11435:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11586:9:7",
														"nodeType": "YulTypedName",
														"src": "11586:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11601:4:7",
														"nodeType": "YulTypedName",
														"src": "11601:4:7",
														"type": ""
													}
												],
												"src": "11435:419:7"
											},
											{
												"body": {
													"nativeSrc": "11966:128:7",
													"nodeType": "YulBlock",
													"src": "11966:128:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11988:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11988:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11996:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11996:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11984:3:7"
																		},
																		"nativeSrc": "11984:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11984:14:7"
																	},
																	{
																		"hexValue": "696e697469616c20737570706c792073686f756c64206e6f7420657863656564",
																		"kind": "string",
																		"nativeSrc": "12000:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12000:34:7",
																		"type": "",
																		"value": "initial supply should not exceed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11977:6:7"
																},
																"nativeSrc": "11977:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11977:58:7"
															},
															"nativeSrc": "11977:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11977:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12056:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12056:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12064:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12064:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12052:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12052:3:7"
																		},
																		"nativeSrc": "12052:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12052:15:7"
																	},
																	{
																		"hexValue": "20746865206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "12069:17:7",
																		"nodeType": "YulLiteral",
																		"src": "12069:17:7",
																		"type": "",
																		"value": " the max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12045:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12045:6:7"
																},
																"nativeSrc": "12045:42:7",
																"nodeType": "YulFunctionCall",
																"src": "12045:42:7"
															},
															"nativeSrc": "12045:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "12045:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516",
												"nativeSrc": "11860:234:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11958:6:7",
														"nodeType": "YulTypedName",
														"src": "11958:6:7",
														"type": ""
													}
												],
												"src": "11860:234:7"
											},
											{
												"body": {
													"nativeSrc": "12246:220:7",
													"nodeType": "YulBlock",
													"src": "12246:220:7",
													"statements": [
														{
															"nativeSrc": "12256:74:7",
															"nodeType": "YulAssignment",
															"src": "12256:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12322:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12322:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12327:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12327:2:7",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12263:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12263:58:7"
																},
																"nativeSrc": "12263:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12263:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12256:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12428:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12428:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516",
																	"nativeSrc": "12339:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12339:88:7"
																},
																"nativeSrc": "12339:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12339:93:7"
															},
															"nativeSrc": "12339:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12339:93:7"
														},
														{
															"nativeSrc": "12441:19:7",
															"nodeType": "YulAssignment",
															"src": "12441:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12452:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12452:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12457:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12457:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12448:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12448:3:7"
																},
																"nativeSrc": "12448:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12448:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12441:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12441:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12100:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12234:3:7",
														"nodeType": "YulTypedName",
														"src": "12234:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12242:3:7",
														"nodeType": "YulTypedName",
														"src": "12242:3:7",
														"type": ""
													}
												],
												"src": "12100:366:7"
											},
											{
												"body": {
													"nativeSrc": "12643:248:7",
													"nodeType": "YulBlock",
													"src": "12643:248:7",
													"statements": [
														{
															"nativeSrc": "12653:26:7",
															"nodeType": "YulAssignment",
															"src": "12653:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12665:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12665:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12676:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12676:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12661:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12661:3:7"
																},
																"nativeSrc": "12661:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12661:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12653:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12653:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12700:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12700:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12711:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12711:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12696:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12696:3:7"
																		},
																		"nativeSrc": "12696:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12696:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12719:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12719:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12725:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12725:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12715:3:7"
																		},
																		"nativeSrc": "12715:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12715:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12689:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12689:6:7"
																},
																"nativeSrc": "12689:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12689:47:7"
															},
															"nativeSrc": "12689:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12689:47:7"
														},
														{
															"nativeSrc": "12745:139:7",
															"nodeType": "YulAssignment",
															"src": "12745:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12879:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12879:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12753:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12753:124:7"
																},
																"nativeSrc": "12753:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12753:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12745:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12745:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12472:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12623:9:7",
														"nodeType": "YulTypedName",
														"src": "12623:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12638:4:7",
														"nodeType": "YulTypedName",
														"src": "12638:4:7",
														"type": ""
													}
												],
												"src": "12472:419:7"
											},
											{
												"body": {
													"nativeSrc": "12962:53:7",
													"nodeType": "YulBlock",
													"src": "12962:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12979:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12979:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13002:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13002:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12984:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12984:17:7"
																		},
																		"nativeSrc": "12984:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12984:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:7"
																},
																"nativeSrc": "12972:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12972:37:7"
															},
															"nativeSrc": "12972:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12972:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12897:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12950:5:7",
														"nodeType": "YulTypedName",
														"src": "12950:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12957:3:7",
														"nodeType": "YulTypedName",
														"src": "12957:3:7",
														"type": ""
													}
												],
												"src": "12897:118:7"
											},
											{
												"body": {
													"nativeSrc": "13119:124:7",
													"nodeType": "YulBlock",
													"src": "13119:124:7",
													"statements": [
														{
															"nativeSrc": "13129:26:7",
															"nodeType": "YulAssignment",
															"src": "13129:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13141:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13141:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13152:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13152:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13137:3:7"
																},
																"nativeSrc": "13137:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13137:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13129:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13129:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13209:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13209:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13233:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13233:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13218:3:7"
																		},
																		"nativeSrc": "13218:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13218:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13165:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13165:43:7"
																},
																"nativeSrc": "13165:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13165:71:7"
															},
															"nativeSrc": "13165:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13165:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13021:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13091:9:7",
														"nodeType": "YulTypedName",
														"src": "13091:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13103:6:7",
														"nodeType": "YulTypedName",
														"src": "13103:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13114:4:7",
														"nodeType": "YulTypedName",
														"src": "13114:4:7",
														"type": ""
													}
												],
												"src": "13021:222:7"
											},
											{
												"body": {
													"nativeSrc": "13314:53:7",
													"nodeType": "YulBlock",
													"src": "13314:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13331:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13331:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13354:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13354:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13336:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "13336:17:7"
																		},
																		"nativeSrc": "13336:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13336:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13324:6:7"
																},
																"nativeSrc": "13324:37:7",
																"nodeType": "YulFunctionCall",
																"src": "13324:37:7"
															},
															"nativeSrc": "13324:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "13324:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13249:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13302:5:7",
														"nodeType": "YulTypedName",
														"src": "13302:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13309:3:7",
														"nodeType": "YulTypedName",
														"src": "13309:3:7",
														"type": ""
													}
												],
												"src": "13249:118:7"
											},
											{
												"body": {
													"nativeSrc": "13471:124:7",
													"nodeType": "YulBlock",
													"src": "13471:124:7",
													"statements": [
														{
															"nativeSrc": "13481:26:7",
															"nodeType": "YulAssignment",
															"src": "13481:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13493:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13493:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13504:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13504:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13489:3:7"
																},
																"nativeSrc": "13489:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13489:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13481:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13481:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13561:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13561:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13574:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13574:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13585:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13585:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13570:3:7"
																		},
																		"nativeSrc": "13570:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13570:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13517:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13517:43:7"
																},
																"nativeSrc": "13517:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13517:71:7"
															},
															"nativeSrc": "13517:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13517:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13373:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13443:9:7",
														"nodeType": "YulTypedName",
														"src": "13443:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13455:6:7",
														"nodeType": "YulTypedName",
														"src": "13455:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13466:4:7",
														"nodeType": "YulTypedName",
														"src": "13466:4:7",
														"type": ""
													}
												],
												"src": "13373:222:7"
											},
											{
												"body": {
													"nativeSrc": "13629:152:7",
													"nodeType": "YulBlock",
													"src": "13629:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13646:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13646:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13649:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13649:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13639:6:7"
																},
																"nativeSrc": "13639:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13639:88:7"
															},
															"nativeSrc": "13639:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13639:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13743:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13743:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13746:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13746:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13736:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13736:6:7"
																},
																"nativeSrc": "13736:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13736:15:7"
															},
															"nativeSrc": "13736:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13736:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13767:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13767:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13770:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13770:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13760:6:7"
																},
																"nativeSrc": "13760:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13760:15:7"
															},
															"nativeSrc": "13760:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13760:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13601:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13601:180:7"
											},
											{
												"body": {
													"nativeSrc": "13831:147:7",
													"nodeType": "YulBlock",
													"src": "13831:147:7",
													"statements": [
														{
															"nativeSrc": "13841:25:7",
															"nodeType": "YulAssignment",
															"src": "13841:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13864:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13864:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13846:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13846:17:7"
																},
																"nativeSrc": "13846:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13846:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13841:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13841:1:7"
																}
															]
														},
														{
															"nativeSrc": "13875:25:7",
															"nodeType": "YulAssignment",
															"src": "13875:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13898:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13898:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13880:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13880:17:7"
																},
																"nativeSrc": "13880:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13880:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13875:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13875:1:7"
																}
															]
														},
														{
															"nativeSrc": "13909:16:7",
															"nodeType": "YulAssignment",
															"src": "13909:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13920:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13920:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13923:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13923:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13916:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13916:3:7"
																},
																"nativeSrc": "13916:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13916:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13909:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13949:22:7",
																"nodeType": "YulBlock",
																"src": "13949:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13951:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13951:16:7"
																			},
																			"nativeSrc": "13951:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13951:18:7"
																		},
																		"nativeSrc": "13951:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13951:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13941:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13941:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13944:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13938:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:7"
																},
																"nativeSrc": "13938:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13938:10:7"
															},
															"nativeSrc": "13935:36:7",
															"nodeType": "YulIf",
															"src": "13935:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13787:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13818:1:7",
														"nodeType": "YulTypedName",
														"src": "13818:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13821:1:7",
														"nodeType": "YulTypedName",
														"src": "13821:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13827:3:7",
														"nodeType": "YulTypedName",
														"src": "13827:3:7",
														"type": ""
													}
												],
												"src": "13787:191:7"
											},
											{
												"body": {
													"nativeSrc": "14138:288:7",
													"nodeType": "YulBlock",
													"src": "14138:288:7",
													"statements": [
														{
															"nativeSrc": "14148:26:7",
															"nodeType": "YulAssignment",
															"src": "14148:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14160:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14160:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14171:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14171:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14156:3:7"
																},
																"nativeSrc": "14156:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14156:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14148:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14148:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14228:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14228:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14241:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14241:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14252:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14252:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14237:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14237:3:7"
																		},
																		"nativeSrc": "14237:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14237:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14184:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14184:43:7"
																},
																"nativeSrc": "14184:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14184:71:7"
															},
															"nativeSrc": "14184:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14184:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14309:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14309:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14322:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14333:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14333:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14318:3:7"
																		},
																		"nativeSrc": "14318:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14318:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14265:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14265:43:7"
																},
																"nativeSrc": "14265:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14265:72:7"
															},
															"nativeSrc": "14265:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14265:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14391:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14391:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14415:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14400:3:7"
																		},
																		"nativeSrc": "14400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14400:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14347:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14347:43:7"
																},
																"nativeSrc": "14347:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14347:72:7"
															},
															"nativeSrc": "14347:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14347:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13984:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14094:9:7",
														"nodeType": "YulTypedName",
														"src": "14094:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14106:6:7",
														"nodeType": "YulTypedName",
														"src": "14106:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14114:6:7",
														"nodeType": "YulTypedName",
														"src": "14114:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14122:6:7",
														"nodeType": "YulTypedName",
														"src": "14122:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14133:4:7",
														"nodeType": "YulTypedName",
														"src": "14133:4:7",
														"type": ""
													}
												],
												"src": "13984:442:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_uint256t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a(memPtr) {\n\n        mstore(add(memPtr, 0), \"maxSupply too large\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516(memPtr) {\n\n        mstore(add(memPtr, 0), \"initial supply should not exceed\")\n\n        mstore(add(memPtr, 32), \" the max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161238238038061238283398181016040528101906100319190610744565b888881600390816100429190610a44565b5080600490816100529190610a44565b5050506c0100000000000000000000000086106100a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009b90610b6d565b60405180910390fd5b858211156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100de90610bfb565b60405180910390fd5b8660055f6101000a81548160ff021916908360ff160217905550856007819055508460085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836006819055508060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061019f838361029660201b60201c565b7f94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516101ef9190610c28565b60405180910390a17fbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516102479190610c28565b60405180910390a17fd65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e2436006546040516102809190610c50565b60405180910390a1505050505050505050610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610306575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102fd9190610c28565b60405180910390fd5b6103175f838361031b60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036b578060025f82825461035f9190610c96565b92505081905550610439565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103f4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103eb93929190610cc9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610480578060025f82825403925050819055506104ca565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105279190610c50565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105938261054d565b810181811067ffffffffffffffff821117156105b2576105b161055d565b5b80604052505050565b5f6105c4610534565b90506105d0828261058a565b919050565b5f67ffffffffffffffff8211156105ef576105ee61055d565b5b6105f88261054d565b9050602081019050919050565b8281835e5f83830152505050565b5f610625610620846105d5565b6105bb565b90508281526020810184848401111561064157610640610549565b5b61064c848285610605565b509392505050565b5f82601f83011261066857610667610545565b5b8151610678848260208601610613565b91505092915050565b5f60ff82169050919050565b61069681610681565b81146106a0575f80fd5b50565b5f815190506106b18161068d565b92915050565b5f819050919050565b6106c9816106b7565b81146106d3575f80fd5b50565b5f815190506106e4816106c0565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610713826106ea565b9050919050565b61072381610709565b811461072d575f80fd5b50565b5f8151905061073e8161071a565b92915050565b5f805f805f805f805f6101208a8c0312156107625761076161053d565b5b5f8a015167ffffffffffffffff81111561077f5761077e610541565b5b61078b8c828d01610654565b99505060208a015167ffffffffffffffff8111156107ac576107ab610541565b5b6107b88c828d01610654565b98505060406107c98c828d016106a3565b97505060606107da8c828d016106d6565b96505060806107eb8c828d01610730565b95505060a06107fc8c828d016106d6565b94505060c061080d8c828d01610730565b93505060e061081e8c828d016106d6565b9250506101006108308c828d01610730565b9150509295985092959850929598565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061088e57607f821691505b6020821081036108a1576108a061084a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026109037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108c8565b61090d86836108c8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61094861094361093e846106b7565b610925565b6106b7565b9050919050565b5f819050919050565b6109618361092e565b61097561096d8261094f565b8484546108d4565b825550505050565b5f90565b61098961097d565b610994818484610958565b505050565b5b818110156109b7576109ac5f82610981565b60018101905061099a565b5050565b601f8211156109fc576109cd816108a7565b6109d6846108b9565b810160208510156109e5578190505b6109f96109f1856108b9565b830182610999565b50505b505050565b5f82821c905092915050565b5f610a1c5f1984600802610a01565b1980831691505092915050565b5f610a348383610a0d565b9150826002028217905092915050565b610a4d82610840565b67ffffffffffffffff811115610a6657610a6561055d565b5b610a708254610877565b610a7b8282856109bb565b5f60209050601f831160018114610aac575f8415610a9a578287015190505b610aa48582610a29565b865550610b0b565b601f198416610aba866108a7565b5f5b82811015610ae157848901518255600182019150602085019450602081019050610abc565b86831015610afe5784890151610afa601f891682610a0d565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f6d6178537570706c7920746f6f206c61726765000000000000000000000000005f82015250565b5f610b57601383610b13565b9150610b6282610b23565b602082019050919050565b5f6020820190508181035f830152610b8481610b4b565b9050919050565b7f696e697469616c20737570706c792073686f756c64206e6f74206578636565645f8201527f20746865206d617820737570706c790000000000000000000000000000000000602082015250565b5f610be5602f83610b13565b9150610bf082610b8b565b604082019050919050565b5f6020820190508181035f830152610c1281610bd9565b9050919050565b610c2281610709565b82525050565b5f602082019050610c3b5f830184610c19565b92915050565b610c4a816106b7565b82525050565b5f602082019050610c635f830184610c41565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ca0826106b7565b9150610cab836106b7565b9250828201905080821115610cc357610cc2610c69565b5b92915050565b5f606082019050610cdc5f830186610c19565b610ce96020830185610c41565b610cf66040830184610c41565b949350505050565b61167780610d0b5f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80634eb03f6e116100a0578063ab8e786f1161006f578063ab8e786f146102b9578063d5abeb01146102e9578063dd62ed3e14610307578063e2f273bd14610337578063f851a4401461035357610109565b80634eb03f6e1461021f57806370a082311461023b57806395d89b411461026b578063a9059cbb1461028957610109565b806323b872dd116100dc57806323b872dd1461019757806324e770d0146101c757806329fb7ef6146101e5578063313ce5671461020157610109565b806306fdde031461010d578063075461721461012b578063095ea7b31461014957806318160ddd14610179575b5f80fd5b610115610371565b6040516101229190611183565b60405180910390f35b610133610401565b60405161014091906111e2565b60405180910390f35b610163600480360381019061015e919061125c565b610426565b60405161017091906112b4565b60405180910390f35b610181610448565b60405161018e91906112dc565b60405180910390f35b6101b160048036038101906101ac91906112f5565b610451565b6040516101be91906112b4565b60405180910390f35b6101cf61047f565b6040516101dc91906112dc565b60405180910390f35b6101ff60048036038101906101fa9190611345565b610488565b005b61020961055a565b604051610216919061138b565b60405180910390f35b610239600480360381019061023491906113a4565b61056f565b005b610255600480360381019061025091906113a4565b610699565b60405161026291906112dc565b60405180910390f35b6102736106de565b6040516102809190611183565b60405180910390f35b6102a3600480360381019061029e919061125c565b61076e565b6040516102b091906112b4565b60405180910390f35b6102d360048036038101906102ce919061125c565b610790565b6040516102e091906112b4565b60405180910390f35b6102f161093a565b6040516102fe91906112dc565b60405180910390f35b610321600480360381019061031c91906113cf565b610940565b60405161032e91906112dc565b60405180910390f35b610351600480360381019061034c91906113a4565b6109c2565b005b61035b610aec565b60405161036891906111e2565b60405180910390f35b6060600380546103809061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac9061143a565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610430610b11565b905061043d818585610b18565b600191505092915050565b5f600254905090565b5f8061045b610b11565b9050610468858285610b2a565b610473858585610bbc565b60019150509392505050565b5f600654905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e906114b4565b60405180910390fd5b806006819055507fd65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e24360065460405161054f91906112dc565b60405180910390a150565b5f60055f9054906101000a900460ff16905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f5906114b4565b60405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161068e91906111e2565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546106ed9061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546107199061143a565b80156107645780601f1061073b57610100808354040283529160200191610764565b820191905f5260205f20905b81548152906001019060200180831161074757829003601f168201915b5050505050905090565b5f80610778610b11565b9050610785818585610bbc565b600191505092915050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108179061151c565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087c575f9050610934565b5f3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ea919061154e565b905060075481106108fe575f915050610934565b600754838261090d91906115a6565b1115610924578060075461092191906115d9565b92505b61092e8484610cac565b60019150505b92915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a48906114b4565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610ae191906111e2565b60405180910390a150565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610b258383836001610d2b565b505050565b5f610b358484610940565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bb65781811015610ba7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b9e9392919061160c565b60405180910390fd5b610bb584848484035f610d2b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c2391906111e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c9391906111e2565b60405180910390fd5b610ca7838383610efa565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d1c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1391906111e2565b60405180910390fd5b610d275f8383610efa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d9b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d9291906111e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e0291906111e2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610ef4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610eeb91906112dc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4a578060025f828254610f3e91906115a6565b92505081905550611018565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fd3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fca9392919061160c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105f578060025f82825403925050819055506110a9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161110691906112dc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115582611113565b61115f818561111d565b935061116f81856020860161112d565b6111788161113b565b840191505092915050565b5f6020820190508181035f83015261119b818461114b565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111cc826111a3565b9050919050565b6111dc816111c2565b82525050565b5f6020820190506111f55f8301846111d3565b92915050565b5f80fd5b611208816111c2565b8114611212575f80fd5b50565b5f81359050611223816111ff565b92915050565b5f819050919050565b61123b81611229565b8114611245575f80fd5b50565b5f8135905061125681611232565b92915050565b5f8060408385031215611272576112716111fb565b5b5f61127f85828601611215565b925050602061129085828601611248565b9150509250929050565b5f8115159050919050565b6112ae8161129a565b82525050565b5f6020820190506112c75f8301846112a5565b92915050565b6112d681611229565b82525050565b5f6020820190506112ef5f8301846112cd565b92915050565b5f805f6060848603121561130c5761130b6111fb565b5b5f61131986828701611215565b935050602061132a86828701611215565b925050604061133b86828701611248565b9150509250925092565b5f6020828403121561135a576113596111fb565b5b5f61136784828501611248565b91505092915050565b5f60ff82169050919050565b61138581611370565b82525050565b5f60208201905061139e5f83018461137c565b92915050565b5f602082840312156113b9576113b86111fb565b5b5f6113c684828501611215565b91505092915050565b5f80604083850312156113e5576113e46111fb565b5b5f6113f285828601611215565b925050602061140385828601611215565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145157607f821691505b6020821081036114645761146361140d565b5b50919050565b7f4f6e6c792061646d696e2063616e206d616b6520746869732063616c6c0000005f82015250565b5f61149e601d8361111d565b91506114a98261146a565b602082019050919050565b5f6020820190508181035f8301526114cb81611492565b9050919050565b7f4f6e6c79206d696e7465722063616e206d616b6520746869732063616c6c00005f82015250565b5f611506601e8361111d565b9150611511826114d2565b602082019050919050565b5f6020820190508181035f830152611533816114fa565b9050919050565b5f8151905061154881611232565b92915050565b5f60208284031215611563576115626111fb565b5b5f6115708482850161153a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b082611229565b91506115bb83611229565b92508282019050808211156115d3576115d2611579565b5b92915050565b5f6115e382611229565b91506115ee83611229565b925082820390508181111561160657611605611579565b5b92915050565b5f60608201905061161f5f8301866111d3565b61162c60208301856112cd565b61163960408301846112cd565b94935050505056fea26469706673582212204633b8cdcafb9dd79d58abb12baa8c6946b31aafb390d14e92e17f009de5327564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2382 CODESIZE SUB DUP1 PUSH2 0x2382 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x744 JUMP JUMPDEST DUP9 DUP9 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST POP POP POP PUSH13 0x1000000000000000000000000 DUP7 LT PUSH2 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP3 GT ISZERO PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x19F DUP4 DUP4 PUSH2 0x296 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH32 0x94A0A7C0A7A455351029A521046D4438BC63E58A1EE8D984D624EB3161583B2C PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xBFC8D7754FEC5096BECC28E0816011E8D0ADCFE752FFA1C88924A7F88B00A41D PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xD65D781DB82F0BD55F732EA1B96F4C6565750DF815C18A70962CD8405274E243 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x306 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x317 PUSH0 DUP4 DUP4 PUSH2 0x31B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x439 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x480 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4CA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x593 DUP3 PUSH2 0x54D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x55D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C4 PUSH2 0x534 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D0 DUP3 DUP3 PUSH2 0x58A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x55D JUMP JUMPDEST JUMPDEST PUSH2 0x5F8 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x625 PUSH2 0x620 DUP5 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x641 JUMPI PUSH2 0x640 PUSH2 0x549 JUMP JUMPDEST JUMPDEST PUSH2 0x64C DUP5 DUP3 DUP6 PUSH2 0x605 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x545 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x678 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x613 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0x681 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C9 DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E4 DUP2 PUSH2 0x6C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x713 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x709 JUMP JUMPDEST DUP2 EQ PUSH2 0x72D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x73E DUP2 PUSH2 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH2 0x761 PUSH2 0x53D JUMP JUMPDEST JUMPDEST PUSH0 DUP11 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0x541 JUMP JUMPDEST JUMPDEST PUSH2 0x78B DUP13 DUP3 DUP14 ADD PUSH2 0x654 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 DUP11 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0x541 JUMP JUMPDEST JUMPDEST PUSH2 0x7B8 DUP13 DUP3 DUP14 ADD PUSH2 0x654 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x7C9 DUP13 DUP3 DUP14 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x7DA DUP13 DUP3 DUP14 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x7EB DUP13 DUP3 DUP14 ADD PUSH2 0x730 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x7FC DUP13 DUP3 DUP14 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x80D DUP13 DUP3 DUP14 ADD PUSH2 0x730 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x81E DUP13 DUP3 DUP14 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x830 DUP13 DUP3 DUP14 ADD PUSH2 0x730 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x88E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8A1 JUMPI PUSH2 0x8A0 PUSH2 0x84A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x903 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x90D DUP7 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x948 PUSH2 0x943 PUSH2 0x93E DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 DUP4 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x975 PUSH2 0x96D DUP3 PUSH2 0x94F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8D4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x989 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x994 DUP2 DUP5 DUP5 PUSH2 0x958 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9AC PUSH0 DUP3 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x99A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9CD DUP2 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x9D6 DUP5 PUSH2 0x8B9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9E5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9F9 PUSH2 0x9F1 DUP6 PUSH2 0x8B9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x999 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xA01 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA34 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D DUP3 PUSH2 0x840 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA65 PUSH2 0x55D JUMP JUMPDEST JUMPDEST PUSH2 0xA70 DUP3 SLOAD PUSH2 0x877 JUMP JUMPDEST PUSH2 0xA7B DUP3 DUP3 DUP6 PUSH2 0x9BB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAAC JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA9A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAA4 DUP6 DUP3 PUSH2 0xA29 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xABA DUP7 PUSH2 0x8A7 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAE1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xABC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAFE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAFA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA0D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D6178537570706C7920746F6F206C6172676500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB57 PUSH1 0x13 DUP4 PUSH2 0xB13 JUMP JUMPDEST SWAP2 POP PUSH2 0xB62 DUP3 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB84 DUP2 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E697469616C20737570706C792073686F756C64206E6F7420657863656564 PUSH0 DUP3 ADD MSTORE PUSH32 0x20746865206D617820737570706C790000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBE5 PUSH1 0x2F DUP4 PUSH2 0xB13 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF0 DUP3 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC12 DUP2 PUSH2 0xBD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0x709 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH0 DUP4 ADD DUP5 PUSH2 0xC19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC63 PUSH0 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCA0 DUP3 PUSH2 0x6B7 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAB DUP4 PUSH2 0x6B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xCC2 PUSH2 0xC69 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCDC PUSH0 DUP4 ADD DUP7 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0xCE9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xCF6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1677 DUP1 PUSH2 0xD0B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EB03F6E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAB8E786F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAB8E786F EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE2F273BD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x353 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4EB03F6E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x29FB7EF6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x430 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x45B PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x468 DUP6 DUP3 DUP6 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x473 DUP6 DUP6 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xD65D781DB82F0BD55F732EA1B96F4C6565750DF815C18A70962CD8405274E243 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x94A0A7C0A7A455351029A521046D4438BC63E58A1EE8D984D624EB3161583B2C PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x764 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x764 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x747 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x778 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP2 DUP6 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87C JUMPI PUSH0 SWAP1 POP PUSH2 0x934 JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 LT PUSH2 0x8FE JUMPI PUSH0 SWAP2 POP POP PUSH2 0x934 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 DUP3 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST GT ISZERO PUSH2 0x924 JUMPI DUP1 PUSH1 0x7 SLOAD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x92E DUP5 DUP5 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBFC8D7754FEC5096BECC28E0816011E8D0ADCFE752FFA1C88924A7F88B00A41D PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB35 DUP5 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBB6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBA7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD2B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA7 DUP4 DUP4 DUP4 PUSH2 0xEFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD27 PUSH0 DUP4 DUP4 PUSH2 0xEFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEF4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1018 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFD3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x115F DUP2 DUP6 PUSH2 0x111D JUMP JUMPDEST SWAP4 POP PUSH2 0x116F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1178 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119B DUP2 DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC DUP3 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x11C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x11C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1223 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1256 DUP2 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D6 DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EF PUSH0 DUP4 ADD DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1319 DUP7 DUP3 DUP8 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x132A DUP7 DUP3 DUP8 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x133B DUP7 DUP3 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1385 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139E PUSH0 DUP4 ADD DUP5 PUSH2 0x137C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1403 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1451 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x140D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206D616B6520746869732063616C6C000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x149E PUSH1 0x1D DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP3 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CB DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D696E7465722063616E206D616B6520746869732063616C6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1506 PUSH1 0x1E DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x1511 DUP3 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1533 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1548 DUP2 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B0 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BB DUP4 PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15D3 JUMPI PUSH2 0x15D2 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E3 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EE DUP4 PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x161F PUSH0 DUP4 ADD DUP7 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x162C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x1639 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CALLER 0xB8 0xCD 0xCA 0xFB SWAP14 0xD7 SWAP14 PC 0xAB 0xB1 0x2B 0xAA DUP13 PUSH10 0x46B31AAFB390D14E92E1 PUSH32 0x9DE5327564736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "721:3089:6:-:0;;;1111:944;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:5;1410:7;1970:5:1;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1450:7:6::1;1437:10;:20;1429:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1615:10;1596:15;:29;;1575:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;1720:9;1708;;:21;;;;;;;;;;;;;;;;;;1751:10;1739:9;:22;;;;1780:7;1771:6;;:16;;;;;;;;;;;;;;;;;;1821:21;1797;:45;;;;1860:6;1852:5;;:14;;;;;;;;;;;;;;;;;;1876:40;1882:16;1900:15;1876:5;;;:40;;:::i;:::-;1931:20;1944:6;;;;;;;;;;;1931:20;;;;;;:::i;:::-;;;;;;;;1966:18;1978:5;;;;;;;;;;;1966:18;;;;;;:::i;:::-;;;;;;;;1999:49;2026:21;;1999:49;;;;;;:::i;:::-;;;;;;;;1111:944:::0;;;;;;;;;721:3089;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:86::-;2605:7;2645:4;2638:5;2634:16;2623:27;;2570:86;;;:::o;2662:118::-;2733:22;2749:5;2733:22;:::i;:::-;2726:5;2723:33;2713:61;;2770:1;2767;2760:12;2713:61;2662:118;:::o;2786:139::-;2841:5;2872:6;2866:13;2857:22;;2888:31;2913:5;2888:31;:::i;:::-;2786:139;;;;:::o;2931:77::-;2968:7;2997:5;2986:16;;2931:77;;;:::o;3014:122::-;3087:24;3105:5;3087:24;:::i;:::-;3080:5;3077:35;3067:63;;3126:1;3123;3116:12;3067:63;3014:122;:::o;3142:143::-;3199:5;3230:6;3224:13;3215:22;;3246:33;3273:5;3246:33;:::i;:::-;3142:143;;;;:::o;3291:126::-;3328:7;3368:42;3361:5;3357:54;3346:65;;3291:126;;;:::o;3423:96::-;3460:7;3489:24;3507:5;3489:24;:::i;:::-;3478:35;;3423:96;;;:::o;3525:122::-;3598:24;3616:5;3598:24;:::i;:::-;3591:5;3588:35;3578:63;;3637:1;3634;3627:12;3578:63;3525:122;:::o;3653:143::-;3710:5;3741:6;3735:13;3726:22;;3757:33;3784:5;3757:33;:::i;:::-;3653:143;;;;:::o;3802:1947::-;3962:6;3970;3978;3986;3994;4002;4010;4018;4026;4075:3;4063:9;4054:7;4050:23;4046:33;4043:120;;;4082:79;;:::i;:::-;4043:120;4223:1;4212:9;4208:17;4202:24;4253:18;4245:6;4242:30;4239:117;;;4275:79;;:::i;:::-;4239:117;4380:74;4446:7;4437:6;4426:9;4422:22;4380:74;:::i;:::-;4370:84;;4173:291;4524:2;4513:9;4509:18;4503:25;4555:18;4547:6;4544:30;4541:117;;;4577:79;;:::i;:::-;4541:117;4682:74;4748:7;4739:6;4728:9;4724:22;4682:74;:::i;:::-;4672:84;;4474:292;4805:2;4831:62;4885:7;4876:6;4865:9;4861:22;4831:62;:::i;:::-;4821:72;;4776:127;4942:2;4968:64;5024:7;5015:6;5004:9;5000:22;4968:64;:::i;:::-;4958:74;;4913:129;5081:3;5108:64;5164:7;5155:6;5144:9;5140:22;5108:64;:::i;:::-;5098:74;;5052:130;5221:3;5248:64;5304:7;5295:6;5284:9;5280:22;5248:64;:::i;:::-;5238:74;;5192:130;5361:3;5388:64;5444:7;5435:6;5424:9;5420:22;5388:64;:::i;:::-;5378:74;;5332:130;5501:3;5528:64;5584:7;5575:6;5564:9;5560:22;5528:64;:::i;:::-;5518:74;;5472:130;5641:3;5668:64;5724:7;5715:6;5704:9;5700:22;5668:64;:::i;:::-;5658:74;;5612:130;3802:1947;;;;;;;;;;;:::o;5755:99::-;5807:6;5841:5;5835:12;5825:22;;5755:99;;;:::o;5860:180::-;5908:77;5905:1;5898:88;6005:4;6002:1;5995:15;6029:4;6026:1;6019:15;6046:320;6090:6;6127:1;6121:4;6117:12;6107:22;;6174:1;6168:4;6164:12;6195:18;6185:81;;6251:4;6243:6;6239:17;6229:27;;6185:81;6313:2;6305:6;6302:14;6282:18;6279:38;6276:84;;6332:18;;:::i;:::-;6276:84;6097:269;6046:320;;;:::o;6372:141::-;6421:4;6444:3;6436:11;;6467:3;6464:1;6457:14;6501:4;6498:1;6488:18;6480:26;;6372:141;;;:::o;6519:93::-;6556:6;6603:2;6598;6591:5;6587:14;6583:23;6573:33;;6519:93;;;:::o;6618:107::-;6662:8;6712:5;6706:4;6702:16;6681:37;;6618:107;;;;:::o;6731:393::-;6800:6;6850:1;6838:10;6834:18;6873:97;6903:66;6892:9;6873:97;:::i;:::-;6991:39;7021:8;7010:9;6991:39;:::i;:::-;6979:51;;7063:4;7059:9;7052:5;7048:21;7039:30;;7112:4;7102:8;7098:19;7091:5;7088:30;7078:40;;6807:317;;6731:393;;;;;:::o;7130:60::-;7158:3;7179:5;7172:12;;7130:60;;;:::o;7196:142::-;7246:9;7279:53;7297:34;7306:24;7324:5;7306:24;:::i;:::-;7297:34;:::i;:::-;7279:53;:::i;:::-;7266:66;;7196:142;;;:::o;7344:75::-;7387:3;7408:5;7401:12;;7344:75;;;:::o;7425:269::-;7535:39;7566:7;7535:39;:::i;:::-;7596:91;7645:41;7669:16;7645:41;:::i;:::-;7637:6;7630:4;7624:11;7596:91;:::i;:::-;7590:4;7583:105;7501:193;7425:269;;;:::o;7700:73::-;7745:3;7700:73;:::o;7779:189::-;7856:32;;:::i;:::-;7897:65;7955:6;7947;7941:4;7897:65;:::i;:::-;7832:136;7779:189;;:::o;7974:186::-;8034:120;8051:3;8044:5;8041:14;8034:120;;;8105:39;8142:1;8135:5;8105:39;:::i;:::-;8078:1;8071:5;8067:13;8058:22;;8034:120;;;7974:186;;:::o;8166:543::-;8267:2;8262:3;8259:11;8256:446;;;8301:38;8333:5;8301:38;:::i;:::-;8385:29;8403:10;8385:29;:::i;:::-;8375:8;8371:44;8568:2;8556:10;8553:18;8550:49;;;8589:8;8574:23;;8550:49;8612:80;8668:22;8686:3;8668:22;:::i;:::-;8658:8;8654:37;8641:11;8612:80;:::i;:::-;8271:431;;8256:446;8166:543;;;:::o;8715:117::-;8769:8;8819:5;8813:4;8809:16;8788:37;;8715:117;;;;:::o;8838:169::-;8882:6;8915:51;8963:1;8959:6;8951:5;8948:1;8944:13;8915:51;:::i;:::-;8911:56;8996:4;8990;8986:15;8976:25;;8889:118;8838:169;;;;:::o;9012:295::-;9088:4;9234:29;9259:3;9253:4;9234:29;:::i;:::-;9226:37;;9296:3;9293:1;9289:11;9283:4;9280:21;9272:29;;9012:295;;;;:::o;9312:1395::-;9429:37;9462:3;9429:37;:::i;:::-;9531:18;9523:6;9520:30;9517:56;;;9553:18;;:::i;:::-;9517:56;9597:38;9629:4;9623:11;9597:38;:::i;:::-;9682:67;9742:6;9734;9728:4;9682:67;:::i;:::-;9776:1;9800:4;9787:17;;9832:2;9824:6;9821:14;9849:1;9844:618;;;;10506:1;10523:6;10520:77;;;10572:9;10567:3;10563:19;10557:26;10548:35;;10520:77;10623:67;10683:6;10676:5;10623:67;:::i;:::-;10617:4;10610:81;10479:222;9814:887;;9844:618;9896:4;9892:9;9884:6;9880:22;9930:37;9962:4;9930:37;:::i;:::-;9989:1;10003:208;10017:7;10014:1;10011:14;10003:208;;;10096:9;10091:3;10087:19;10081:26;10073:6;10066:42;10147:1;10139:6;10135:14;10125:24;;10194:2;10183:9;10179:18;10166:31;;10040:4;10037:1;10033:12;10028:17;;10003:208;;;10239:6;10230:7;10227:19;10224:179;;;10297:9;10292:3;10288:19;10282:26;10340:48;10382:4;10374:6;10370:17;10359:9;10340:48;:::i;:::-;10332:6;10325:64;10247:156;10224:179;10449:1;10445;10437:6;10433:14;10429:22;10423:4;10416:36;9851:611;;;9814:887;;9404:1303;;;9312:1395;;:::o;10713:169::-;10797:11;10831:6;10826:3;10819:19;10871:4;10866:3;10862:14;10847:29;;10713:169;;;;:::o;10888:::-;11028:21;11024:1;11016:6;11012:14;11005:45;10888:169;:::o;11063:366::-;11205:3;11226:67;11290:2;11285:3;11226:67;:::i;:::-;11219:74;;11302:93;11391:3;11302:93;:::i;:::-;11420:2;11415:3;11411:12;11404:19;;11063:366;;;:::o;11435:419::-;11601:4;11639:2;11628:9;11624:18;11616:26;;11688:9;11682:4;11678:20;11674:1;11663:9;11659:17;11652:47;11716:131;11842:4;11716:131;:::i;:::-;11708:139;;11435:419;;;:::o;11860:234::-;12000:34;11996:1;11988:6;11984:14;11977:58;12069:17;12064:2;12056:6;12052:15;12045:42;11860:234;:::o;12100:366::-;12242:3;12263:67;12327:2;12322:3;12263:67;:::i;:::-;12256:74;;12339:93;12428:3;12339:93;:::i;:::-;12457:2;12452:3;12448:12;12441:19;;12100:366;;;:::o;12472:419::-;12638:4;12676:2;12665:9;12661:18;12653:26;;12725:9;12719:4;12715:20;12711:1;12700:9;12696:17;12689:47;12753:131;12879:4;12753:131;:::i;:::-;12745:139;;12472:419;;;:::o;12897:118::-;12984:24;13002:5;12984:24;:::i;:::-;12979:3;12972:37;12897:118;;:::o;13021:222::-;13114:4;13152:2;13141:9;13137:18;13129:26;;13165:71;13233:1;13222:9;13218:17;13209:6;13165:71;:::i;:::-;13021:222;;;;:::o;13249:118::-;13336:24;13354:5;13336:24;:::i;:::-;13331:3;13324:37;13249:118;;:::o;13373:222::-;13466:4;13504:2;13493:9;13489:18;13481:26;;13517:71;13585:1;13574:9;13570:17;13561:6;13517:71;:::i;:::-;13373:222;;;;:::o;13601:180::-;13649:77;13646:1;13639:88;13746:4;13743:1;13736:15;13770:4;13767:1;13760:15;13787:191;13827:3;13846:20;13864:1;13846:20;:::i;:::-;13841:25;;13880:20;13898:1;13880:20;:::i;:::-;13875:25;;13923:1;13920;13916:9;13909:16;;13944:3;13941:1;13938:10;13935:36;;;13951:18;;:::i;:::-;13935:36;13787:191;;;;:::o;13984:442::-;14133:4;14171:2;14160:9;14156:18;14148:26;;14184:71;14252:1;14241:9;14237:17;14228:6;14184:71;:::i;:::-;14265:72;14333:2;14322:9;14318:18;14309:6;14265:72;:::i;:::-;14347;14415:2;14404:9;14400:18;14391:6;14347:72;:::i;:::-;13984:442;;;;;;:::o;721:3089:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 2840,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3371,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 3244,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2833,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 2858,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3004,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3834,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@admin_1870": {
									"entryPoint": 2796,
									"id": 1870,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 2368,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1062,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1689,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1958": {
									"entryPoint": 1370,
									"id": 1958,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxSupply_1866": {
									"entryPoint": 2362,
									"id": 1866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintStakerReward_2011": {
									"entryPoint": 1936,
									"id": 2011,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minter_1868": {
									"entryPoint": 1025,
									"id": 1868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 881,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stakerRewardPerBlock_2019": {
									"entryPoint": 1151,
									"id": 2019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1758,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1096,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1105,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1902,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateAdmin_2067": {
									"entryPoint": 2498,
									"id": 2067,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMinter_2051": {
									"entryPoint": 1391,
									"id": 2051,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateStakerRewardPerBlock_2035": {
									"entryPoint": 1160,
									"id": 2035,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10259:7",
										"nodeType": "YulBlock",
										"src": "0:10259:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1287:81:7",
													"nodeType": "YulBlock",
													"src": "1287:81:7",
													"statements": [
														{
															"nativeSrc": "1297:65:7",
															"nodeType": "YulAssignment",
															"src": "1297:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1312:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1312:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1319:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1319:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:7"
																},
																"nativeSrc": "1308:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1242:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:7",
														"nodeType": "YulTypedName",
														"src": "1269:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:7",
														"nodeType": "YulTypedName",
														"src": "1279:7:7",
														"type": ""
													}
												],
												"src": "1242:126:7"
											},
											{
												"body": {
													"nativeSrc": "1419:51:7",
													"nodeType": "YulBlock",
													"src": "1419:51:7",
													"statements": [
														{
															"nativeSrc": "1429:35:7",
															"nodeType": "YulAssignment",
															"src": "1429:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1458:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1458:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1440:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:17:7"
																},
																"nativeSrc": "1440:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1429:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1374:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1401:5:7",
														"nodeType": "YulTypedName",
														"src": "1401:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1411:7:7",
														"nodeType": "YulTypedName",
														"src": "1411:7:7",
														"type": ""
													}
												],
												"src": "1374:96:7"
											},
											{
												"body": {
													"nativeSrc": "1541:53:7",
													"nodeType": "YulBlock",
													"src": "1541:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1558:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1558:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1581:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1581:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1563:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1563:17:7"
																		},
																		"nativeSrc": "1563:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1563:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1551:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:7"
																},
																"nativeSrc": "1551:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1551:37:7"
															},
															"nativeSrc": "1551:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1551:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1476:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1529:5:7",
														"nodeType": "YulTypedName",
														"src": "1529:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1536:3:7",
														"nodeType": "YulTypedName",
														"src": "1536:3:7",
														"type": ""
													}
												],
												"src": "1476:118:7"
											},
											{
												"body": {
													"nativeSrc": "1698:124:7",
													"nodeType": "YulBlock",
													"src": "1698:124:7",
													"statements": [
														{
															"nativeSrc": "1708:26:7",
															"nodeType": "YulAssignment",
															"src": "1708:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1720:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1720:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1731:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1716:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1716:3:7"
																},
																"nativeSrc": "1716:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1716:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1708:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1788:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1801:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1797:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1797:3:7"
																		},
																		"nativeSrc": "1797:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1744:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:43:7"
																},
																"nativeSrc": "1744:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:71:7"
															},
															"nativeSrc": "1744:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1744:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1600:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1670:9:7",
														"nodeType": "YulTypedName",
														"src": "1670:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1682:6:7",
														"nodeType": "YulTypedName",
														"src": "1682:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1693:4:7",
														"nodeType": "YulTypedName",
														"src": "1693:4:7",
														"type": ""
													}
												],
												"src": "1600:222:7"
											},
											{
												"body": {
													"nativeSrc": "1868:35:7",
													"nodeType": "YulBlock",
													"src": "1868:35:7",
													"statements": [
														{
															"nativeSrc": "1878:19:7",
															"nodeType": "YulAssignment",
															"src": "1878:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																},
																"nativeSrc": "1888:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1888:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1828:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1861:6:7",
														"nodeType": "YulTypedName",
														"src": "1861:6:7",
														"type": ""
													}
												],
												"src": "1828:75:7"
											},
											{
												"body": {
													"nativeSrc": "1998:28:7",
													"nodeType": "YulBlock",
													"src": "1998:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2015:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2018:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:7"
																},
																"nativeSrc": "2008:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:7"
															},
															"nativeSrc": "2008:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2008:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1909:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1909:117:7"
											},
											{
												"body": {
													"nativeSrc": "2121:28:7",
													"nodeType": "YulBlock",
													"src": "2121:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2141:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:7"
																},
																"nativeSrc": "2131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:12:7"
															},
															"nativeSrc": "2131:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2032:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2032:117:7"
											},
											{
												"body": {
													"nativeSrc": "2198:79:7",
													"nodeType": "YulBlock",
													"src": "2198:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2255:16:7",
																"nodeType": "YulBlock",
																"src": "2255:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:7"
																			},
																			"nativeSrc": "2257:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:7"
																		},
																		"nativeSrc": "2257:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2246:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2246:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2228:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2228:17:7"
																				},
																				"nativeSrc": "2228:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2218:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2218:2:7"
																		},
																		"nativeSrc": "2218:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																},
																"nativeSrc": "2211:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2211:43:7"
															},
															"nativeSrc": "2208:63:7",
															"nodeType": "YulIf",
															"src": "2208:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2155:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:7",
														"nodeType": "YulTypedName",
														"src": "2191:5:7",
														"type": ""
													}
												],
												"src": "2155:122:7"
											},
											{
												"body": {
													"nativeSrc": "2335:87:7",
													"nodeType": "YulBlock",
													"src": "2335:87:7",
													"statements": [
														{
															"nativeSrc": "2345:29:7",
															"nodeType": "YulAssignment",
															"src": "2345:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2367:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:7"
																},
																"nativeSrc": "2354:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2354:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2410:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2410:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2383:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:26:7"
																},
																"nativeSrc": "2383:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2383:33:7"
															},
															"nativeSrc": "2383:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2383:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2283:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2313:6:7",
														"nodeType": "YulTypedName",
														"src": "2313:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2321:3:7",
														"nodeType": "YulTypedName",
														"src": "2321:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2329:5:7",
														"nodeType": "YulTypedName",
														"src": "2329:5:7",
														"type": ""
													}
												],
												"src": "2283:139:7"
											},
											{
												"body": {
													"nativeSrc": "2473:32:7",
													"nodeType": "YulBlock",
													"src": "2473:32:7",
													"statements": [
														{
															"nativeSrc": "2483:16:7",
															"nodeType": "YulAssignment",
															"src": "2483:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2494:5:7",
																"nodeType": "YulIdentifier",
																"src": "2494:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2483:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2428:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:7",
														"nodeType": "YulTypedName",
														"src": "2455:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2465:7:7",
														"nodeType": "YulTypedName",
														"src": "2465:7:7",
														"type": ""
													}
												],
												"src": "2428:77:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3756:53:7",
													"nodeType": "YulBlock",
													"src": "3756:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3778:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:7"
																		},
																		"nativeSrc": "3778:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:7"
																},
																"nativeSrc": "3766:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:7"
															},
															"nativeSrc": "3766:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3691:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:7",
														"nodeType": "YulTypedName",
														"src": "3751:3:7",
														"type": ""
													}
												],
												"src": "3691:118:7"
											},
											{
												"body": {
													"nativeSrc": "3913:124:7",
													"nodeType": "YulBlock",
													"src": "3913:124:7",
													"statements": [
														{
															"nativeSrc": "3923:26:7",
															"nodeType": "YulAssignment",
															"src": "3923:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:7"
																},
																"nativeSrc": "3931:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:7"
																		},
																		"nativeSrc": "4012:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3959:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:7"
																},
																"nativeSrc": "3959:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:7"
															},
															"nativeSrc": "3959:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3815:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:7",
														"nodeType": "YulTypedName",
														"src": "3885:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:7",
														"nodeType": "YulTypedName",
														"src": "3897:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:7",
														"nodeType": "YulTypedName",
														"src": "3908:4:7",
														"type": ""
													}
												],
												"src": "3815:222:7"
											},
											{
												"body": {
													"nativeSrc": "4143:519:7",
													"nodeType": "YulBlock",
													"src": "4143:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4189:83:7",
																"nodeType": "YulBlock",
																"src": "4189:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4191:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:7"
																			},
																			"nativeSrc": "4191:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:7"
																		},
																		"nativeSrc": "4191:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:7"
																		},
																		"nativeSrc": "4160:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:7"
																},
																"nativeSrc": "4156:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:7"
															},
															"nativeSrc": "4153:119:7",
															"nodeType": "YulIf",
															"src": "4153:119:7"
														},
														{
															"nativeSrc": "4282:117:7",
															"nodeType": "YulBlock",
															"src": "4282:117:7",
															"statements": [
																{
																	"nativeSrc": "4297:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4297:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4311:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4311:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4301:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4301:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4326:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4326:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4361:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4361:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4372:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4357:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:7"
																				},
																				"nativeSrc": "4357:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4357:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4336:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4336:20:7"
																		},
																		"nativeSrc": "4336:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4326:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4326:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4409:118:7",
															"nodeType": "YulBlock",
															"src": "4409:118:7",
															"statements": [
																{
																	"nativeSrc": "4424:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4424:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4428:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4428:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:7"
																				},
																				"nativeSrc": "4485:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:7"
																		},
																		"nativeSrc": "4464:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4454:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:7",
															"nodeType": "YulBlock",
															"src": "4537:118:7",
															"statements": [
																{
																	"nativeSrc": "4552:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:7"
																				},
																				"nativeSrc": "4613:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4592:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:7"
																		},
																		"nativeSrc": "4592:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4582:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4043:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:7",
														"nodeType": "YulTypedName",
														"src": "4097:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4108:7:7",
														"nodeType": "YulTypedName",
														"src": "4108:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4120:6:7",
														"nodeType": "YulTypedName",
														"src": "4120:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:7",
														"nodeType": "YulTypedName",
														"src": "4128:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4136:6:7",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													}
												],
												"src": "4043:619:7"
											},
											{
												"body": {
													"nativeSrc": "4734:263:7",
													"nodeType": "YulBlock",
													"src": "4734:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4780:83:7",
																"nodeType": "YulBlock",
																"src": "4780:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4782:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4782:77:7"
																			},
																			"nativeSrc": "4782:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4782:79:7"
																		},
																		"nativeSrc": "4782:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4755:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4755:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:7"
																		},
																		"nativeSrc": "4751:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4776:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:32:7"
															},
															"nativeSrc": "4744:119:7",
															"nodeType": "YulIf",
															"src": "4744:119:7"
														},
														{
															"nativeSrc": "4873:117:7",
															"nodeType": "YulBlock",
															"src": "4873:117:7",
															"statements": [
																{
																	"nativeSrc": "4888:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4892:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:7"
																				},
																				"nativeSrc": "4948:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:7"
																		},
																		"nativeSrc": "4927:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4917:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4668:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4704:9:7",
														"nodeType": "YulTypedName",
														"src": "4704:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4715:7:7",
														"nodeType": "YulTypedName",
														"src": "4715:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4727:6:7",
														"nodeType": "YulTypedName",
														"src": "4727:6:7",
														"type": ""
													}
												],
												"src": "4668:329:7"
											},
											{
												"body": {
													"nativeSrc": "5046:43:7",
													"nodeType": "YulBlock",
													"src": "5046:43:7",
													"statements": [
														{
															"nativeSrc": "5056:27:7",
															"nodeType": "YulAssignment",
															"src": "5056:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:7"
																},
																"nativeSrc": "5067:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:7",
														"nodeType": "YulTypedName",
														"src": "5028:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:7",
														"nodeType": "YulTypedName",
														"src": "5038:7:7",
														"type": ""
													}
												],
												"src": "5003:86:7"
											},
											{
												"body": {
													"nativeSrc": "5156:51:7",
													"nodeType": "YulBlock",
													"src": "5156:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:7"
																		},
																		"nativeSrc": "5178:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:7"
																},
																"nativeSrc": "5166:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:7"
															},
															"nativeSrc": "5166:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:7",
														"nodeType": "YulTypedName",
														"src": "5144:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:7",
														"nodeType": "YulTypedName",
														"src": "5151:3:7",
														"type": ""
													}
												],
												"src": "5095:112:7"
											},
											{
												"body": {
													"nativeSrc": "5307:120:7",
													"nodeType": "YulBlock",
													"src": "5307:120:7",
													"statements": [
														{
															"nativeSrc": "5317:26:7",
															"nodeType": "YulAssignment",
															"src": "5317:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:7"
																},
																"nativeSrc": "5325:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:7"
																},
																"nativeSrc": "5353:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:7"
															},
															"nativeSrc": "5353:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:7",
														"nodeType": "YulTypedName",
														"src": "5279:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:7",
														"nodeType": "YulTypedName",
														"src": "5291:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:7",
														"nodeType": "YulTypedName",
														"src": "5302:4:7",
														"type": ""
													}
												],
												"src": "5213:214:7"
											},
											{
												"body": {
													"nativeSrc": "5499:263:7",
													"nodeType": "YulBlock",
													"src": "5499:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:7",
																"nodeType": "YulBlock",
																"src": "5545:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:7"
																			},
																			"nativeSrc": "5547:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:7"
																		},
																		"nativeSrc": "5547:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:7"
																		},
																		"nativeSrc": "5516:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:7"
																},
																"nativeSrc": "5512:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:7"
															},
															"nativeSrc": "5509:119:7",
															"nodeType": "YulIf",
															"src": "5509:119:7"
														},
														{
															"nativeSrc": "5638:117:7",
															"nodeType": "YulBlock",
															"src": "5638:117:7",
															"statements": [
																{
																	"nativeSrc": "5653:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:7"
																				},
																				"nativeSrc": "5713:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:7"
																		},
																		"nativeSrc": "5692:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5433:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:7",
														"nodeType": "YulTypedName",
														"src": "5469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:7",
														"nodeType": "YulTypedName",
														"src": "5480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:7",
														"nodeType": "YulTypedName",
														"src": "5492:6:7",
														"type": ""
													}
												],
												"src": "5433:329:7"
											},
											{
												"body": {
													"nativeSrc": "5851:391:7",
													"nodeType": "YulBlock",
													"src": "5851:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:7",
																"nodeType": "YulBlock",
																"src": "5897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:7"
																			},
																			"nativeSrc": "5899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:7"
																		},
																		"nativeSrc": "5899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nativeSrc": "5868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:7"
															},
															"nativeSrc": "5861:119:7",
															"nodeType": "YulIf",
															"src": "5861:119:7"
														},
														{
															"nativeSrc": "5990:117:7",
															"nodeType": "YulBlock",
															"src": "5990:117:7",
															"statements": [
																{
																	"nativeSrc": "6005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:7"
																				},
																				"nativeSrc": "6065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:7"
																		},
																		"nativeSrc": "6044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:7",
															"nodeType": "YulBlock",
															"src": "6117:118:7",
															"statements": [
																{
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:7"
																				},
																				"nativeSrc": "6193:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:7"
																		},
																		"nativeSrc": "6172:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:7",
														"nodeType": "YulTypedName",
														"src": "5824:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:7",
														"nodeType": "YulTypedName",
														"src": "5836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:7",
														"nodeType": "YulTypedName",
														"src": "5844:6:7",
														"type": ""
													}
												],
												"src": "5768:474:7"
											},
											{
												"body": {
													"nativeSrc": "6276:152:7",
													"nodeType": "YulBlock",
													"src": "6276:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:7"
																},
																"nativeSrc": "6286:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:7"
															},
															"nativeSrc": "6286:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:7"
																},
																"nativeSrc": "6383:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:7"
															},
															"nativeSrc": "6383:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:7"
																},
																"nativeSrc": "6407:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:7"
															},
															"nativeSrc": "6407:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:7"
											},
											{
												"body": {
													"nativeSrc": "6485:269:7",
													"nodeType": "YulBlock",
													"src": "6485:269:7",
													"statements": [
														{
															"nativeSrc": "6495:22:7",
															"nodeType": "YulAssignment",
															"src": "6495:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:7"
																},
																"nativeSrc": "6505:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:7"
																}
															]
														},
														{
															"nativeSrc": "6526:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:7"
																},
																"nativeSrc": "6552:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:7",
																"nodeType": "YulBlock",
																"src": "6603:51:7",
																"statements": [
																	{
																		"nativeSrc": "6617:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:7"
																			},
																			"nativeSrc": "6627:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:7"
																},
																"nativeSrc": "6576:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:7"
															},
															"nativeSrc": "6573:81:7",
															"nodeType": "YulIf",
															"src": "6573:81:7"
														},
														{
															"body": {
																"nativeSrc": "6706:42:7",
																"nodeType": "YulBlock",
																"src": "6706:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:7"
																			},
																			"nativeSrc": "6720:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:7"
																		},
																		"nativeSrc": "6720:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:7"
																		},
																		"nativeSrc": "6690:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:7"
																},
																"nativeSrc": "6667:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:7"
															},
															"nativeSrc": "6664:84:7",
															"nodeType": "YulIf",
															"src": "6664:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:7",
														"nodeType": "YulTypedName",
														"src": "6469:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:7",
														"nodeType": "YulTypedName",
														"src": "6478:6:7",
														"type": ""
													}
												],
												"src": "6434:320:7"
											},
											{
												"body": {
													"nativeSrc": "6866:73:7",
													"nodeType": "YulBlock",
													"src": "6866:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:7"
																		},
																		"nativeSrc": "6884:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:7"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e206d616b6520746869732063616c6c",
																		"kind": "string",
																		"nativeSrc": "6900:31:7",
																		"nodeType": "YulLiteral",
																		"src": "6900:31:7",
																		"type": "",
																		"value": "Only admin can make this call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:7"
																},
																"nativeSrc": "6877:55:7",
																"nodeType": "YulFunctionCall",
																"src": "6877:55:7"
															},
															"nativeSrc": "6877:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "6877:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02",
												"nativeSrc": "6760:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:7",
														"nodeType": "YulTypedName",
														"src": "6858:6:7",
														"type": ""
													}
												],
												"src": "6760:179:7"
											},
											{
												"body": {
													"nativeSrc": "7091:220:7",
													"nodeType": "YulBlock",
													"src": "7091:220:7",
													"statements": [
														{
															"nativeSrc": "7101:74:7",
															"nodeType": "YulAssignment",
															"src": "7101:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7172:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7172:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7108:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7108:58:7"
																},
																"nativeSrc": "7108:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7108:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7273:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7273:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02",
																	"nativeSrc": "7184:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7184:88:7"
																},
																"nativeSrc": "7184:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7184:93:7"
															},
															"nativeSrc": "7184:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7184:93:7"
														},
														{
															"nativeSrc": "7286:19:7",
															"nodeType": "YulAssignment",
															"src": "7286:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7297:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7297:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7302:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7302:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7293:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7293:3:7"
																},
																"nativeSrc": "7293:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7293:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7286:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6945:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7079:3:7",
														"nodeType": "YulTypedName",
														"src": "7079:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7087:3:7",
														"nodeType": "YulTypedName",
														"src": "7087:3:7",
														"type": ""
													}
												],
												"src": "6945:366:7"
											},
											{
												"body": {
													"nativeSrc": "7488:248:7",
													"nodeType": "YulBlock",
													"src": "7488:248:7",
													"statements": [
														{
															"nativeSrc": "7498:26:7",
															"nodeType": "YulAssignment",
															"src": "7498:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7510:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7510:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7521:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7521:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:7"
																},
																"nativeSrc": "7506:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7506:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7498:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7498:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:7"
																		},
																		"nativeSrc": "7541:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7564:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7564:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7570:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7570:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:7"
																		},
																		"nativeSrc": "7560:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7560:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7534:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:7"
																},
																"nativeSrc": "7534:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7534:47:7"
															},
															"nativeSrc": "7534:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7534:47:7"
														},
														{
															"nativeSrc": "7590:139:7",
															"nodeType": "YulAssignment",
															"src": "7590:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7724:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7724:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7598:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7598:124:7"
																},
																"nativeSrc": "7598:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7598:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7590:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7317:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7468:9:7",
														"nodeType": "YulTypedName",
														"src": "7468:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7483:4:7",
														"nodeType": "YulTypedName",
														"src": "7483:4:7",
														"type": ""
													}
												],
												"src": "7317:419:7"
											},
											{
												"body": {
													"nativeSrc": "7848:74:7",
													"nodeType": "YulBlock",
													"src": "7848:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7870:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7870:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7878:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7878:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7866:3:7"
																		},
																		"nativeSrc": "7866:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7866:14:7"
																	},
																	{
																		"hexValue": "4f6e6c79206d696e7465722063616e206d616b6520746869732063616c6c",
																		"kind": "string",
																		"nativeSrc": "7882:32:7",
																		"nodeType": "YulLiteral",
																		"src": "7882:32:7",
																		"type": "",
																		"value": "Only minter can make this call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:7"
																},
																"nativeSrc": "7859:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7859:56:7"
															},
															"nativeSrc": "7859:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "7859:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5",
												"nativeSrc": "7742:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7840:6:7",
														"nodeType": "YulTypedName",
														"src": "7840:6:7",
														"type": ""
													}
												],
												"src": "7742:180:7"
											},
											{
												"body": {
													"nativeSrc": "8074:220:7",
													"nodeType": "YulBlock",
													"src": "8074:220:7",
													"statements": [
														{
															"nativeSrc": "8084:74:7",
															"nodeType": "YulAssignment",
															"src": "8084:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8150:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8155:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8091:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8091:58:7"
																},
																"nativeSrc": "8091:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8091:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8084:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8256:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5",
																	"nativeSrc": "8167:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8167:88:7"
																},
																"nativeSrc": "8167:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8167:93:7"
															},
															"nativeSrc": "8167:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8167:93:7"
														},
														{
															"nativeSrc": "8269:19:7",
															"nodeType": "YulAssignment",
															"src": "8269:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8280:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8280:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8285:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8285:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8276:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8276:3:7"
																},
																"nativeSrc": "8276:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8276:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8269:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8269:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7928:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8062:3:7",
														"nodeType": "YulTypedName",
														"src": "8062:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8070:3:7",
														"nodeType": "YulTypedName",
														"src": "8070:3:7",
														"type": ""
													}
												],
												"src": "7928:366:7"
											},
											{
												"body": {
													"nativeSrc": "8471:248:7",
													"nodeType": "YulBlock",
													"src": "8471:248:7",
													"statements": [
														{
															"nativeSrc": "8481:26:7",
															"nodeType": "YulAssignment",
															"src": "8481:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8493:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8493:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8504:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8504:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8489:3:7"
																},
																"nativeSrc": "8489:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8489:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8481:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8528:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8528:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8539:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8539:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8524:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8524:3:7"
																		},
																		"nativeSrc": "8524:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8524:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8547:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8547:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8553:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8553:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8543:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:7"
																		},
																		"nativeSrc": "8543:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8517:6:7"
																},
																"nativeSrc": "8517:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8517:47:7"
															},
															"nativeSrc": "8517:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8517:47:7"
														},
														{
															"nativeSrc": "8573:139:7",
															"nodeType": "YulAssignment",
															"src": "8573:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8707:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8707:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8581:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8581:124:7"
																},
																"nativeSrc": "8581:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8581:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8573:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8573:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8300:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8451:9:7",
														"nodeType": "YulTypedName",
														"src": "8451:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8466:4:7",
														"nodeType": "YulTypedName",
														"src": "8466:4:7",
														"type": ""
													}
												],
												"src": "8300:419:7"
											},
											{
												"body": {
													"nativeSrc": "8788:80:7",
													"nodeType": "YulBlock",
													"src": "8788:80:7",
													"statements": [
														{
															"nativeSrc": "8798:22:7",
															"nodeType": "YulAssignment",
															"src": "8798:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8813:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8807:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8807:5:7"
																},
																"nativeSrc": "8807:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8807:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8798:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8798:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8856:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8856:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8829:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "8829:26:7"
																},
																"nativeSrc": "8829:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8829:33:7"
															},
															"nativeSrc": "8829:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8829:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8725:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8766:6:7",
														"nodeType": "YulTypedName",
														"src": "8766:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8774:3:7",
														"nodeType": "YulTypedName",
														"src": "8774:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8782:5:7",
														"nodeType": "YulTypedName",
														"src": "8782:5:7",
														"type": ""
													}
												],
												"src": "8725:143:7"
											},
											{
												"body": {
													"nativeSrc": "8951:274:7",
													"nodeType": "YulBlock",
													"src": "8951:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8997:83:7",
																"nodeType": "YulBlock",
																"src": "8997:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8999:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8999:77:7"
																			},
																			"nativeSrc": "8999:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8999:79:7"
																		},
																		"nativeSrc": "8999:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8999:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8972:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8972:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8981:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8981:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8968:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:7"
																		},
																		"nativeSrc": "8968:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8964:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:7"
																},
																"nativeSrc": "8964:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8964:32:7"
															},
															"nativeSrc": "8961:119:7",
															"nodeType": "YulIf",
															"src": "8961:119:7"
														},
														{
															"nativeSrc": "9090:128:7",
															"nodeType": "YulBlock",
															"src": "9090:128:7",
															"statements": [
																{
																	"nativeSrc": "9105:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9105:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9119:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9119:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9109:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9109:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9134:74:7",
																	"nodeType": "YulAssignment",
																	"src": "9134:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9180:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9180:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9191:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9191:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9176:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9176:3:7"
																				},
																				"nativeSrc": "9176:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9176:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9200:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9200:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9144:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "9144:31:7"
																		},
																		"nativeSrc": "9144:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9144:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9134:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9134:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8874:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8921:9:7",
														"nodeType": "YulTypedName",
														"src": "8921:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8932:7:7",
														"nodeType": "YulTypedName",
														"src": "8932:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8944:6:7",
														"nodeType": "YulTypedName",
														"src": "8944:6:7",
														"type": ""
													}
												],
												"src": "8874:351:7"
											},
											{
												"body": {
													"nativeSrc": "9259:152:7",
													"nodeType": "YulBlock",
													"src": "9259:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9276:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9279:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9279:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9269:6:7"
																},
																"nativeSrc": "9269:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9269:88:7"
															},
															"nativeSrc": "9269:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9269:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9373:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9373:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9376:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9376:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9366:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9366:6:7"
																},
																"nativeSrc": "9366:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9366:15:7"
															},
															"nativeSrc": "9366:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9366:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9397:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9397:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9400:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9400:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9390:6:7"
																},
																"nativeSrc": "9390:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9390:15:7"
															},
															"nativeSrc": "9390:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9390:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9231:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9231:180:7"
											},
											{
												"body": {
													"nativeSrc": "9461:147:7",
													"nodeType": "YulBlock",
													"src": "9461:147:7",
													"statements": [
														{
															"nativeSrc": "9471:25:7",
															"nodeType": "YulAssignment",
															"src": "9471:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9494:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9494:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9476:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9476:17:7"
																},
																"nativeSrc": "9476:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9476:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9471:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9471:1:7"
																}
															]
														},
														{
															"nativeSrc": "9505:25:7",
															"nodeType": "YulAssignment",
															"src": "9505:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9528:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9528:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9510:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9510:17:7"
																},
																"nativeSrc": "9510:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9510:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9505:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9505:1:7"
																}
															]
														},
														{
															"nativeSrc": "9539:16:7",
															"nodeType": "YulAssignment",
															"src": "9539:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9550:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9550:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9553:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9553:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9546:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:7"
																},
																"nativeSrc": "9546:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9546:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9579:22:7",
																"nodeType": "YulBlock",
																"src": "9579:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9581:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9581:16:7"
																			},
																			"nativeSrc": "9581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9581:18:7"
																		},
																		"nativeSrc": "9581:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9581:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9571:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9571:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9574:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9574:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9568:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9568:2:7"
																},
																"nativeSrc": "9568:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9568:10:7"
															},
															"nativeSrc": "9565:36:7",
															"nodeType": "YulIf",
															"src": "9565:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9417:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9448:1:7",
														"nodeType": "YulTypedName",
														"src": "9448:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9451:1:7",
														"nodeType": "YulTypedName",
														"src": "9451:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9457:3:7",
														"nodeType": "YulTypedName",
														"src": "9457:3:7",
														"type": ""
													}
												],
												"src": "9417:191:7"
											},
											{
												"body": {
													"nativeSrc": "9659:149:7",
													"nodeType": "YulBlock",
													"src": "9659:149:7",
													"statements": [
														{
															"nativeSrc": "9669:25:7",
															"nodeType": "YulAssignment",
															"src": "9669:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9692:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9674:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9674:17:7"
																},
																"nativeSrc": "9674:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9674:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9669:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9669:1:7"
																}
															]
														},
														{
															"nativeSrc": "9703:25:7",
															"nodeType": "YulAssignment",
															"src": "9703:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9726:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9726:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9708:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9708:17:7"
																},
																"nativeSrc": "9708:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9708:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9703:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9703:1:7"
																}
															]
														},
														{
															"nativeSrc": "9737:17:7",
															"nodeType": "YulAssignment",
															"src": "9737:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9749:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9749:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9752:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9752:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9745:3:7"
																},
																"nativeSrc": "9745:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9745:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9737:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9779:22:7",
																"nodeType": "YulBlock",
																"src": "9779:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9781:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9781:16:7"
																			},
																			"nativeSrc": "9781:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9781:18:7"
																		},
																		"nativeSrc": "9781:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9781:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9770:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9770:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9776:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9776:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9767:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9767:2:7"
																},
																"nativeSrc": "9767:11:7",
																"nodeType": "YulFunctionCall",
																"src": "9767:11:7"
															},
															"nativeSrc": "9764:37:7",
															"nodeType": "YulIf",
															"src": "9764:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9614:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9645:1:7",
														"nodeType": "YulTypedName",
														"src": "9645:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9648:1:7",
														"nodeType": "YulTypedName",
														"src": "9648:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9654:4:7",
														"nodeType": "YulTypedName",
														"src": "9654:4:7",
														"type": ""
													}
												],
												"src": "9614:194:7"
											},
											{
												"body": {
													"nativeSrc": "9968:288:7",
													"nodeType": "YulBlock",
													"src": "9968:288:7",
													"statements": [
														{
															"nativeSrc": "9978:26:7",
															"nodeType": "YulAssignment",
															"src": "9978:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9990:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9990:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10001:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10001:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9986:3:7"
																},
																"nativeSrc": "9986:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9986:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9978:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9978:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10058:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10071:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10082:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:7"
																		},
																		"nativeSrc": "10067:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10067:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10014:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10014:43:7"
																},
																"nativeSrc": "10014:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10014:71:7"
															},
															"nativeSrc": "10014:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10014:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10139:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10139:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10152:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10152:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10163:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10163:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10148:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10148:3:7"
																		},
																		"nativeSrc": "10148:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10148:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10095:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10095:43:7"
																},
																"nativeSrc": "10095:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10095:72:7"
															},
															"nativeSrc": "10095:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10095:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10221:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10221:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10234:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10234:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10245:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10245:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10230:3:7"
																		},
																		"nativeSrc": "10230:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10230:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10177:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10177:43:7"
																},
																"nativeSrc": "10177:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10177:72:7"
															},
															"nativeSrc": "10177:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10177:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9814:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9924:9:7",
														"nodeType": "YulTypedName",
														"src": "9924:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9936:6:7",
														"nodeType": "YulTypedName",
														"src": "9936:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9944:6:7",
														"nodeType": "YulTypedName",
														"src": "9944:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9952:6:7",
														"nodeType": "YulTypedName",
														"src": "9952:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9963:4:7",
														"nodeType": "YulTypedName",
														"src": "9963:4:7",
														"type": ""
													}
												],
												"src": "9814:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can make this call\")\n\n    }\n\n    function abi_encode_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only minter can make this call\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80634eb03f6e116100a0578063ab8e786f1161006f578063ab8e786f146102b9578063d5abeb01146102e9578063dd62ed3e14610307578063e2f273bd14610337578063f851a4401461035357610109565b80634eb03f6e1461021f57806370a082311461023b57806395d89b411461026b578063a9059cbb1461028957610109565b806323b872dd116100dc57806323b872dd1461019757806324e770d0146101c757806329fb7ef6146101e5578063313ce5671461020157610109565b806306fdde031461010d578063075461721461012b578063095ea7b31461014957806318160ddd14610179575b5f80fd5b610115610371565b6040516101229190611183565b60405180910390f35b610133610401565b60405161014091906111e2565b60405180910390f35b610163600480360381019061015e919061125c565b610426565b60405161017091906112b4565b60405180910390f35b610181610448565b60405161018e91906112dc565b60405180910390f35b6101b160048036038101906101ac91906112f5565b610451565b6040516101be91906112b4565b60405180910390f35b6101cf61047f565b6040516101dc91906112dc565b60405180910390f35b6101ff60048036038101906101fa9190611345565b610488565b005b61020961055a565b604051610216919061138b565b60405180910390f35b610239600480360381019061023491906113a4565b61056f565b005b610255600480360381019061025091906113a4565b610699565b60405161026291906112dc565b60405180910390f35b6102736106de565b6040516102809190611183565b60405180910390f35b6102a3600480360381019061029e919061125c565b61076e565b6040516102b091906112b4565b60405180910390f35b6102d360048036038101906102ce919061125c565b610790565b6040516102e091906112b4565b60405180910390f35b6102f161093a565b6040516102fe91906112dc565b60405180910390f35b610321600480360381019061031c91906113cf565b610940565b60405161032e91906112dc565b60405180910390f35b610351600480360381019061034c91906113a4565b6109c2565b005b61035b610aec565b60405161036891906111e2565b60405180910390f35b6060600380546103809061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac9061143a565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610430610b11565b905061043d818585610b18565b600191505092915050565b5f600254905090565b5f8061045b610b11565b9050610468858285610b2a565b610473858585610bbc565b60019150509392505050565b5f600654905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e906114b4565b60405180910390fd5b806006819055507fd65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e24360065460405161054f91906112dc565b60405180910390a150565b5f60055f9054906101000a900460ff16905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f5906114b4565b60405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161068e91906111e2565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546106ed9061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546107199061143a565b80156107645780601f1061073b57610100808354040283529160200191610764565b820191905f5260205f20905b81548152906001019060200180831161074757829003601f168201915b5050505050905090565b5f80610778610b11565b9050610785818585610bbc565b600191505092915050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108179061151c565b60405180910390fd5b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087c575f9050610934565b5f3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ea919061154e565b905060075481106108fe575f915050610934565b600754838261090d91906115a6565b1115610924578060075461092191906115d9565b92505b61092e8484610cac565b60019150505b92915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a48906114b4565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610ae191906111e2565b60405180910390a150565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610b258383836001610d2b565b505050565b5f610b358484610940565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bb65781811015610ba7578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b9e9392919061160c565b60405180910390fd5b610bb584848484035f610d2b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c2391906111e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c9391906111e2565b60405180910390fd5b610ca7838383610efa565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d1c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1391906111e2565b60405180910390fd5b610d275f8383610efa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d9b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d9291906111e2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e0291906111e2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610ef4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610eeb91906112dc565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f4a578060025f828254610f3e91906115a6565b92505081905550611018565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fd3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fca9392919061160c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105f578060025f82825403925050819055506110a9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161110691906112dc565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115582611113565b61115f818561111d565b935061116f81856020860161112d565b6111788161113b565b840191505092915050565b5f6020820190508181035f83015261119b818461114b565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111cc826111a3565b9050919050565b6111dc816111c2565b82525050565b5f6020820190506111f55f8301846111d3565b92915050565b5f80fd5b611208816111c2565b8114611212575f80fd5b50565b5f81359050611223816111ff565b92915050565b5f819050919050565b61123b81611229565b8114611245575f80fd5b50565b5f8135905061125681611232565b92915050565b5f8060408385031215611272576112716111fb565b5b5f61127f85828601611215565b925050602061129085828601611248565b9150509250929050565b5f8115159050919050565b6112ae8161129a565b82525050565b5f6020820190506112c75f8301846112a5565b92915050565b6112d681611229565b82525050565b5f6020820190506112ef5f8301846112cd565b92915050565b5f805f6060848603121561130c5761130b6111fb565b5b5f61131986828701611215565b935050602061132a86828701611215565b925050604061133b86828701611248565b9150509250925092565b5f6020828403121561135a576113596111fb565b5b5f61136784828501611248565b91505092915050565b5f60ff82169050919050565b61138581611370565b82525050565b5f60208201905061139e5f83018461137c565b92915050565b5f602082840312156113b9576113b86111fb565b5b5f6113c684828501611215565b91505092915050565b5f80604083850312156113e5576113e46111fb565b5b5f6113f285828601611215565b925050602061140385828601611215565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145157607f821691505b6020821081036114645761146361140d565b5b50919050565b7f4f6e6c792061646d696e2063616e206d616b6520746869732063616c6c0000005f82015250565b5f61149e601d8361111d565b91506114a98261146a565b602082019050919050565b5f6020820190508181035f8301526114cb81611492565b9050919050565b7f4f6e6c79206d696e7465722063616e206d616b6520746869732063616c6c00005f82015250565b5f611506601e8361111d565b9150611511826114d2565b602082019050919050565b5f6020820190508181035f830152611533816114fa565b9050919050565b5f8151905061154881611232565b92915050565b5f60208284031215611563576115626111fb565b5b5f6115708482850161153a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b082611229565b91506115bb83611229565b92508282019050808211156115d3576115d2611579565b5b92915050565b5f6115e382611229565b91506115ee83611229565b925082820390508181111561160657611605611579565b5b92915050565b5f60608201905061161f5f8301866111d3565b61162c60208301856112cd565b61163960408301846112cd565b94935050505056fea26469706673582212204633b8cdcafb9dd79d58abb12baa8c6946b31aafb390d14e92e17f009de5327564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EB03F6E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAB8E786F GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAB8E786F EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE2F273BD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x353 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4EB03F6E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x29FB7EF6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x430 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x45B PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x468 DUP6 DUP3 DUP6 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x473 DUP6 DUP6 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xD65D781DB82F0BD55F732EA1B96F4C6565750DF815C18A70962CD8405274E243 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x94A0A7C0A7A455351029A521046D4438BC63E58A1EE8D984D624EB3161583B2C PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x719 SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x764 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x764 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x747 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x778 PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP2 DUP6 DUP6 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87C JUMPI PUSH0 SWAP1 POP PUSH2 0x934 JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 LT PUSH2 0x8FE JUMPI PUSH0 SWAP2 POP POP PUSH2 0x934 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 DUP3 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST GT ISZERO PUSH2 0x924 JUMPI DUP1 PUSH1 0x7 SLOAD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x92E DUP5 DUP5 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBFC8D7754FEC5096BECC28E0816011E8D0ADCFE752FFA1C88924A7F88B00A41D PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB35 DUP5 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xBB6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBA7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD2B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA7 DUP4 DUP4 DUP4 PUSH2 0xEFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD27 PUSH0 DUP4 DUP4 PUSH2 0xEFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEF4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF4A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1018 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFD3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x115F DUP2 DUP6 PUSH2 0x111D JUMP JUMPDEST SWAP4 POP PUSH2 0x116F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1178 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119B DUP2 DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC DUP3 PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x11C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x11C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1223 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123B DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1256 DUP2 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127F DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1290 DUP6 DUP3 DUP7 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D6 DUP2 PUSH2 0x1229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EF PUSH0 DUP4 ADD DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1319 DUP7 DUP3 DUP8 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x132A DUP7 DUP3 DUP8 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x133B DUP7 DUP3 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1385 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139E PUSH0 DUP4 ADD DUP5 PUSH2 0x137C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1403 DUP6 DUP3 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1451 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x140D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E206D616B6520746869732063616C6C000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x149E PUSH1 0x1D DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP3 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CB DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206D696E7465722063616E206D616B6520746869732063616C6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1506 PUSH1 0x1E DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x1511 DUP3 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1533 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1548 DUP2 PUSH2 0x1232 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x153A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B0 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BB DUP4 PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15D3 JUMPI PUSH2 0x15D2 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E3 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP PUSH2 0x15EE DUP4 PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1579 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x161F PUSH0 DUP4 ADD DUP7 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x162C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x1639 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CALLER 0xB8 0xCD 0xCA 0xFB SWAP14 0xD7 SWAP14 PC 0xAB 0xB1 0x2B 0xAA DUP13 PUSH10 0x46B31AAFB390D14E92E1 PUSH32 0x9DE5327564736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "721:3089:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:21:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2974:109:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3089:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2061:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3321:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2310:486:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3453:120:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1084:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;1057:21:6:-;;;;;;;;;;;;;:::o;4293:186:1:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2974:109:6:-;3029:7;3055:21;;3048:28;;2974:109;:::o;3089:226::-;3632:5;;;;;;;;;;;3618:19;;:10;:19;;;3610:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3223:21:::1;3199;:45;;;;3259:49;3286:21;;3259:49;;;;;;:::i;:::-;;;;;;;;3089:226:::0;:::o;2061:98::-;2119:5;2143:9;;;;;;;;;;;2136:16;;2061:98;:::o;3321:126::-;3632:5;;;;;;;;;;;3618:19;;:10;:19;;;3610:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3398:7:::1;3389:6;;:16;;;;;;;;;;;;;;;;;;3420:20;3433:6;;;;;;;;;;;3420:20;;;;;;:::i;:::-;;;;;;;;3321:126:::0;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2310:486:6:-;2420:4;3749:6;;;;;;;;;;;3735:20;;:10;:20;;;3727:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2454:6:::1;;;;;;;;;;;2440:20;;:10;:20;;;2436:63;;2483:5;2476:12;;;;2436:63;2508:21;2532:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2508:42;;2581:9;;2564:13;:26;2560:69;;2613:5;2606:12;;;;;2560:69;2667:9;;2658:6;2642:13;:22;;;;:::i;:::-;:34;2638:99;;;2713:13;2701:9;;:25;;;;:::i;:::-;2692:34;;2638:99;2746:22;2752:7;2761:6;2746:5;:22::i;:::-;2785:4;2778:11;;;3800:1;2310:486:::0;;;;:::o;1027:24::-;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;3453:120:6:-;3632:5;;;;;;;;;;;3618:19;;:10;:19;;;3610:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3527:6:::1;3519:5;;:14;;;;;;;;;;;;;;;;;;3548:18;3560:5;;;;;;;;;;;3548:18;;;;;;:::i;:::-;;;;;;;;3453:120:::0;:::o;1084:20::-;;;;;;;;;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:126::-;1279:7;1319:42;1312:5;1308:54;1297:65;;1242:126;;;:::o;1374:96::-;1411:7;1440:24;1458:5;1440:24;:::i;:::-;1429:35;;1374:96;;;:::o;1476:118::-;1563:24;1581:5;1563:24;:::i;:::-;1558:3;1551:37;1476:118;;:::o;1600:222::-;1693:4;1731:2;1720:9;1716:18;1708:26;;1744:71;1812:1;1801:9;1797:17;1788:6;1744:71;:::i;:::-;1600:222;;;;:::o;1909:117::-;2018:1;2015;2008:12;2155:122;2228:24;2246:5;2228:24;:::i;:::-;2221:5;2218:35;2208:63;;2267:1;2264;2257:12;2208:63;2155:122;:::o;2283:139::-;2329:5;2367:6;2354:20;2345:29;;2383:33;2410:5;2383:33;:::i;:::-;2283:139;;;;:::o;2428:77::-;2465:7;2494:5;2483:16;;2428:77;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:619::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4043:619;;;;;:::o;4668:329::-;4727:6;4776:2;4764:9;4755:7;4751:23;4747:32;4744:119;;;4782:79;;:::i;:::-;4744:119;4902:1;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4873:117;4668:329;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:179::-;6900:31;6896:1;6888:6;6884:14;6877:55;6760:179;:::o;6945:366::-;7087:3;7108:67;7172:2;7167:3;7108:67;:::i;:::-;7101:74;;7184:93;7273:3;7184:93;:::i;:::-;7302:2;7297:3;7293:12;7286:19;;6945:366;;;:::o;7317:419::-;7483:4;7521:2;7510:9;7506:18;7498:26;;7570:9;7564:4;7560:20;7556:1;7545:9;7541:17;7534:47;7598:131;7724:4;7598:131;:::i;:::-;7590:139;;7317:419;;;:::o;7742:180::-;7882:32;7878:1;7870:6;7866:14;7859:56;7742:180;:::o;7928:366::-;8070:3;8091:67;8155:2;8150:3;8091:67;:::i;:::-;8084:74;;8167:93;8256:3;8167:93;:::i;:::-;8285:2;8280:3;8276:12;8269:19;;7928:366;;;:::o;8300:419::-;8466:4;8504:2;8493:9;8489:18;8481:26;;8553:9;8547:4;8543:20;8539:1;8528:9;8524:17;8517:47;8581:131;8707:4;8581:131;:::i;:::-;8573:139;;8300:419;;;:::o;8725:143::-;8782:5;8813:6;8807:13;8798:22;;8829:33;8856:5;8829:33;:::i;:::-;8725:143;;;;:::o;8874:351::-;8944:6;8993:2;8981:9;8972:7;8968:23;8964:32;8961:119;;;8999:79;;:::i;:::-;8961:119;9119:1;9144:64;9200:7;9191:6;9180:9;9176:22;9144:64;:::i;:::-;9134:74;;9090:128;8874:351;;;;:::o;9231:180::-;9279:77;9276:1;9269:88;9376:4;9373:1;9366:15;9400:4;9397:1;9390:15;9417:191;9457:3;9476:20;9494:1;9476:20;:::i;:::-;9471:25;;9510:20;9528:1;9510:20;:::i;:::-;9505:25;;9553:1;9550;9546:9;9539:16;;9574:3;9571:1;9568:10;9565:36;;;9581:18;;:::i;:::-;9565:36;9417:191;;;;:::o;9614:194::-;9654:4;9674:20;9692:1;9674:20;:::i;:::-;9669:25;;9708:20;9726:1;9708:20;:::i;:::-;9703:25;;9752:1;9749;9745:9;9737:17;;9776:1;9770:4;9767:11;9764:37;;;9781:18;;:::i;:::-;9764:37;9614:194;;;;:::o;9814:442::-;9963:4;10001:2;9990:9;9986:18;9978:26;;10014:71;10082:1;10071:9;10067:17;10058:6;10014:71;:::i;:::-;10095:72;10163:2;10152:9;10148:18;10139:6;10095:72;:::i;:::-;10177;10245:2;10234:9;10230:18;10221:6;10177:72;:::i;:::-;9814:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1150200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "2618",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "2562",
								"maxSupply()": "2469",
								"mintStakerReward(address,uint256)": "infinite",
								"minter()": "2554",
								"name()": "infinite",
								"stakerRewardPerBlock()": "2477",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"updateAdmin(address)": "infinite",
								"updateMinter(address)": "infinite",
								"updateStakerRewardPerBlock(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1111,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1408,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1417,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1457,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1000000000000000000000000"
								},
								{
									"begin": 1437,
									"end": 1447,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1457,
									"modifierDepth": 1,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1429,
									"end": 1481,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1429,
									"end": 1481,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1615,
									"end": 1625,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1611,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1625,
									"modifierDepth": 1,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1625,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1575,
									"end": 1698,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1575,
									"end": 1698,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1729,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1717,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1708,
									"end": 1717,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1729,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1761,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1748,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1739,
									"end": 1761,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1761,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1761,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1761,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1787,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1771,
									"end": 1777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1787,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1842,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1818,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1797,
									"end": 1842,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1842,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1842,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1842,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1866,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1857,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1852,
									"end": 1857,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1866,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1916,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1882,
									"end": 1898,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1915,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1881,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1876,
									"end": 1881,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1876,
									"end": 1881,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1876,
									"end": 1916,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1916,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1916,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1876,
									"end": 1916,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "94A0A7C0A7A455351029A521046D4438BC63E58A1EE8D984D624EB3161583B2C"
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1944,
									"end": 1950,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1931,
									"end": 1951,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1951,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "BFC8D7754FEC5096BECC28E0816011E8D0ADCFE752FFA1C88924A7F88B00A41D"
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1978,
									"end": 1983,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 1984,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1984,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "D65D781DB82F0BD55F732EA1B96F4C6565750DF815C18A70962CD8405274E243"
								},
								{
									"begin": 2026,
									"end": 2047,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2026,
									"end": 2047,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1999,
									"end": 2048,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2048,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1111,
									"end": 2055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2605,
									"end": 2612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2638,
									"end": 2643,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2749,
									"end": 2754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2733,
									"end": 2755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2731,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2723,
									"end": 2756,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2760,
									"end": 2772,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2878,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2879,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 2913,
									"end": 2918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2888,
									"end": 2919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2968,
									"end": 2975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3105,
									"end": 3110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3087,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3080,
									"end": 3085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3112,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3126,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3116,
									"end": 3128,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3237,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3273,
									"end": 3278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3246,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3328,
									"end": 3335,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3368,
									"end": 3410,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3361,
									"end": 3366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3411,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3507,
									"end": 3512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3489,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 3616,
									"end": 3621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3598,
									"end": 3622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3591,
									"end": 3596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3588,
									"end": 3623,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3634,
									"end": 3635,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3627,
									"end": 3639,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3747,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3748,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3784,
									"end": 3789,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3757,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3962,
									"end": 3968,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3970,
									"end": 3976,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3994,
									"end": 4000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4002,
									"end": 4008,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4018,
									"end": 4024,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4026,
									"end": 4032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4075,
									"end": 4078,
									"name": "PUSH",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4063,
									"end": 4072,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4061,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4073,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4079,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4163,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4043,
									"end": 4163,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4082,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4082,
									"end": 4161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4161,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4082,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4163,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4043,
									"end": 4163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4223,
									"end": 4224,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4212,
									"end": 4221,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 4208,
									"end": 4225,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4202,
									"end": 4226,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4253,
									"end": 4271,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4245,
									"end": 4251,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4242,
									"end": 4272,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4356,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4239,
									"end": 4356,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4275,
									"end": 4354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 4275,
									"end": 4354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4275,
									"end": 4354,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4275,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4356,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4239,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4380,
									"end": 4454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 4437,
									"end": 4443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4426,
									"end": 4435,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4444,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4380,
									"end": 4454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4380,
									"end": 4454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4380,
									"end": 4454,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4380,
									"end": 4454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4454,
									"name": "SWAP10",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4526,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4513,
									"end": 4522,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4503,
									"end": 4528,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4555,
									"end": 4573,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4547,
									"end": 4553,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4544,
									"end": 4574,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4541,
									"end": 4658,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4541,
									"end": 4658,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4541,
									"end": 4658,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4577,
									"end": 4656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4577,
									"end": 4656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 4577,
									"end": 4656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4577,
									"end": 4656,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4577,
									"end": 4656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4541,
									"end": 4658,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4541,
									"end": 4658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4748,
									"end": 4755,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 4737,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4746,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4682,
									"end": 4756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4756,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4682,
									"end": 4756,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4672,
									"end": 4756,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 4672,
									"end": 4756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4474,
									"end": 4766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4805,
									"end": 4807,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4831,
									"end": 4893,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 4885,
									"end": 4892,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 4882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4865,
									"end": 4874,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4883,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4831,
									"end": 4893,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4831,
									"end": 4893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4831,
									"end": 4893,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 4831,
									"end": 4893,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4821,
									"end": 4893,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 4821,
									"end": 4893,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4776,
									"end": 4903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 4944,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4968,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5024,
									"end": 5031,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5015,
									"end": 5021,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5004,
									"end": 5013,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5022,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4968,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4968,
									"end": 5032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4968,
									"end": 5032,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 4968,
									"end": 5032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4958,
									"end": 5032,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 4958,
									"end": 5032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5081,
									"end": 5084,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5108,
									"end": 5172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5164,
									"end": 5171,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5161,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5153,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5140,
									"end": 5162,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5108,
									"end": 5172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5108,
									"end": 5172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5108,
									"end": 5172,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5108,
									"end": 5172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5172,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5052,
									"end": 5182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5221,
									"end": 5224,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 5248,
									"end": 5312,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5304,
									"end": 5311,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5295,
									"end": 5301,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5284,
									"end": 5293,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5280,
									"end": 5302,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5248,
									"end": 5312,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 5248,
									"end": 5312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5248,
									"end": 5312,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5248,
									"end": 5312,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5238,
									"end": 5312,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5238,
									"end": 5312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5192,
									"end": 5322,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5361,
									"end": 5364,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 5388,
									"end": 5452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5444,
									"end": 5451,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5435,
									"end": 5441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5424,
									"end": 5433,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5442,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5388,
									"end": 5452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5452,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5388,
									"end": 5452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5452,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5332,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5501,
									"end": 5504,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 5528,
									"end": 5592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5584,
									"end": 5591,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5575,
									"end": 5581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5564,
									"end": 5573,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5560,
									"end": 5582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 5528,
									"end": 5592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5592,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5528,
									"end": 5592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5518,
									"end": 5592,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5518,
									"end": 5592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5472,
									"end": 5602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5644,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5668,
									"end": 5732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5724,
									"end": 5731,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 5715,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5713,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5722,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5668,
									"end": 5732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5668,
									"end": 5732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5668,
									"end": 5732,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5668,
									"end": 5732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 5732,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 5732,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5755,
									"end": 5854,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5755,
									"end": 5854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5813,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5841,
									"end": 5846,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5847,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5825,
									"end": 5847,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5825,
									"end": 5847,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5755,
									"end": 5854,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5755,
									"end": 5854,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5755,
									"end": 5854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5755,
									"end": 5854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5860,
									"end": 6040,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5860,
									"end": 6040,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5908,
									"end": 5985,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5905,
									"end": 5906,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5898,
									"end": 5986,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6005,
									"end": 6009,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 6002,
									"end": 6003,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5995,
									"end": 6010,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6029,
									"end": 6033,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6026,
									"end": 6027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6019,
									"end": 6034,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6366,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6046,
									"end": 6366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6127,
									"end": 6128,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6121,
									"end": 6125,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6117,
									"end": 6129,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 6107,
									"end": 6129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6107,
									"end": 6129,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6174,
									"end": 6175,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6168,
									"end": 6172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6176,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6185,
									"end": 6266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6185,
									"end": 6266,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6251,
									"end": 6255,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 6243,
									"end": 6249,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6239,
									"end": 6256,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6229,
									"end": 6256,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6229,
									"end": 6256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6185,
									"end": 6266,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6185,
									"end": 6266,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6313,
									"end": 6315,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6305,
									"end": 6311,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6302,
									"end": 6316,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6282,
									"end": 6300,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6279,
									"end": 6317,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6276,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6276,
									"end": 6360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6332,
									"end": 6350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6332,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6276,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6276,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6366,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6372,
									"end": 6513,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6372,
									"end": 6513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6421,
									"end": 6425,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6444,
									"end": 6447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6436,
									"end": 6447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6436,
									"end": 6447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6467,
									"end": 6470,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6464,
									"end": 6465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6457,
									"end": 6471,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6501,
									"end": 6505,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6498,
									"end": 6499,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6488,
									"end": 6506,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 6480,
									"end": 6506,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6480,
									"end": 6506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6372,
									"end": 6513,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6372,
									"end": 6513,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6372,
									"end": 6513,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6372,
									"end": 6513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6612,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6519,
									"end": 6612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6556,
									"end": 6562,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6603,
									"end": 6605,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6598,
									"end": 6600,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6591,
									"end": 6596,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6587,
									"end": 6601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6583,
									"end": 6606,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 6573,
									"end": 6606,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6573,
									"end": 6606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6612,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6662,
									"end": 6670,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6712,
									"end": 6717,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6710,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6702,
									"end": 6718,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 6681,
									"end": 6718,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6681,
									"end": 6718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6800,
									"end": 6806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6850,
									"end": 6851,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 6838,
									"end": 6848,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6834,
									"end": 6852,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 6970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6903,
									"end": 6969,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6892,
									"end": 6901,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 6970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6873,
									"end": 6970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 6970,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6873,
									"end": 6970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6991,
									"end": 7030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7021,
									"end": 7029,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7010,
									"end": 7019,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6991,
									"end": 7030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6991,
									"end": 7030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6991,
									"end": 7030,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 6991,
									"end": 7030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6979,
									"end": 7030,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 6979,
									"end": 7030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7063,
									"end": 7067,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7059,
									"end": 7068,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7052,
									"end": 7057,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7048,
									"end": 7069,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7039,
									"end": 7069,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7039,
									"end": 7069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7112,
									"end": 7116,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7102,
									"end": 7110,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7098,
									"end": 7117,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7091,
									"end": 7096,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7088,
									"end": 7118,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7078,
									"end": 7118,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7078,
									"end": 7118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6807,
									"end": 7124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6807,
									"end": 7124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6731,
									"end": 7124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7190,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7130,
									"end": 7190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7158,
									"end": 7161,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7179,
									"end": 7184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7184,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7190,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7196,
									"end": 7338,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7196,
									"end": 7338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7246,
									"end": 7255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7279,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7297,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7306,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7324,
									"end": 7329,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7306,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7306,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7306,
									"end": 7330,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7306,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7297,
									"end": 7331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7331,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7297,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7279,
									"end": 7332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7332,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7279,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7266,
									"end": 7332,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7266,
									"end": 7332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7196,
									"end": 7338,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7196,
									"end": 7338,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7196,
									"end": 7338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7196,
									"end": 7338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7344,
									"end": 7419,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7344,
									"end": 7419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7387,
									"end": 7390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7408,
									"end": 7413,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7413,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7401,
									"end": 7413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7344,
									"end": 7419,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7344,
									"end": 7419,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7344,
									"end": 7419,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7344,
									"end": 7419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7694,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7425,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7566,
									"end": 7573,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7535,
									"end": 7574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7574,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7535,
									"end": 7574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7596,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7645,
									"end": 7686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7669,
									"end": 7685,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7645,
									"end": 7686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7645,
									"end": 7686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7645,
									"end": 7686,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7645,
									"end": 7686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7637,
									"end": 7643,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7630,
									"end": 7634,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7624,
									"end": 7635,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 7596,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7596,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7596,
									"end": 7687,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7596,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7590,
									"end": 7594,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7583,
									"end": 7688,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7501,
									"end": 7694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7700,
									"end": 7773,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7700,
									"end": 7773,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7745,
									"end": 7748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7700,
									"end": 7773,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7700,
									"end": 7773,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7779,
									"end": 7968,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7779,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7856,
									"end": 7888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7856,
									"end": 7888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7888,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7856,
									"end": 7888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7955,
									"end": 7961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7945,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7897,
									"end": 7962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7962,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7897,
									"end": 7962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7832,
									"end": 7968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7779,
									"end": 7968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7779,
									"end": 7968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7779,
									"end": 7968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7974,
									"end": 8160,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 7974,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8051,
									"end": 8054,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8044,
									"end": 8049,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8055,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8142,
									"end": 8143,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8135,
									"end": 8140,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 8105,
									"end": 8144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8144,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8105,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8078,
									"end": 8079,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8071,
									"end": 8076,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8067,
									"end": 8080,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8058,
									"end": 8080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8058,
									"end": 8080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8034,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7974,
									"end": 8160,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7974,
									"end": 8160,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7974,
									"end": 8160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8709,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8166,
									"end": 8709,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8267,
									"end": 8269,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8262,
									"end": 8265,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8270,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8702,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8256,
									"end": 8702,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8333,
									"end": 8338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8301,
									"end": 8339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8385,
									"end": 8414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8403,
									"end": 8413,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8385,
									"end": 8414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8385,
									"end": 8414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8385,
									"end": 8414,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8385,
									"end": 8414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8375,
									"end": 8383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 8415,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8568,
									"end": 8570,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8556,
									"end": 8566,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8553,
									"end": 8571,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8550,
									"end": 8599,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8550,
									"end": 8599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8550,
									"end": 8599,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8574,
									"end": 8597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8574,
									"end": 8597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8550,
									"end": 8599,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8550,
									"end": 8599,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8612,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8668,
									"end": 8690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 8686,
									"end": 8689,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8668,
									"end": 8690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8668,
									"end": 8690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8668,
									"end": 8690,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 8668,
									"end": 8690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8658,
									"end": 8666,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8691,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8641,
									"end": 8652,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8612,
									"end": 8692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8612,
									"end": 8692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8612,
									"end": 8692,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8612,
									"end": 8692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8271,
									"end": 8702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8271,
									"end": 8702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8702,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8256,
									"end": 8702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8769,
									"end": 8777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8817,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8825,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8882,
									"end": 8888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8915,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 8963,
									"end": 8964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8959,
									"end": 8965,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 8956,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8948,
									"end": 8949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 8944,
									"end": 8957,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8915,
									"end": 8966,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 8915,
									"end": 8966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8915,
									"end": 8966,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 8915,
									"end": 8966,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8911,
									"end": 8967,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8996,
									"end": 9000,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 8994,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8986,
									"end": 9001,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9001,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 9007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8838,
									"end": 9007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9088,
									"end": 9092,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9234,
									"end": 9263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9259,
									"end": 9262,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9253,
									"end": 9257,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9234,
									"end": 9263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9263,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9234,
									"end": 9263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9226,
									"end": 9263,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9226,
									"end": 9263,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9296,
									"end": 9299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9293,
									"end": 9294,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9289,
									"end": 9300,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9287,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9280,
									"end": 9301,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9307,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 10707,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 9312,
									"end": 10707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9429,
									"end": 9466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9462,
									"end": 9465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9429,
									"end": 9466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9429,
									"end": 9466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9429,
									"end": 9466,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9429,
									"end": 9466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9531,
									"end": 9549,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9523,
									"end": 9529,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9520,
									"end": 9550,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9573,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 9517,
									"end": 9573,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9553,
									"end": 9571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9553,
									"end": 9571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 9553,
									"end": 9571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9553,
									"end": 9571,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9553,
									"end": 9571,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9573,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 9517,
									"end": 9573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9597,
									"end": 9635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9629,
									"end": 9633,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9623,
									"end": 9634,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 9597,
									"end": 9635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9597,
									"end": 9635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9597,
									"end": 9635,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9597,
									"end": 9635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9682,
									"end": 9749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9742,
									"end": 9748,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9734,
									"end": 9740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9728,
									"end": 9732,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9682,
									"end": 9749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 9682,
									"end": 9749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9682,
									"end": 9749,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9682,
									"end": 9749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9776,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9800,
									"end": 9804,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9787,
									"end": 9804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9787,
									"end": 9804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9832,
									"end": 9834,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9824,
									"end": 9830,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9821,
									"end": 9835,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9849,
									"end": 9850,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10506,
									"end": 10507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10523,
									"end": 10529,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10520,
									"end": 10597,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10520,
									"end": 10597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10520,
									"end": 10597,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10567,
									"end": 10570,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 10563,
									"end": 10582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10557,
									"end": 10583,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 10548,
									"end": 10583,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10548,
									"end": 10583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10520,
									"end": 10597,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10520,
									"end": 10597,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10683,
									"end": 10689,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10676,
									"end": 10681,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10623,
									"end": 10690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10690,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10623,
									"end": 10690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10617,
									"end": 10621,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10610,
									"end": 10691,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 10479,
									"end": 10701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9814,
									"end": 10701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9814,
									"end": 10701,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 9844,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9896,
									"end": 9900,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9892,
									"end": 9901,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 9884,
									"end": 9890,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9880,
									"end": 9902,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9967,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 9962,
									"end": 9966,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9967,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9930,
									"end": 9967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9930,
									"end": 9967,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 9930,
									"end": 9967,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9989,
									"end": 9990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10017,
									"end": 10024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10015,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10011,
									"end": 10025,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10096,
									"end": 10105,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10091,
									"end": 10094,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 10087,
									"end": 10106,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10081,
									"end": 10107,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 10073,
									"end": 10079,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10066,
									"end": 10108,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 10147,
									"end": 10148,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10139,
									"end": 10145,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10135,
									"end": 10149,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10125,
									"end": 10149,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10125,
									"end": 10149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10194,
									"end": 10196,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10183,
									"end": 10192,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10179,
									"end": 10197,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10166,
									"end": 10197,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10166,
									"end": 10197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10040,
									"end": 10044,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10037,
									"end": 10038,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10033,
									"end": 10045,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10028,
									"end": 10045,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10028,
									"end": 10045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10003,
									"end": 10211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10239,
									"end": 10245,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10230,
									"end": 10237,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10227,
									"end": 10246,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10224,
									"end": 10403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10224,
									"end": 10403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10224,
									"end": 10403,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10297,
									"end": 10306,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10292,
									"end": 10295,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 10288,
									"end": 10307,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10282,
									"end": 10308,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10382,
									"end": 10386,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 10374,
									"end": 10380,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 10370,
									"end": 10387,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10359,
									"end": 10368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10340,
									"end": 10388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10388,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10340,
									"end": 10388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10332,
									"end": 10338,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10325,
									"end": 10389,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 10247,
									"end": 10403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10224,
									"end": 10403,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10224,
									"end": 10403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10449,
									"end": 10450,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10445,
									"end": 10446,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 10437,
									"end": 10443,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 10433,
									"end": 10447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10429,
									"end": 10451,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10423,
									"end": 10427,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 10416,
									"end": 10452,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 10462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 10462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 10462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9814,
									"end": 10701,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 9814,
									"end": 10701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9814,
									"end": 10701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9404,
									"end": 10707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9404,
									"end": 10707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9404,
									"end": 10707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 10707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 10707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 10707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10797,
									"end": 10808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10831,
									"end": 10837,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10826,
									"end": 10829,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10819,
									"end": 10838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10871,
									"end": 10875,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10866,
									"end": 10869,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10862,
									"end": 10876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10847,
									"end": 10876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10847,
									"end": 10876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 11057,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 10888,
									"end": 11057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11028,
									"end": 11049,
									"name": "PUSH",
									"source": 7,
									"value": "6D6178537570706C7920746F6F206C6172676500000000000000000000000000"
								},
								{
									"begin": 11024,
									"end": 11025,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11016,
									"end": 11022,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11012,
									"end": 11026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11005,
									"end": 11050,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 11057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10888,
									"end": 11057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11063,
									"end": 11429,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 11063,
									"end": 11429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11205,
									"end": 11208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11226,
									"end": 11293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11290,
									"end": 11292,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 11285,
									"end": 11288,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11226,
									"end": 11293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 11226,
									"end": 11293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11226,
									"end": 11293,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11226,
									"end": 11293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11219,
									"end": 11293,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11219,
									"end": 11293,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11302,
									"end": 11395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11391,
									"end": 11394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11302,
									"end": 11395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11302,
									"end": 11395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11302,
									"end": 11395,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11302,
									"end": 11395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11420,
									"end": 11422,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11415,
									"end": 11418,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11411,
									"end": 11423,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11404,
									"end": 11423,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11404,
									"end": 11423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11063,
									"end": 11429,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11063,
									"end": 11429,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11063,
									"end": 11429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11063,
									"end": 11429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11435,
									"end": 11854,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 11435,
									"end": 11854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11601,
									"end": 11605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11639,
									"end": 11641,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11628,
									"end": 11637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11624,
									"end": 11642,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11616,
									"end": 11642,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11616,
									"end": 11642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11688,
									"end": 11697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11682,
									"end": 11686,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11678,
									"end": 11698,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 11674,
									"end": 11675,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11663,
									"end": 11672,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11659,
									"end": 11676,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11652,
									"end": 11699,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 11842,
									"end": 11846,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 11716,
									"end": 11847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11847,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 11716,
									"end": 11847,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11708,
									"end": 11847,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11708,
									"end": 11847,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11435,
									"end": 11854,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11435,
									"end": 11854,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11435,
									"end": 11854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11435,
									"end": 11854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11860,
									"end": 12094,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 11860,
									"end": 12094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12000,
									"end": 12034,
									"name": "PUSH",
									"source": 7,
									"value": "696E697469616C20737570706C792073686F756C64206E6F7420657863656564"
								},
								{
									"begin": 11996,
									"end": 11997,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11988,
									"end": 11994,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11984,
									"end": 11998,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11977,
									"end": 12035,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12069,
									"end": 12086,
									"name": "PUSH",
									"source": 7,
									"value": "20746865206D617820737570706C790000000000000000000000000000000000"
								},
								{
									"begin": 12064,
									"end": 12066,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12056,
									"end": 12062,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12052,
									"end": 12067,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12045,
									"end": 12087,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11860,
									"end": 12094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11860,
									"end": 12094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12100,
									"end": 12466,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 12100,
									"end": 12466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12242,
									"end": 12245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12263,
									"end": 12330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 12327,
									"end": 12329,
									"name": "PUSH",
									"source": 7,
									"value": "2F"
								},
								{
									"begin": 12322,
									"end": 12325,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12263,
									"end": 12330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 12263,
									"end": 12330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12263,
									"end": 12330,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 12263,
									"end": 12330,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12256,
									"end": 12330,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12256,
									"end": 12330,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12339,
									"end": 12432,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 12428,
									"end": 12431,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12339,
									"end": 12432,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 12339,
									"end": 12432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12339,
									"end": 12432,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 12339,
									"end": 12432,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12457,
									"end": 12459,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 12452,
									"end": 12455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12448,
									"end": 12460,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12441,
									"end": 12460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12441,
									"end": 12460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12100,
									"end": 12466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12100,
									"end": 12466,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12100,
									"end": 12466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12100,
									"end": 12466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12472,
									"end": 12891,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 12472,
									"end": 12891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12638,
									"end": 12642,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12676,
									"end": 12678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12665,
									"end": 12674,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12661,
									"end": 12679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12653,
									"end": 12679,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12653,
									"end": 12679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12725,
									"end": 12734,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12719,
									"end": 12723,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12715,
									"end": 12735,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 12711,
									"end": 12712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12700,
									"end": 12709,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12696,
									"end": 12713,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12689,
									"end": 12736,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12753,
									"end": 12884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 12879,
									"end": 12883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12753,
									"end": 12884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 12753,
									"end": 12884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12753,
									"end": 12884,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 12753,
									"end": 12884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12745,
									"end": 12884,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12745,
									"end": 12884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12472,
									"end": 12891,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12472,
									"end": 12891,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12472,
									"end": 12891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12472,
									"end": 12891,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12897,
									"end": 13015,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 12897,
									"end": 13015,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12984,
									"end": 13008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 13002,
									"end": 13007,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12984,
									"end": 13008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 12984,
									"end": 13008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12984,
									"end": 13008,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 12984,
									"end": 13008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12979,
									"end": 12982,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12972,
									"end": 13009,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12897,
									"end": 13015,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12897,
									"end": 13015,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12897,
									"end": 13015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13114,
									"end": 13118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13152,
									"end": 13154,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13141,
									"end": 13150,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13137,
									"end": 13155,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13129,
									"end": 13155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13129,
									"end": 13155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13165,
									"end": 13236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 13233,
									"end": 13234,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13222,
									"end": 13231,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13218,
									"end": 13235,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13209,
									"end": 13215,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13165,
									"end": 13236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 13165,
									"end": 13236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13165,
									"end": 13236,
									"name": "tag",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 13165,
									"end": 13236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13249,
									"end": 13367,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 13249,
									"end": 13367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13336,
									"end": 13360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 13354,
									"end": 13359,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13336,
									"end": 13360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 13336,
									"end": 13360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13336,
									"end": 13360,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 13336,
									"end": 13360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13331,
									"end": 13334,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13324,
									"end": 13361,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13249,
									"end": 13367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13249,
									"end": 13367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13249,
									"end": 13367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13470,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13504,
									"end": 13506,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13493,
									"end": 13502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13489,
									"end": 13507,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13481,
									"end": 13507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13481,
									"end": 13507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13517,
									"end": 13588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 13585,
									"end": 13586,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13574,
									"end": 13583,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13570,
									"end": 13587,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13561,
									"end": 13567,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13517,
									"end": 13588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 13517,
									"end": 13588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13517,
									"end": 13588,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 13517,
									"end": 13588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13595,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13601,
									"end": 13781,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 13601,
									"end": 13781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13649,
									"end": 13726,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13646,
									"end": 13647,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13639,
									"end": 13727,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13746,
									"end": 13750,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 13743,
									"end": 13744,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 13736,
									"end": 13751,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13770,
									"end": 13774,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 13767,
									"end": 13768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13760,
									"end": 13775,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13827,
									"end": 13830,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13846,
									"end": 13866,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 13864,
									"end": 13865,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13846,
									"end": 13866,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 13846,
									"end": 13866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13846,
									"end": 13866,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 13846,
									"end": 13866,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13866,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13841,
									"end": 13866,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13880,
									"end": 13900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 13898,
									"end": 13899,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13880,
									"end": 13900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 13880,
									"end": 13900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13880,
									"end": 13900,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 13880,
									"end": 13900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13875,
									"end": 13900,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13875,
									"end": 13900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13923,
									"end": 13924,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13920,
									"end": 13921,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13916,
									"end": 13925,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13909,
									"end": 13925,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13909,
									"end": 13925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13944,
									"end": 13947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 13941,
									"end": 13942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13938,
									"end": 13948,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 13935,
									"end": 13971,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13935,
									"end": 13971,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 13935,
									"end": 13971,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13951,
									"end": 13969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 13951,
									"end": 13969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 13951,
									"end": 13969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13951,
									"end": 13969,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 13951,
									"end": 13969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13935,
									"end": 13971,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 13935,
									"end": 13971,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13787,
									"end": 13978,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14133,
									"end": 14137,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14171,
									"end": 14173,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 14160,
									"end": 14169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14156,
									"end": 14174,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14148,
									"end": 14174,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14148,
									"end": 14174,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14184,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 14252,
									"end": 14253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14241,
									"end": 14250,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14237,
									"end": 14254,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14228,
									"end": 14234,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 14184,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 14184,
									"end": 14255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14184,
									"end": 14255,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 14184,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14265,
									"end": 14337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 14333,
									"end": 14335,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14322,
									"end": 14331,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14318,
									"end": 14336,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14309,
									"end": 14315,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 14265,
									"end": 14337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 14265,
									"end": 14337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14265,
									"end": 14337,
									"name": "tag",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 14265,
									"end": 14337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14347,
									"end": 14419,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 14415,
									"end": 14417,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 14404,
									"end": 14413,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14391,
									"end": 14397,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 14347,
									"end": 14419,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 14347,
									"end": 14419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14347,
									"end": 14419,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 14347,
									"end": 14419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13984,
									"end": 14426,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 721,
									"end": 3810,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204633b8cdcafb9dd79d58abb12baa8c6946b31aafb390d14e92e17f009de5327564736f6c634300081a0033",
									".code": [
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "4EB03F6E"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "AB8E786F"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "AB8E786F"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "D5ABEB01"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "E2F273BD"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "F851A440"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "4EB03F6E"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "24E770D0"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "29FB7EF6"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "7546172"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 3810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1057,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1057,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2974,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3089,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3089,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2061,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2061,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3321,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3321,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2310,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2310,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2310,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1027,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3453,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3453,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1084,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3055,
											"end": 3076,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3628,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3610,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3244,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3199,
											"end": 3244,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3244,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3244,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D65D781DB82F0BD55F732EA1B96F4C6565750DF815C18A70962CD8405274E243"
										},
										{
											"begin": 3286,
											"end": 3307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3286,
											"end": 3307,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3308,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3628,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3610,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3389,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3405,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "94A0A7C0A7A455351029A521046D4438BC63E58A1EE8D984D624EB3161583B2C"
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3433,
											"end": 3439,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3420,
											"end": 3440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3440,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3727,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3727,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2450,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2440,
											"end": 2460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2460,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2436,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2476,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2436,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2532,
											"end": 2548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2532,
											"end": 2550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2532,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2581,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2560,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2618,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2606,
											"end": 2618,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2560,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2667,
											"end": 2676,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2658,
											"end": 2664,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2642,
											"end": 2664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2642,
											"end": 2664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2676,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2638,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2701,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2701,
											"end": 2726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2701,
											"end": 2726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2726,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2726,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2638,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2752,
											"end": 2759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2746,
											"end": 2768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2746,
											"end": 2768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2778,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3800,
											"end": 3801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3628,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3637,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3610,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3610,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3519,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BFC8D7754FEC5096BECC28E0816011E8D0ADCFE752FFA1C88924A7F88B00A41D"
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3548,
											"end": 3566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3566,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1361,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1440,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1581,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1563,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1744,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2228,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2253,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2383,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4336,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4764,
											"end": 4773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4779,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4782,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C792061646D696E2063616E206D616B6520746869732063616C6C000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6932,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7172,
											"end": 7174,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7108,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7273,
											"end": 7276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7184,
											"end": 7277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 7311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 7598,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7742,
											"end": 7922,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7742,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7882,
											"end": 7914,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C79206D696E7465722063616E206D616B6520746869732063616C6C0000"
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7742,
											"end": 7922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7742,
											"end": 7922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8294,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7928,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 8150,
											"end": 8153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8091,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 8091,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8091,
											"end": 8158,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8091,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8256,
											"end": 8259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 8167,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8260,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8167,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8280,
											"end": 8283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8719,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8300,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8504,
											"end": 8506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8493,
											"end": 8502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8562,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8551,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8537,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8524,
											"end": 8541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8517,
											"end": 8564,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8707,
											"end": 8711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8581,
											"end": 8712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8712,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8581,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 8787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8856,
											"end": 8861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8829,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8862,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8829,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8944,
											"end": 8950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 8979,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8968,
											"end": 8991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8996,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8999,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8999,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8961,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9200,
											"end": 9207,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9191,
											"end": 9197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 9144,
											"end": 9208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9208,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9144,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 9225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9411,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 9231,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9356,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9269,
											"end": 9357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9373,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9366,
											"end": 9381,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9390,
											"end": 9405,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9494,
											"end": 9495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9476,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9528,
											"end": 9529,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9510,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9510,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9505,
											"end": 9530,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9505,
											"end": 9530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9574,
											"end": 9577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9578,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9601,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9565,
											"end": 9601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 9581,
											"end": 9599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9601,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9565,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9674,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9694,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 9674,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 9726,
											"end": 9727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9708,
											"end": 9728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9728,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 9708,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9728,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9703,
											"end": 9728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9778,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9801,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 9764,
											"end": 9801,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 9781,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9801,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 9764,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9614,
											"end": 9808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10003,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9990,
											"end": 9999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9978,
											"end": 10004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9978,
											"end": 10004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10064,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10014,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 10014,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10152,
											"end": 10161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10145,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10095,
											"end": 10167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10167,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10095,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10245,
											"end": 10247,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10243,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10230,
											"end": 10248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10227,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10177,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10249,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10177,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 10256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/govarnance/SubchainGovernanceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"maxSupply()": "d5abeb01",
							"mintStakerReward(address,uint256)": "ab8e786f",
							"minter()": "07546172",
							"name()": "06fdde03",
							"stakerRewardPerBlock()": "24e770d0",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateAdmin(address)": "e2f273bd",
							"updateMinter(address)": "4eb03f6e",
							"updateStakerRewardPerBlock(uint256)": "29fb7ef6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakerRewardPerBlock_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initDistrWallet_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initMintAmount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"UpdateAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"UpdateMinter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStakerRewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"UpdateStakerRewardPerBlock\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintStakerReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"name\":\"updateMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakerRewardPerBlock_\",\"type\":\"uint256\"}],\"name\":\"updateStakerRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/govarnance/SubchainGovernanceToken.sol\":\"SubchainGovernanceToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/govarnance/SubchainGovernanceToken.sol\":{\"keccak256\":\"0x3716d98c886b548d0707a27b5b9ae4fbedce4dc78e49e386b8df507bf23326df\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://082ef358631848b0cb870fdb7bad4f846aeac9a4b83806e11c1f3d4170905f3c\",\"dweb:/ipfs/QmWpgXSanM1PkCSFTA79ctJkY386seWVtUhqdybrAfjdDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1862,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1864,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "_stakerRewardPerBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1866,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "maxSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1868,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "minter",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1870,
								"contract": "contracts/govarnance/SubchainGovernanceToken.sol:SubchainGovernanceToken",
								"label": "admin",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1839
						]
					},
					"id": 1840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:5",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1839,
							"linearizedBaseContracts": [
								1839
							],
							"name": "Math",
							"nameLocation": "211:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:5",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 791,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:5"
									},
									"src": "277:29:5"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 796,
									"members": [
										{
											"id": 792,
											"name": "Floor",
											"nameLocation": "336:5:5",
											"nodeType": "EnumValue",
											"src": "336:5:5"
										},
										{
											"id": 793,
											"name": "Ceil",
											"nameLocation": "379:4:5",
											"nodeType": "EnumValue",
											"src": "379:4:5"
										},
										{
											"id": 794,
											"name": "Trunc",
											"nameLocation": "421:5:5",
											"nodeType": "EnumValue",
											"src": "421:5:5"
										},
										{
											"id": 795,
											"name": "Expand",
											"nameLocation": "451:6:5",
											"nodeType": "EnumValue",
											"src": "451:6:5"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:5",
									"nodeType": "EnumDefinition",
									"src": "312:169:5"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "661:140:5",
										"statements": [
											{
												"id": 826,
												"nodeType": "UncheckedBlock",
												"src": "671:124:5",
												"statements": [
													{
														"assignments": [
															809
														],
														"declarations": [
															{
																"constant": false,
																"id": 809,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 826,
																"src": "695:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "707:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 811,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "711:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "730:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 815,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "734:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 821,
														"nodeType": "IfStatement",
														"src": "726:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 820,
															"nodeType": "Return",
															"src": "737:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 823,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "782:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 824,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 825,
														"nodeType": "Return",
														"src": "768:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "601:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "612:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "646:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "652:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:5"
									},
									"scope": 1839,
									"src": "585:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "984:113:5",
										"statements": [
											{
												"id": 854,
												"nodeType": "UncheckedBlock",
												"src": "994:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "1022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 841,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1026:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 847,
														"nodeType": "IfStatement",
														"src": "1018:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 839,
															"id": 846,
															"nodeType": "Return",
															"src": "1029:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 849,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "1074:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 850,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "1078:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 852,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 839,
														"id": 853,
														"nodeType": "Return",
														"src": "1060:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "924:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "935:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "969:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "975:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:5"
									},
									"scope": 1839,
									"src": "908:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1283:417:5",
										"statements": [
											{
												"id": 896,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "1551:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 875,
														"nodeType": "IfStatement",
														"src": "1547:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 873,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 867,
															"id": 874,
															"nodeType": "Return",
															"src": "1559:16:5"
														}
													},
													{
														"assignments": [
															877
														],
														"declarations": [
															{
																"constant": false,
																"id": 877,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 896,
																"src": "1589:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 876,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 881,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "1601:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 879,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "1605:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "1624:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 883,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "1628:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 885,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "1633:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "1620:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 867,
															"id": 890,
															"nodeType": "Return",
															"src": "1636:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 893,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "1681:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 894,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 867,
														"id": 895,
														"nodeType": "Return",
														"src": "1667:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1223:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1234:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "1274:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:5"
									},
									"scope": 1839,
									"src": "1207:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "1887:114:5",
										"statements": [
											{
												"id": 924,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "1925:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 917,
														"nodeType": "IfStatement",
														"src": "1921:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 915,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 909,
															"id": 916,
															"nodeType": "Return",
															"src": "1933:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 919,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "1978:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 920,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "1982:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 922,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 909,
														"id": 923,
														"nodeType": "Return",
														"src": "1964:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1827:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1838:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1872:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:5"
									},
									"scope": 1839,
									"src": "1811:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2198:114:5",
										"statements": [
											{
												"id": 952,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "2236:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 945,
														"nodeType": "IfStatement",
														"src": "2232:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 937,
															"id": 944,
															"nodeType": "Return",
															"src": "2244:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 947,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "2289:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 948,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "2293:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 950,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 937,
														"id": 951,
														"nodeType": "Return",
														"src": "2275:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2138:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2183:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2189:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:5"
									},
									"scope": 1839,
									"src": "2122:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "2449:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 964,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "2466:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 965,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2470:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 968,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2478:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:5",
													"trueExpression": {
														"id": 967,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "2474:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 963,
												"id": 970,
												"nodeType": "Return",
												"src": "2459:20:5"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:5",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2395:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2406:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:5"
									},
									"scope": 1839,
									"src": "2382:104:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2624:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 982,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "2641:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 983,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "2645:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 986,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "2653:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:5",
													"trueExpression": {
														"id": 985,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "2649:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 988,
												"nodeType": "Return",
												"src": "2634:20:5"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:5",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2570:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2581:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2615:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:5"
									},
									"scope": 1839,
									"src": "2557:104:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "2845:82:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2900:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1001,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2904:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1004,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "2910:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1005,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "2914:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1007,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 999,
												"id": 1011,
												"nodeType": "Return",
												"src": "2892:28:5"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:5",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2791:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2802:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:5"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "2836:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:5"
									},
									"scope": 1839,
									"src": "2774:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3219:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "3233:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "3229:127:5",
												"trueBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "3241:115:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "3340:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1027,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "3344:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1022,
															"id": 1029,
															"nodeType": "Return",
															"src": "3333:12:5"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1032,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "3444:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1036,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "3458:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1040,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "3467:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:5",
													"trueExpression": {
														"hexValue": "30",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1045,
												"nodeType": "Return",
												"src": "3437:35:5"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:5",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3165:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3176:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:5"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3210:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:5"
									},
									"scope": 1839,
									"src": "3148:331:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "3901:4018:5",
										"statements": [
											{
												"id": 1171,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:5",
												"statements": [
													{
														"assignments": [
															1060
														],
														"declarations": [
															{
																"constant": false,
																"id": 1060,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:5",
																"nodeType": "VariableDeclaration",
																"scope": 1171,
																"src": "4232:13:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1064,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "4248:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1062,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "4252:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:5"
													},
													{
														"assignments": [
															1066
														],
														"declarations": [
															{
																"constant": false,
																"id": 1066,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:5",
																"nodeType": "VariableDeclaration",
																"scope": 1171,
																"src": "4312:13:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1065,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1067,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:5"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:5",
															"nodeType": "YulBlock",
															"src": "4392:122:5",
															"statements": [
																{
																	"nativeSrc": "4410:30:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:5"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:5"
																				},
																				"nativeSrc": "4433:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:5"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:5"
																		},
																		"nativeSrc": "4420:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:5"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:5",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:5",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:5"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:5"
																				},
																				"nativeSrc": "4470:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:5"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:5"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:5"
																				},
																				"nativeSrc": "4486:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:5"
																		},
																		"nativeSrc": "4466:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1066,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1050,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1052,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:5",
																"valueSize": 1
															}
														],
														"id": 1068,
														"nodeType": "InlineAssembly",
														"src": "4383:131:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "4595:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1077,
														"nodeType": "IfStatement",
														"src": "4591:368:5",
														"trueBody": {
															"id": 1076,
															"nodeType": "Block",
															"src": "4607:352:5",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1072,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "4925:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1073,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "4933:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1058,
																	"id": 1075,
																	"nodeType": "Return",
																	"src": "4918:26:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1078,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5065:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1079,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "5080:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "5061:88:5",
														"trueBody": {
															"id": 1084,
															"nodeType": "Block",
															"src": "5087:62:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1081,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "5112:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1083,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:5"
																}
															]
														}
													},
													{
														"assignments": [
															1087
														],
														"declarations": [
															{
																"constant": false,
																"id": 1087,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:5",
																"nodeType": "VariableDeclaration",
																"scope": 1171,
																"src": "5404:17:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1086,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1088,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:5"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:5",
															"nodeType": "YulBlock",
															"src": "5444:291:5",
															"statements": [
																{
																	"nativeSrc": "5513:38:5",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:5"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:5"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:5",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:5"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:5"
																		},
																		"nativeSrc": "5526:25:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:5"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:5"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:5",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:5"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:5"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:5"
																				},
																				"nativeSrc": "5653:20:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:5"
																		},
																		"nativeSrc": "5642:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:5"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:5",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:5"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:5"
																		},
																		"nativeSrc": "5700:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1054,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1066,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1066,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1087,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1087,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1087,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:5",
																"valueSize": 1
															},
															{
																"declaration": 1050,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:5",
																"valueSize": 1
															},
															{
																"declaration": 1052,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:5",
																"valueSize": 1
															}
														],
														"id": 1089,
														"nodeType": "InlineAssembly",
														"src": "5435:300:5"
													},
													{
														"assignments": [
															1091
														],
														"declarations": [
															{
																"constant": false,
																"id": 1091,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:5",
																"nodeType": "VariableDeclaration",
																"scope": 1171,
																"src": "5939:12:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1090,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1098,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5954:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1094,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "5973:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:5"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:5",
															"nodeType": "YulBlock",
															"src": "6008:362:5",
															"statements": [
																{
																	"nativeSrc": "6073:37:5",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:5",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:5"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:5"
																		},
																		"nativeSrc": "6088:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:5"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:5"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:5",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:5"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:5"
																		},
																		"nativeSrc": "6186:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:5"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:5"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:5",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:5",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:5"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:5"
																						},
																						"nativeSrc": "6333:12:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:5"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:5"
																				},
																				"nativeSrc": "6329:23:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:5"
																		},
																		"nativeSrc": "6325:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:5"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:5",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:5"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1054,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1054,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1060,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:5",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:5",
																"valueSize": 1
															},
															{
																"declaration": 1091,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:5",
																"valueSize": 1
															}
														],
														"id": 1099,
														"nodeType": "InlineAssembly",
														"src": "5999:371:5"
													},
													{
														"expression": {
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1100,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "6436:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "6445:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1102,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "6453:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1105,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:5"
													},
													{
														"assignments": [
															1107
														],
														"declarations": [
															{
																"constant": false,
																"id": 1107,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:5",
																"nodeType": "VariableDeclaration",
																"scope": 1171,
																"src": "6775:15:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1114,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1109,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1054,
																			"src": "6798:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:5"
													},
													{
														"expression": {
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7031:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7046:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7060:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1122,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:5"
													},
													{
														"expression": {
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7100:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7115:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1130,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:5"
													},
													{
														"expression": {
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1131,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7170:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1133,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7185:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1134,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7199:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1138,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:5"
													},
													{
														"expression": {
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1139,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7240:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1141,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7255:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1142,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7269:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1146,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:5"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1147,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7310:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1149,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7325:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1150,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7339:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:5"
													},
													{
														"expression": {
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1155,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7381:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7396:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1158,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "7410:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1162,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:5"
													},
													{
														"expression": {
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1163,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "7851:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1164,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "7860:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1165,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "7868:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1168,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:5"
													},
													{
														"expression": {
															"id": 1169,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "7896:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1170,
														"nodeType": "Return",
														"src": "7889:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:5",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3819:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3830:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3841:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:5"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3885:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:5"
									},
									"scope": 1839,
									"src": "3803:4116:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "8161:192:5",
										"statements": [
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "8171:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"arguments": [
														{
															"id": 1191,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "8195:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "8198:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1193,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "8201:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1190,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1173,
															1216
														],
														"referencedDeclaration": 1173,
														"src": "8188:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1197,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "8244:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$796",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$796",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1196,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "8227:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$796_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "8264:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1201,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "8267:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1202,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "8270:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1199,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "8223:101:5",
												"trueBody": {
													"id": 1211,
													"nodeType": "Block",
													"src": "8288:36:5",
													"statements": [
														{
															"expression": {
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1207,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "8302:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1210,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1213,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1189,
													"src": "8340:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1214,
												"nodeType": "Return",
												"src": "8333:13:5"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:5",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "8067:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "8078:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "8089:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "8110:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1181,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "8110:8:5"
													},
													"referencedDeclaration": 796,
													"src": "8110:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:5"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "8152:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:5"
									},
									"scope": 1839,
									"src": "8051:302:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "8644:1585:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "8658:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "8654:45:5",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "8666:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1223,
															"id": 1228,
															"nodeType": "Return",
															"src": "8680:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "9378:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1235,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "9406:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1234,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1495,
																			1530
																		],
																		"referencedDeclaration": 1495,
																		"src": "9401:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1239,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:5"
											},
											{
												"id": 1326,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:5",
												"statements": [
													{
														"expression": {
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1242,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9839:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1243,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9849:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1244,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "9858:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1245,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "9862:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1248,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:5"
													},
													{
														"expression": {
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9888:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1254,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9898:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1255,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "9907:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1256,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "9911:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1259,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1263,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:5"
													},
													{
														"expression": {
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1264,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9937:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1265,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9947:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1266,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "9956:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1267,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "9960:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1274,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:5"
													},
													{
														"expression": {
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1275,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "9986:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1276,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9996:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1277,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "10005:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1278,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "10009:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1281,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1285,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:5"
													},
													{
														"expression": {
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1286,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "10035:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1287,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "10045:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1288,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "10054:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1289,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "10058:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1292,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1296,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:5"
													},
													{
														"expression": {
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1297,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "10084:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1298,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "10094:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1299,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "10103:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1300,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "10107:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1303,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1307,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:5"
													},
													{
														"expression": {
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1308,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "10133:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1309,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "10143:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1310,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1219,
																					"src": "10152:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1311,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "10156:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1314,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1318,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1320,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "10193:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1321,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "10201:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1322,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "10205:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1319,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "10189:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1223,
														"id": 1325,
														"nodeType": "Return",
														"src": "10182:30:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:5",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "8601:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:5"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "8635:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:5"
									},
									"scope": 1839,
									"src": "8587:1642:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "10405:164:5",
										"statements": [
											{
												"id": 1361,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:5",
												"statements": [
													{
														"assignments": [
															1340
														],
														"declarations": [
															{
																"constant": false,
																"id": 1340,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1361,
																"src": "10439:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1339,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1344,
														"initialValue": {
															"arguments": [
																{
																	"id": 1342,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "10461:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1341,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1328,
																	1363
																],
																"referencedDeclaration": 1328,
																"src": "10456:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "10484:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1347,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1334,
																						"src": "10511:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1346,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "10494:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$796_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1349,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1340,
																						"src": "10524:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1350,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1340,
																						"src": "10533:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1352,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "10542:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1338,
														"id": 1360,
														"nodeType": "Return",
														"src": "10477:75:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:5",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "10343:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "10354:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1332,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "10354:8:5"
													},
													"referencedDeclaration": 796,
													"src": "10354:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:5"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "10396:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:5"
									},
									"scope": 1839,
									"src": "10329:240:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "10760:922:5",
										"statements": [
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1494,
														"src": "10770:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"hexValue": "30",
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:5"
											},
											{
												"id": 1491,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1375,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "10826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1389,
														"nodeType": "IfStatement",
														"src": "10822:99:5",
														"trueBody": {
															"id": 1388,
															"nodeType": "Block",
															"src": "10844:77:5",
															"statements": [
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "10862:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:5"
																},
																{
																	"expression": {
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "10893:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1387,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "10938:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1404,
														"nodeType": "IfStatement",
														"src": "10934:96:5",
														"trueBody": {
															"id": 1403,
															"nodeType": "Block",
															"src": "10955:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "10973:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1398,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:5"
																},
																{
																	"expression": {
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1399,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11003:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1402,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11047:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1419,
														"nodeType": "IfStatement",
														"src": "11043:96:5",
														"trueBody": {
															"id": 1418,
															"nodeType": "Block",
															"src": "11064:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1410,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "11082:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1413,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:5"
																},
																{
																	"expression": {
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11112:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1417,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1420,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11156:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1434,
														"nodeType": "IfStatement",
														"src": "11152:96:5",
														"trueBody": {
															"id": 1433,
															"nodeType": "Block",
															"src": "11173:75:5",
															"statements": [
																{
																	"expression": {
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "11191:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1428,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:5"
																},
																{
																	"expression": {
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11221:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1432,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11265:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1449,
														"nodeType": "IfStatement",
														"src": "11261:93:5",
														"trueBody": {
															"id": 1448,
															"nodeType": "Block",
															"src": "11281:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1440,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "11299:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1443,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:5"
																},
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11328:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11371:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1464,
														"nodeType": "IfStatement",
														"src": "11367:93:5",
														"trueBody": {
															"id": 1463,
															"nodeType": "Block",
															"src": "11387:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1455,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "11405:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1458,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:5"
																},
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11434:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11477:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1479,
														"nodeType": "IfStatement",
														"src": "11473:93:5",
														"trueBody": {
															"id": 1478,
															"nodeType": "Block",
															"src": "11493:73:5",
															"statements": [
																{
																	"expression": {
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1366,
																			"src": "11511:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:5"
																},
																{
																	"expression": {
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11540:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1477,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "11583:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "11579:64:5",
														"trueBody": {
															"id": 1489,
															"nodeType": "Block",
															"src": "11599:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "11617:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1488,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1492,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "11669:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1493,
												"nodeType": "Return",
												"src": "11662:13:5"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:5",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "10713:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:5"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "10751:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:5"
									},
									"scope": 1839,
									"src": "10699:983:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "11915:168:5",
										"statements": [
											{
												"id": 1528,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:5",
												"statements": [
													{
														"assignments": [
															1507
														],
														"declarations": [
															{
																"constant": false,
																"id": 1507,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1528,
																"src": "11949:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1511,
														"initialValue": {
															"arguments": [
																{
																	"id": 1509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "11971:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1508,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1495,
																	1530
																],
																"referencedDeclaration": 1495,
																"src": "11966:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1512,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "11998:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1514,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1501,
																						"src": "12025:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1513,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "12008:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$796_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1517,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1507,
																						"src": "12043:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1519,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1498,
																					"src": "12052:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1505,
														"id": 1527,
														"nodeType": "Return",
														"src": "11991:75:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:5",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "11849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "11864:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1499,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "11864:8:5"
													},
													"referencedDeclaration": 796,
													"src": "11864:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:5"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "11906:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:5"
									},
									"scope": 1839,
									"src": "11835:248:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "12276:854:5",
										"statements": [
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "12286:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"initialValue": {
													"hexValue": "30",
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:5"
											},
											{
												"id": 1655,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12342:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1558,
														"nodeType": "IfStatement",
														"src": "12338:103:5",
														"trueBody": {
															"id": 1557,
															"nodeType": "Block",
															"src": "12361:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12379:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1552,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:5"
																},
																{
																	"expression": {
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1553,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12414:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1556,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1559,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12458:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1575,
														"nodeType": "IfStatement",
														"src": "12454:103:5",
														"trueBody": {
															"id": 1574,
															"nodeType": "Block",
															"src": "12477:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1564,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12495:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1569,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:5"
																},
																{
																	"expression": {
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1570,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12530:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1573,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12574:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1592,
														"nodeType": "IfStatement",
														"src": "12570:103:5",
														"trueBody": {
															"id": 1591,
															"nodeType": "Block",
															"src": "12593:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1581,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12611:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1586,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:5"
																},
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1587,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12646:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1593,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12690:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1609,
														"nodeType": "IfStatement",
														"src": "12686:100:5",
														"trueBody": {
															"id": 1608,
															"nodeType": "Block",
															"src": "12708:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1598,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12726:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1603,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:5"
																},
																{
																	"expression": {
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12760:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1610,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12803:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1626,
														"nodeType": "IfStatement",
														"src": "12799:100:5",
														"trueBody": {
															"id": 1625,
															"nodeType": "Block",
															"src": "12821:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12839:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1620,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:5"
																},
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12873:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1627,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "12916:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1643,
														"nodeType": "IfStatement",
														"src": "12912:100:5",
														"trueBody": {
															"id": 1642,
															"nodeType": "Block",
															"src": "12934:78:5",
															"statements": [
																{
																	"expression": {
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1632,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "12952:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:5"
																},
																{
																	"expression": {
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "12986:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1641,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "13029:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1654,
														"nodeType": "IfStatement",
														"src": "13025:66:5",
														"trueBody": {
															"id": 1653,
															"nodeType": "Block",
															"src": "13047:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "13065:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1656,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1539,
													"src": "13117:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1657,
												"nodeType": "Return",
												"src": "13110:13:5"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:5",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "12229:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:5"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "12267:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:5"
									},
									"scope": 1839,
									"src": "12214:916:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "13365:170:5",
										"statements": [
											{
												"id": 1692,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:5",
												"statements": [
													{
														"assignments": [
															1671
														],
														"declarations": [
															{
																"constant": false,
																"id": 1671,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1692,
																"src": "13399:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1670,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1675,
														"initialValue": {
															"arguments": [
																{
																	"id": 1673,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "13422:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1672,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1659,
																	1694
																],
																"referencedDeclaration": 1659,
																"src": "13416:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1676,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "13449:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1678,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1665,
																						"src": "13476:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1677,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "13459:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$796_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1682,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1680,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1681,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "13495:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1683,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1662,
																					"src": "13504:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1669,
														"id": 1691,
														"nodeType": "Return",
														"src": "13442:76:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:5",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "13299:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "13314:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1663,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "13314:8:5"
													},
													"referencedDeclaration": 796,
													"src": "13314:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:5"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "13356:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:5"
									},
									"scope": 1839,
									"src": "13284:251:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "13855:600:5",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1780,
														"src": "13865:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"hexValue": "30",
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:5"
											},
											{
												"id": 1777,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "13921:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1720,
														"nodeType": "IfStatement",
														"src": "13917:98:5",
														"trueBody": {
															"id": 1719,
															"nodeType": "Block",
															"src": "13939:76:5",
															"statements": [
																{
																	"expression": {
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1711,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "13957:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1714,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:5"
																},
																{
																	"expression": {
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1715,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "13988:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1718,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14032:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "14028:95:5",
														"trueBody": {
															"id": 1734,
															"nodeType": "Block",
															"src": "14049:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "14067:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1729,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:5"
																},
																{
																	"expression": {
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1730,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "14097:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1733,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14140:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1750,
														"nodeType": "IfStatement",
														"src": "14136:95:5",
														"trueBody": {
															"id": 1749,
															"nodeType": "Block",
															"src": "14157:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "14175:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1744,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:5"
																},
																{
																	"expression": {
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1745,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "14205:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1748,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1751,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14248:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1765,
														"nodeType": "IfStatement",
														"src": "14244:95:5",
														"trueBody": {
															"id": 1764,
															"nodeType": "Block",
															"src": "14265:74:5",
															"statements": [
																{
																	"expression": {
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1756,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "14283:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1759,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:5"
																},
																{
																	"expression": {
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1760,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "14313:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1763,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:5"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14356:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1776,
														"nodeType": "IfStatement",
														"src": "14352:64:5",
														"trueBody": {
															"id": 1775,
															"nodeType": "Block",
															"src": "14372:44:5",
															"statements": [
																{
																	"expression": {
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1771,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "14390:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1774,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:5"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1778,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1703,
													"src": "14442:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1779,
												"nodeType": "Return",
												"src": "14435:13:5"
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:5",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "13808:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:5"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "13846:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:5"
									},
									"scope": 1839,
									"src": "13792:663:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "14692:177:5",
										"statements": [
											{
												"id": 1817,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:5",
												"statements": [
													{
														"assignments": [
															1793
														],
														"declarations": [
															{
																"constant": false,
																"id": 1793,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1817,
																"src": "14726:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1792,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1797,
														"initialValue": {
															"arguments": [
																{
																	"id": 1795,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "14750:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1794,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1781,
																	1819
																],
																"referencedDeclaration": 1781,
																"src": "14743:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "14777:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1800,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1787,
																						"src": "14804:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$796",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1799,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "14787:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$796_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1805,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1803,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1793,
																									"src": "14823:6:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1804,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1806,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1808,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1784,
																					"src": "14838:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:5",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1814,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1791,
														"id": 1816,
														"nodeType": "Return",
														"src": "14770:82:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:5",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "14626:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "14641:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1785,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "14641:8:5"
													},
													"referencedDeclaration": 796,
													"src": "14641:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:5"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "14683:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:5"
									},
									"scope": 1839,
									"src": "14610:259:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "15067:48:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1830,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "15090:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$796",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$796",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1828,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1836,
												"nodeType": "Return",
												"src": "15077:31:5"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:5",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "15019:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$796",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "15019:8:5"
													},
													"referencedDeclaration": 796,
													"src": "15019:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$796",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:5"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "15061:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:5"
									},
									"scope": 1839,
									"src": "14993:122:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1840,
							"src": "203:14914:5",
							"usedErrors": [
								791
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:5"
				},
				"id": 5
			},
			"contracts/govarnance/SubchainGovernanceToken.sol": {
				"ast": {
					"absolutePath": "contracts/govarnance/SubchainGovernanceToken.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Math": [
							1839
						],
						"SubchainGovernanceToken": [
							2092
						]
					},
					"id": 2093,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1842,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2093,
							"sourceUnit": 1840,
							"src": "64:53:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2093,
							"sourceUnit": 652,
							"src": "118:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1844,
										"name": "ERC20",
										"nameLocations": [
											"757:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "757:5:6"
									},
									"id": 1845,
									"nodeType": "InheritanceSpecifier",
									"src": "757:5:6"
								}
							],
							"canonicalName": "SubchainGovernanceToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2092,
							"linearizedBaseContracts": [
								2092,
								651,
								41,
								755,
								729,
								785
							],
							"name": "SubchainGovernanceToken",
							"nameLocation": "730:23:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1848,
									"libraryName": {
										"id": 1846,
										"name": "Math",
										"nameLocations": [
											"775:4:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1839,
										"src": "775:4:6"
									},
									"nodeType": "UsingForDirective",
									"src": "769:23:6",
									"typeName": {
										"id": 1847,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "d65d781db82f0bd55f732ea1b96f4c6565750df815c18a70962cd8405274e243",
									"id": 1852,
									"name": "UpdateStakerRewardPerBlock",
									"nameLocation": "804:26:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStakerRewardPerBlock",
												"nameLocation": "839:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "831:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:33:6"
									},
									"src": "798:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bfc8d7754fec5096becc28e0816011e8d0adcfe752ffa1c88924a7f88b00a41d",
									"id": 1856,
									"name": "UpdateAdmin",
									"nameLocation": "875:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "895:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "887:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:18:6"
									},
									"src": "869:36:6"
								},
								{
									"anonymous": false,
									"eventSelector": "94a0a7c0a7a455351029a521046d4438bc63e58a1ee8d984d624eb3161583b2c",
									"id": 1860,
									"name": "UpdateMinter",
									"nameLocation": "916:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMinter",
												"nameLocation": "937:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "929:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:19:6"
									},
									"src": "910:38:6"
								},
								{
									"constant": false,
									"id": 1862,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "968:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2092,
									"src": "954:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1861,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "954:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1864,
									"mutability": "mutable",
									"name": "_stakerRewardPerBlock",
									"nameLocation": "999:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 2092,
									"src": "983:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1863,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "983:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1866,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "1042:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2092,
									"src": "1027:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1027:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07546172",
									"id": 1868,
									"mutability": "mutable",
									"name": "minter",
									"nameLocation": "1072:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 2092,
									"src": "1057:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 1870,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1099:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2092,
									"src": "1084:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1869,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1084:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "1419:636:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "maxSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "1437:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1450:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3936",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1455:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "1450:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "1437:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6178537570706c7920746f6f206c61726765",
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1459:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a",
																"typeString": "literal_string \"maxSupply too large\""
															},
															"value": "maxSupply too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc730e47a4d2df782cf06c0acab8134d684a3b6ec2764fdd7163b995d57b091a",
																"typeString": "literal_string \"maxSupply too large\""
															}
														],
														"id": 1895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1429:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "1429:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "initMintAmount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "1596:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1906,
																"name": "maxSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "1615:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1596:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e697469616c20737570706c792073686f756c64206e6f742065786365656420746865206d617820737570706c79",
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516",
																"typeString": "literal_string \"initial supply should not exceed the max supply\""
															},
															"value": "initial supply should not exceed the max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_287b9316a48a94f0e80a201bbdecdb921dabf47b48a7638585204cf3491df516",
																"typeString": "literal_string \"initial supply should not exceed the max supply\""
															}
														],
														"id": 1904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1575:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:123:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "1575:123:6"
											},
											{
												"expression": {
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1911,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "1708:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1912,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "1720:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1708:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "1708:21:6"
											},
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1915,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "1739:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1916,
														"name": "maxSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "1751:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1739:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "1739:22:6"
											},
											{
												"expression": {
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1919,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "1771:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1920,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "1780:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1771:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "1771:16:6"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1923,
														"name": "_stakerRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "1797:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1924,
														"name": "stakerRewardPerBlock_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "1821:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1797:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "1797:45:6"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "1852:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1928,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "1860:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1852:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "1852:14:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "initDistrWallet_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "1882:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1933,
															"name": "initMintAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "1900:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1931,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1876:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1876:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "1876:40:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1937,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "1944:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1936,
														"name": "UpdateMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "1931:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1931:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "EmitStatement",
												"src": "1926:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1941,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "1978:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1940,
														"name": "UpdateAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "1966:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1966:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "EmitStatement",
												"src": "1961:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1945,
															"name": "_stakerRewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "2026:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "UpdateStakerRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "1999:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "EmitStatement",
												"src": "1994:54:6"
											}
										]
									},
									"id": 1949,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1891,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1872,
													"src": "1403:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1892,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1874,
													"src": "1410:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1893,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1890,
												"name": "ERC20",
												"nameLocations": [
													"1397:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1397:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1397:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1146:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1132:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1175:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1161:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1161:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "1198:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1192:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1875,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1192:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "maxSupply_",
												"nameLocation": "1225:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1217:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "minter_",
												"nameLocation": "1253:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1245:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "stakerRewardPerBlock_",
												"nameLocation": "1278:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1270:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "initDistrWallet_",
												"nameLocation": "1317:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1309:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "initMintAmount_",
												"nameLocation": "1351:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1343:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "1384:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1376:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:274:6"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:6"
									},
									"scope": 2092,
									"src": "1111:944:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "2126:33:6",
										"statements": [
											{
												"expression": {
													"id": 1955,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1862,
													"src": "2143:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1954,
												"id": 1956,
												"nodeType": "Return",
												"src": "2136:16:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2070:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1951,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2101:8:6"
									},
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:2:6"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2119:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1952,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:7:6"
									},
									"scope": 2092,
									"src": "2061:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "2426:370:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1969,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2440:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2444:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2440:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1971,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "2454:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2440:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "2436:63:6",
												"trueBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "2462:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2483:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1968,
															"id": 1974,
															"nodeType": "Return",
															"src": "2476:12:6"
														}
													]
												}
											},
											{
												"assignments": [
													1978
												],
												"declarations": [
													{
														"constant": false,
														"id": 1978,
														"mutability": "mutable",
														"name": "currentSupply",
														"nameLocation": "2516:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 2010,
														"src": "2508:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2508:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1979,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SubchainGovernanceToken_$2092",
																"typeString": "contract SubchainGovernanceToken"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2537:11:6",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "2532:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2532:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2508:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "2564:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1984,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2581:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2564:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1989,
												"nodeType": "IfStatement",
												"src": "2560:69:6",
												"trueBody": {
													"id": 1988,
													"nodeType": "Block",
													"src": "2592:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2613:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1968,
															"id": 1987,
															"nodeType": "Return",
															"src": "2606:12:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1990,
															"name": "currentSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "2642:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1991,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "2658:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2642:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1993,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2667:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2642:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2002,
												"nodeType": "IfStatement",
												"src": "2638:99:6",
												"trueBody": {
													"id": 2001,
													"nodeType": "Block",
													"src": "2678:59:6",
													"statements": [
														{
															"expression": {
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1995,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "2692:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1996,
																		"name": "maxSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "2701:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1997,
																		"name": "currentSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1978,
																		"src": "2713:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2701:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2692:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2000,
															"nodeType": "ExpressionStatement",
															"src": "2692:34:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "2752:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2005,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "2761:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2003,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2746:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2746:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "2746:22:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2785:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1968,
												"id": 2009,
												"nodeType": "Return",
												"src": "2778:11:6"
											}
										]
									},
									"functionSelector": "ab8e786f",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1964,
												"name": "minterOnly",
												"nameLocations": [
													"2400:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2091,
												"src": "2400:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2400:10:6"
										}
									],
									"name": "mintStakerReward",
									"nameLocation": "2319:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2353:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2345:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:55:6"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2420:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2420:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:6:6"
									},
									"scope": 2092,
									"src": "2310:486:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "3038:45:6",
										"statements": [
											{
												"expression": {
													"id": 2016,
													"name": "_stakerRewardPerBlock",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1864,
													"src": "3055:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2015,
												"id": 2017,
												"nodeType": "Return",
												"src": "3048:28:6"
											}
										]
									},
									"functionSelector": "24e770d0",
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakerRewardPerBlock",
									"nameLocation": "2983:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3003:2:6"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "3029:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:9:6"
									},
									"scope": 2092,
									"src": "2974:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "3189:126:6",
										"statements": [
											{
												"expression": {
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2026,
														"name": "_stakerRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "3199:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2027,
														"name": "stakerRewardPerBlock_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "3223:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "3199:45:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2031,
															"name": "_stakerRewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "3286:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2030,
														"name": "UpdateStakerRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "3259:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "EmitStatement",
												"src": "3254:54:6"
											}
										]
									},
									"functionSelector": "29fb7ef6",
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2023,
												"name": "adminOnly",
												"nameLocations": [
													"3179:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2079,
												"src": "3179:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3179:9:6"
										}
									],
									"name": "updateStakerRewardPerBlock",
									"nameLocation": "3098:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "stakerRewardPerBlock_",
												"nameLocation": "3142:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "3134:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3124:45:6"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3189:0:6"
									},
									"scope": 2092,
									"src": "3089:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "3379:68:6",
										"statements": [
											{
												"expression": {
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2042,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "3389:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2043,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "3398:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3389:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "3389:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2047,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "3433:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2046,
														"name": "UpdateMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "3420:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "EmitStatement",
												"src": "3415:25:6"
											}
										]
									},
									"functionSelector": "4eb03f6e",
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2039,
												"name": "adminOnly",
												"nameLocations": [
													"3369:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2079,
												"src": "3369:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3369:9:6"
										}
									],
									"name": "updateMinter",
									"nameLocation": "3330:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "minter_",
												"nameLocation": "3351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "3343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:17:6"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3379:0:6"
									},
									"scope": 2092,
									"src": "3321:126:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "3509:64:6",
										"statements": [
											{
												"expression": {
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2058,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "3519:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2059,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "3527:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3519:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "3519:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2063,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "3560:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2062,
														"name": "UpdateAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "3548:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3548:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "EmitStatement",
												"src": "3543:23:6"
											}
										]
									},
									"functionSelector": "e2f273bd",
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2055,
												"name": "adminOnly",
												"nameLocations": [
													"3499:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2079,
												"src": "3499:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3499:9:6"
										}
									],
									"name": "updateAdmin",
									"nameLocation": "3462:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "3482:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "3474:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:16:6"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:6"
									},
									"scope": 2092,
									"src": "3453:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "3600:89:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2070,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3618:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3622:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3618:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2072,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "3632:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3618:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e206d616b6520746869732063616c6c",
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3639:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02",
																"typeString": "literal_string \"Only admin can make this call\""
															},
															"value": "Only admin can make this call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455dcb9f8525806d2b2b472c229b91b640ece717f432d2540aacdcedb7f69e02",
																"typeString": "literal_string \"Only admin can make this call\""
															}
														],
														"id": 2069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3610:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3610:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "3610:61:6"
											},
											{
												"id": 2077,
												"nodeType": "PlaceholderStatement",
												"src": "3681:1:6"
											}
										]
									},
									"id": 2079,
									"name": "adminOnly",
									"nameLocation": "3588:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3597:2:6"
									},
									"src": "3579:110:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "3717:91:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2082,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3735:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3739:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3735:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2084,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "3749:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3735:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206d696e7465722063616e206d616b6520746869732063616c6c",
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3757:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5",
																"typeString": "literal_string \"Only minter can make this call\""
															},
															"value": "Only minter can make this call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e505dea204c1624358625238674cac423487dec0c44b91b6e20aa4f7dc6dec5",
																"typeString": "literal_string \"Only minter can make this call\""
															}
														],
														"id": 2081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3727:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "3727:63:6"
											},
											{
												"id": 2089,
												"nodeType": "PlaceholderStatement",
												"src": "3800:1:6"
											}
										]
									},
									"id": 2091,
									"name": "minterOnly",
									"nameLocation": "3704:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3714:2:6"
									},
									"src": "3695:113:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2093,
							"src": "721:3089:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								1852,
								1856,
								1860
							]
						}
					],
					"src": "36:3774:6"
				},
				"id": 6
			}
		}
	}
}